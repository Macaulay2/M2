################################################################################
#
#  Github actions trigger (workflow script) for building Macaulay2
#
#    See https://help.github.com/en/actions for the documentation.
#
################################################################################

name: Build and Test Macaulay2

on:
  push:
    branches:
      - pre-master # when we're ready to merge 'development' into 'master', we merge it first into 'pre-master', so it can be tested
  pull_request:
    branches:
      - master
      - development
      - release-1.17
  schedule:
    # cron time in UTC
    # a scheduled job runs on the default branch: 'master'
    - cron: '0 6 * * *'

defaults:
  run:
    working-directory: M2/BUILD/build

jobs:
  build:
    if: github.repository == 'Macaulay2/M2' || contains(github.ref, 'global')
    name: ${{ matrix.build-system }}-${{ matrix.os }}-${{ matrix.compiler }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false  # eventually make this true
      matrix:
        build-system:
          - cmake
          - autotools
        os:
          - ubuntu-latest
          - macos-latest
        compiler:
          - default
        include:
          - build-system: cmake
            os: ubuntu-latest
            compiler: gcc9
            cxx: g++-9
            cc: gcc-9
          - build-system: cmake
            os: ubuntu-latest
            compiler: clang10
            cxx: clang++
            cc: clang
          # This build tests Clang rather than AppleClang (keep)
          - build-system: cmake
            os: macos-latest
            compiler: clang10
            cxx: clang++
            cc: clang
        exclude:
          - build-system: cmake
            os: macos-latest
            compiler: default

    steps:
      - uses: actions/checkout@v2

# ----------------------
#   Install missing tools and libraries for macOS
# ----------------------

      - name: Install requirements for macOS
        if: runner.os == 'macOS'
        run: |
          brew config
          # autoconf, libtool are already in the virtual env
          brew install automake ccache gnu-tar make ninja pkg-config yasm
          brew install bdw-gc boost cddlib eigen flint glpk libatomic_ops libomp mpfr mpir ncurses ntl tbb

# ----------------------
#   Install missing tools and libraries for Linux
# ----------------------

      - name: Install requirements for Linux
        if: runner.os == 'Linux'
        run: |
          sudo add-apt-repository -y ppa:macaulay2/macaulay2
          sudo apt-get update
          sudo apt-get install -y -q --no-install-recommends clang-10 gfortran libtool-bin ninja-build yasm ccache
          sudo apt-get install -y -q --no-install-recommends libatomic-ops-dev libboost-stacktrace-dev \
                  libncurses-dev libncurses5-dev libreadline-dev libeigen3-dev liblapack-dev libxml2-dev \
                  libgc-dev libgdbm-dev libglpk-dev libgmp3-dev libgtest-dev libmpfr-dev libntl-dev gfan \
                  libgivaro-dev libboost-regex-dev fflas-ffpack libflint-dev libmps-dev libfrobby-dev \
                  libsingular-dev singular-data libmemtailor-dev libmathic-dev libmathicgb-dev libcdd-dev \
                  cohomcalg topcom 4ti2 normaliz coinor-csdp nauty lrslib w3c-markup-validator

# ----------------------
#   Steps common to all build variants
# ----------------------

      - name: Prepare build environment
        run: |
          echo "CC=${{ matrix.cc }}" >> $GITHUB_ENV
          echo "CXX=${{ matrix.cxx }}" >> $GITHUB_ENV
          echo "LD_LIBRARY_PATH=`brew --prefix`/lib:$LD_LIBRARY_PATH" >> $GITHUB_ENV
          if [[ "${{ runner.os }}" == "Linux" ]]
          then echo "/usr/lib/ccache" >> $GITHUB_PATH
               # ccache doesn't seem to create the right symlink for clang-10 on ubuntu
               sudo ln -s `which clang-10`   /usr/lib/ccache
               sudo ln -s `which clang++-10` /usr/lib/ccache
          else echo `brew --prefix ccache`/libexec        >> $GITHUB_PATH
               echo `brew --prefix make  `/libexec/gnubin >> $GITHUB_PATH
          fi

      - uses: actions/cache@v2
        if: matrix.build-system == 'cmake' || matrix.os == 'macos-latest'
        id: restore-cache
        with:
          path: |
            ~/.ccache
            ~/work/M2/M2/M2/BUILD/build/usr-host
          key: build-cache-${{ runner.os }}-${{ matrix.compiler }}-${{ matrix.build-system }}-${{ hashFiles('**/cmake/*-libraries.cmake') }}
          restore-keys: |
            build-cache-${{ runner.os }}-${{ matrix.compiler }}-${{ matrix.build-system }}-
            build-cache-${{ runner.os }}-${{ matrix.compiler }}-
            build-cache-${{ runner.os }}-


# ----------------------
#   Configure and build M2 using CMake
# ----------------------

      - name: Configure Macaulay2 using CMake
        if: matrix.build-system == 'cmake' || matrix.os == 'macos-latest'
        run: |
          cmake -S../.. -B. -GNinja \
            -DCMAKE_BUILD_TYPE=MinSizeRel -DBUILD_NATIVE=OFF \
            -DCMAKE_SYSTEM_PREFIX_PATH=`brew --prefix` \
            -DCMAKE_INSTALL_PREFIX=/usr

      - name: Build libraries using Ninja
        if: matrix.build-system == 'cmake' || matrix.os == 'macos-latest'
        run: |
          cmake --build . --target build-libraries build-programs
          # TODO: perhaps store the distribution architecture in a file
          export ARCH=`basename usr-dist/x*`
          echo "`pwd`/usr-dist/$ARCH/libexec/Macaulay2/bin" >> $GITHUB_PATH

      - name: Build Macaulay2 using Ninja
        if: matrix.build-system == 'cmake'
        run: |
          cmake --build . --target M2-core M2-emacs install-packages
          if [[ "${{ matrix.os }}" == ubuntu-latest ]] && [[ "${{ matrix.compiler }}" == clang10 ]]; then
              sudo apt-get install -y -q --no-install-recommends dpkg-dev
              echo "GIT_COMMIT=`git describe --dirty --always --match HEAD`" >> $GITHUB_ENV
              cpack -G DEB
          fi

# ----------------------
#   Configure and build M2 using Autotools
# ----------------------

      - name: Configure Macaulay2 using Autotools
        if: matrix.build-system == 'autotools'
        run: |
          # Use the libraries and programs built by CMake
          # Compare with M2/BUILD/mahrud/Makefile
          # Set the path to the CMake build directory here
          export CMAKE_BUILD_DIR=`pwd`
          export      CPPFLAGS=-I$CMAKE_BUILD_DIR/usr-host/include
          export       LDFLAGS=-L$CMAKE_BUILD_DIR/usr-host/lib
          export PKG_CONFIG_PATH=$CMAKE_BUILD_DIR/usr-host/lib/pkgconfig:$PKG_CONFIG_PATH

          make -C ../.. get-libtool get-automake get-autoconf
          make -C ../.. all
          ../../configure --enable-download

      - name: Build Macaulay2 using Make
        if: matrix.build-system == 'autotools'
        run: |
          make

# ----------------------
#   Run tests
# ----------------------

      - name: Run Tests using CTest
        if: matrix.build-system == 'cmake' && matrix.os == 'ubuntu-latest' && matrix.compiler == 'default'
        run: |
          cmake --build . --target M2-tests
          cmake --build . --target M2-unit-tests
          ctest -j1 --output-on-failure -R "unit-tests"
          # TODO: remove the excluded normal tests
          ctest -j4 --output-on-failure -R "normal/" -E "command|program|threads"
          ctest -j4 --output-on-failure -R "ComputationsBook"
          # TODO: add engine tests

      - name: Run Tests using Autotools
        if: matrix.build-system == 'autotools' && matrix.os == 'ubuntu-latest' && matrix.compiler == 'default'
        run: |
          make check -o check-in-libraries
          make -C Macaulay2/html-check-links check

# ----------------------
#   Upload build artifacts
# ----------------------

      - name: Upload build logs
        if: always()
        uses: actions/upload-artifact@v2
        with:
           name: ${{ matrix.build-system }}-${{ matrix.os }}-${{ matrix.compiler }}-logs
           path: |
             # Autotools
             M2/BUILD/build/config.log
             M2/BUILD/build/libraries/*/build/*/config.log
             # CMake
             M2/BUILD/build/CMakeFiles/CMakeCache.txt
             M2/BUILD/build/CMakeFiles/CMake(Error|Output).log
             M2/BUILD/build/libraries/*/build/config.log
             # Example errors
             M2/BUILD/build/usr-dist/common/share/doc/Macaulay2/*/example-output/*.errors

      - name: Upload Macaulay2 package for Ubuntu (x86_64)
        if: matrix.build-system == 'cmake' && matrix.os == 'ubuntu-latest' && matrix.compiler == 'clang10' && success()
        uses: actions/upload-artifact@v2
        with:
          name: Macaulay2-${{ env.GIT_COMMIT }}-ubuntu-x86_64
          path: |
            M2/BUILD/build/Macaulay2-*
          retention-days: 1
