-- version 0.9.2
{
"A" => {
  "class" => "PolynomialRing",
  "generators" => "{a, b, c, d, e}",
  "degrees" => "{{1}, {1}, {1}, {1}, {1}}",
  "toString" => "A",
  "coefficientRing" => "QQ",
},
"o1" => {
  "class" => "List",
  "toString" => "{{1, 1, 1, 1, 1}, {0, 1, 2, 7, 8}}",
},
"R" => {
  "class" => "PolynomialRing",
  "generators" => "{y_1, y_2, y_3, y_4, y_5, y_6, y_7, y_8, y_9, y_10, y_11, y_12, y_13, y_14, y_15, y_16, y_17, y_18, y_19, y_20, y_21, y_22}",
  "degrees" => "{{1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}}",
  "toString" => "R",
  "coefficientRing" => "QQ",
},
"a" => {
  "class" => "A",
  "toString" => "a",
  "degree" => "{1}",
},
"e" => {
  "class" => "A",
  "toString" => "e",
  "degree" => "{1}",
},
"b" => {
  "class" => "A",
  "toString" => "b",
  "degree" => "{1}",
},
"c" => {
  "class" => "A",
  "toString" => "c",
  "degree" => "{1}",
},
"d" => {
  "class" => "A",
  "toString" => "d",
  "degree" => "{1}",
},
"o2" => {
  "class" => "PolynomialRing",
  "generators" => "{a, b, c, d, e}",
  "degrees" => "{{1, 0}, {1, 1}, {1, 2}, {1, 7}, {1, 8}}",
  "coefficientRing" => "QQ",
},
"o3" => {
  "class" => "Net",
  "toString" => "QQ [a, b, c, d, e, Degrees => {{1, 0}, {1, 1}, {1, 2}, {1, 7}, {1, 8}}]",
},
"B" => {
  "class" => "PolynomialRing",
  "generators" => "{z_1, z_2, z_3, z_4, z_5, z_6, z_7, z_8, z_9, z_10, z_11, z_12, z_13, z_14, z_15, z_16, z_17, z_18, z_19, z_20, z_21, z_22, z_23, z_24, z_25, z_26, z_27, z_28, z_29, z_30, z_31, z_32, z_33, z_34, z_35, z_36, z_37, z_38, z_39, z_40, z_41, z_42, z_43, z_44}",
  "degrees" => "{{1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}}",
  "toString" => "B",
  "coefficientRing" => "QQ",
},
"o4" => {
  "class" => "Matrix",
  "toString" => "matrix {{1, -2, 1, 0, 0}, {0, 5, -6, 1, 0}, {0, 6, -7, 0, 1}}",
  "ring" => "ZZ",
  "degrees ambient target" => "{{}, {}, {}}",
  "degrees ambient source" => "{{}, {}, {}, {}, {}}",
  "degree" => "{}",
},
"SparseMutableMatrix" => {
  "class" => "Type",
  "toString" => "SparseMutableMatrix",
},
"newSparseMatrix" => {
},
"sparseMutableMatrix" => {
},
"numrows" => {
},
"numcols" => {
},
"iden" => {
},
"sparsemat" => {
},
"setEntry" => {
},
"getEntry" => {
},
"getRowChange" => {
},
"getColumnChange" => {
},
"setRowChange" => {
},
"setColumnChange" => {
},
"rscale" => {
},
"cscale" => {
},
"raxy" => {
},
"caxy" => {
},
"rflip" => {
},
"cflip" => {
},
"creduce" => {
},
"cgcdreduce" => {
},
"csort" => {
},
"dot" => {
},
"findOne" => {
},
"reducePivots" => {
},
"reduceCompress" => {
},
"LLLComputation" => {
  "class" => "Type",
  "toString" => "LLLComputation",
},
"threshold" => {
  "class" => "Symbol",
  "toString" => "threshold",
},
"newLLLComputation" => {
},
"changeOfBasis" => {
  "class" => "Symbol",
  "toString" => "changeOfBasis",
},
"k" => {
  "class" => "Symbol",
  "toString" => "k",
},
"kmax" => {
  "class" => "Symbol",
  "toString" => "kmax",
},
"D" => {
  "class" => "Symbol",
  "toString" => "D",
},
"lambda" => {
  "class" => "Symbol",
  "toString" => "lambda",
},
"doLLL" => {
},
"j" => {
  "class" => "Symbol",
  "toString" => "j",
},
"u" => {
  "class" => "Symbol",
  "toString" => "u",
},
"i" => {
  "class" => "QQ [a, b, c, d, e, f, g, h, i, Degrees=>{{1, 0, 0, 1, 0, 0}, {1, 0, 0, 0, 1, 0}, {1, 0, 0, 0, 0, 1}, {1, 1, 0, 1, 0, 0}, {1, 1, 0, 0, 1, 0}, {1, 1, 0, 0, 0, 1}, {1, 0, 1, 1, 0, 0}, {1, 0, 1, 0, 1, 0}, {1, 0, 1, 0, 0, 1}}, MonomialSize=>16]",
  "toString" => "i",
  "degree" => "{1, 0, 1, 0, 0, 1}",
},
"ell" => {
  "class" => "Symbol",
  "toString" => "ell",
},
"isDone" => {
  "class" => "Symbol",
  "toString" => "isDone",
},
"newLLLEngineComputation" => {
},
"LLLstate" => {
  "class" => "Symbol",
  "toString" => "LLLstate",
},
"doEngineLLL" => {
},
"Threshold" => {
  "class" => "Symbol",
  "toString" => "Threshold",
},
"ChangeOfBasisMatrix" => {
  "class" => "Symbol",
  "toString" => "ChangeOfBasisMatrix",
},
"Steps" => {
  "class" => "Symbol",
  "toString" => "Steps",
},
"LLL" => {
},
"Status" => {
  "class" => "Symbol",
  "toString" => "Status",
},
"LLLKernelComputation" => {
  "class" => "Type",
  "toString" => "LLLKernelComputation",
},
"newLLLKernelComputation" => {
},
"H" => {
  "class" => "Matrix",
  "toString" => "matrix {{1, 1, 2, 2, 3, 3}, {2, 3, 1, 3, 1, 2}, {3, 2, 3, 1, 2, 1}}",
  "ring" => "ZZ",
  "degrees ambient target" => "{{}, {}, {}}",
  "degrees ambient source" => "{{}, {}, {}, {}, {}, {}}",
  "degree" => "{}",
},
"F" => {
  "class" => "RingMap",
  "toString" => "map(A,A,{d^8+1, d^4, d^2, d, e})",
},
"doKernelLLL" => {
},
"kernelLLL" => {
},
"LLLHermiteComputation" => {
  "class" => "Type",
  "toString" => "LLLHermiteComputation",
},
"newLLLHermiteComputation" => {
},
"nrows" => {
  "class" => "Symbol",
  "toString" => "nrows",
},
"doHermiteLLL" => {
},
"row1" => {
  "class" => "Symbol",
  "toString" => "row1",
},
"row2" => {
  "class" => "Symbol",
  "toString" => "row2",
},
"round" => {
},
"hermiteLLL" => {
},
"gcdLLL" => {
},
"gram" => {
},
"gramMultipliers" => {
},
"isLLL" => {
},
"aLLL" => {
},
"integralLLL" => {
},
"REDI" => {
  "class" => "Symbol",
  "toString" => "REDI",
},
"SWAPI" => {
  "class" => "Symbol",
  "toString" => "SWAPI",
},
"lam" => {
  "class" => "Symbol",
  "toString" => "lam",
},
"akernelLLL" => {
},
"agcdLLL" => {
},
"RED" => {
  "class" => "Symbol",
  "toString" => "RED",
},
"SWAP" => {
  "class" => "Symbol",
  "toString" => "SWAP",
},
"ahermiteLLL" => {
},
"MINUS" => {
  "class" => "Symbol",
  "toString" => "MINUS",
},
"RED2" => {
  "class" => "Symbol",
  "toString" => "RED2",
},
"SWAP2" => {
  "class" => "Symbol",
  "toString" => "SWAP2",
},
"initLLL" => {
},
"calcLLL" => {
},
"testLLL" => {
},
"m1" => {
  "class" => "Symbol",
  "toString" => "m1",
},
"m2" => {
  "class" => "Symbol",
  "toString" => "m2",
},
"h" => {
  "class" => "QQ [a, b, c, d, e, f, g, h, i, Degrees=>{{1, 0, 0, 1, 0, 0}, {1, 0, 0, 0, 1, 0}, {1, 0, 0, 0, 0, 1}, {1, 1, 0, 1, 0, 0}, {1, 1, 0, 0, 1, 0}, {1, 1, 0, 0, 0, 1}, {1, 0, 1, 1, 0, 0}, {1, 0, 1, 0, 1, 0}, {1, 0, 1, 0, 0, 1}}, MonomialSize=>16]",
  "toString" => "h",
  "degree" => "{1, 0, 1, 0, 1, 0}",
},
"m3" => {
  "class" => "Symbol",
  "toString" => "m3",
},
"m4" => {
  "class" => "Symbol",
  "toString" => "m4",
},
"h2" => {
  "class" => "Symbol",
  "toString" => "h2",
},
"o6" => {
  "class" => "Matrix",
  "toString" => "matrix {{0, 1, 2}, {1, -1, 0}, {-1, 0, -3}, {-1, -1, 2}, {1, 1, -1}}",
  "ring" => "ZZ",
  "degrees ambient target" => "{{}, {}, {}, {}, {}}",
  "degrees ambient source" => "{{}, {}, {}}",
  "degree" => "{}",
},
"o7" => {
  "class" => "Matrix",
  "toString" => "matrix {{0, 1, -1, -1, 1}, {1, -1, 0, -1, 1}, {2, 0, -3, 2, -1}}",
  "ring" => "ZZ",
  "degrees ambient target" => "{{}, {}, {}}",
  "degrees ambient source" => "{{}, {}, {}, {}, {}}",
  "degree" => "{}",
},
"toBinomial" => {
},
"o8" => {
},
"J" => {
  "class" => "Ideal",
  "ring" => "T",
  "toString" => "ideal(a^2*c^3*e-b*d^3*f^2*z_1,b^8*g^4-a^2*c*d*e^4*f^4*z_2,b^7*c^2*g^4-d^4*e^3*f^6*z_3,a*b^4*c^7*f^3-e^8*g^7*z_4,b^5*c^4*d^3*f^5-a*e^9*g^7*z_5,a^2*b^6*c^5*g^4-d^7*e^2*f^8*z_6,a^3*b^3*c^10*f-d^3*e^7*g^7*z_7,b^12*c^6-a*d*e^12*f*g^3*z_8,b^13*c^3*d^2*f-a^3*e^13*g^3*z_9,b^3*e^5*g^11-a*c^5*d^4*f^9*z_10,a^3*c^8*d*f^7-b^4*e^4*g^11*z_11,b^6*c*d^6*f^7-a^3*e^10*g^7*z_12,a*b^2*e^6*g^11-c^2*d^7*f^11*z_13,a^5*b^2*c^13-d^6*e^6*f*g^7*z_14,a*b^11*c^9-d^4*e^11*f^3*g^3*z_15,a^5*c^11*f^5-b^5*d^2*e^3*g^11*z_16,a^4*b^5*c^8*g^4-d^10*e*f^10*z_17,b^14*d^5*f^3-a^5*e^14*g^3*z_18,a^3*b*c*e^7*g^11-d^10*f^13*z_19,a^7*c^14*f^3-b^6*d^5*e^2*g^11*z_20,a^7*b*c^16-d^9*e^5*f^3*g^7*z_21,a^5*c^2*e^11*g^7-b^7*d^9*f^9*z_22,b^21*c^2*d*g-a^5*e^17*f^3*z_23,a^3*b^10*c^12-d^7*e^10*f^5*g^3*z_24,a^6*b^4*c^11*g^4-d^13*f^12*z_25,b^20*c^5*g-a^3*d^2*e^16*f^5*z_26,b^22*d^4*g-a^7*c*e^18*f*z_27,a^9*c^17*f-b^7*d^8*e*g^11*z_28,a^9*c^19-d^12*e^4*f^5*g^7*z_29,a^2*b*c^12*d^4*f^12-e^13*g^18*z_30,b^2*c^9*d^7*f^14-e^14*g^18*z_31,a^2*e^15*g^18-b^3*c^6*d^10*f^16*z_32,b^34*c^5*d^3-a^8*e^30*f^2*g^2*z_33,b^35*c^2*d^6-a^10*e^31*g^2*z_34,b^13*d^15*f^16-a^8*c*e^21*g^14*z_35,b^36*d^9*f^2-a^12*c*e^32*g^2*z_36,a*c^14*d^11*f^23-b*e^19*g^29*z_37,a*e^20*g^29-c^11*d^14*f^25*z_38,b^57*c*d^10-a^17*e^49*f*g*z_39,b^58*d^13*f-a^19*c^2*e^50*g*z_40,b^79*d^14-a^24*e^67*f^2*z_41,b*e^39*g^58-c^25*d^25*f^48*z_42,b*c^34*d^32*f^62-e^53*g^76*z_43,c^59*d^57*f^110-e^92*g^134*z_44)",
  "degrees source generators" => "{{7}, {13}, {14}, {16}, {18}, {18}, {18}, {19}, {20}, {20}, {20}, {21}, {21}, {21}, {22}, {22}, {22}, {23}, {24}, {25}, {25}, {26}, {26}, {26}, {26}, {27}, {28}, {28}, {29}, {32}, {33}, {36}, {43}, {44}, {45}, {48}, {50}, {51}, {69}, {73}, {94}, {99}, {130}, {227}}",
},
"o9" => {
  "class" => "Ideal",
  "ring" => "o2",
  "toString" => "ideal(-c*d+b*e,-b*d+a*e,a^2*d^2-c^3*e)",
  "degrees source generators" => "{{2, 9}, {2, 8}, {4, 14}}",
},
"toricIdeal" => {
},
"o11" => {
},
"I" => {
  "class" => "Ideal",
  "ring" => "A",
  "toString" => "ideal(-b^2+a-1,-c^2+b,-d^2+c,a^2-e^2)",
  "degrees source generators" => "{{2}, {2}, {2}, {2}}",
},
"o12" => {
  "class" => "Ideal",
  "ring" => "QQ [a, b, c, d, e, Degrees=>{{1, 0}, {1, 1}, {1, 2}, {1, 7}, {1, 8}}, MonomialSize=>16]",
  "toString" => "ideal(c*d-b*e,b*d-a*e,b^2-a*c,a^2*d^2-c^3*e,c^4-a^3*e,b*c^3-a^3*d,a*d^4-c^2*e^3,d^6-c*e^5)",
  "degrees source generators" => "{{2, 9}, {2, 8}, {2, 2}, {4, 14}, {4, 8}, {4, 7}, {5, 28}, {6, 42}}",
},
"o13" => {
  "class" => "Matrix",
  "toString" => "matrix {{c*d-b*e}, {b*d-a*e}, {b^2-a*c}, {a^2*d^2-c^3*e}, {c^4-a^3*e}, {b*c^3-a^3*d}, {a*d^4-c^2*e^3}, {d^6-c*e^5}}",
  "ring" => "QQ [a, b, c, d, e, Degrees=>{{1, 0}, {1, 1}, {1, 2}, {1, 7}, {1, 8}}, MonomialSize=>16]",
  "degrees ambient target" => "{{-2, -9}, {-2, -8}, {-2, -2}, {-4, -14}, {-4, -8}, {-4, -7}, {-5, -28}, {-6, -42}}",
  "degrees ambient source" => "{{0, 0}}",
  "degree" => "{0, 0}",
},
"graver" => {
},
"o14" => {
},
"Graver" => {
  "class" => "Matrix",
  "toString" => "matrix {{-c^2+b*d, -b*c+a*d, -b^2+a*c, -c^3+a*d^2, -b^3+a^2*d}}",
  "ring" => "QQ [a, b, c, d, Degrees=>{{1, 0}, {1, 1}, {1, 2}, {1, 3}}, MonomialSize=>16]",
  "degrees ambient target" => "{{0, 0}}",
  "degrees ambient source" => "{{2, 4}, {2, 3}, {2, 2}, {3, 6}, {3, 3}}",
  "degree" => "{0, 0}",
},
"o15" => {
  "class" => "Matrix",
  "toString" => "matrix {{-c*d+b*e, -b*d+a*e, -b^2+a*c, -c*d^2+a*e^2, -a^2*d^2+c^3*e, -c^4+a^2*b*d, -c^4+a^3*e, -b*c^3+a^3*d, -a*d^4+c^2*e^3, -a*b*d^3+c^3*e^2, -a^2*d^3+b*c^2*e^2, -a*b^2*d^2+c^4*e, -a^3*d^2+b^2*c^2*e, -c^5+a*b^3*d, -c^5+a^2*b^2*e, -b^2*c^3+a^4*e, -b^3*c^2+a^4*d, -d^6+c*e^5, -b*d^5+c^2*e^4, -a*d^5+b*c*e^4, -b^2*d^4+c^3*e^3, -a^2*d^4+b^2*c*e^3, -b^3*d^3+c^4*e^2, -a^3*d^3+b^3*c*e^2, -b^4*d^2+c^5*e, -a^4*d^2+b^4*c*e, -c^6+b^5*d, -c^6+a*b^4*e, -b^4*c^2+a^5*e, -b^5*c+a^5*d, -d^7+b*e^6, -a*d^6+b^2*e^5, -a^2*d^5+b^3*e^4, -a^3*d^4+b^4*e^3, -a^4*d^3+b^5*e^2, -a^5*d^2+b^6*e, -c^7+a^5*d^2, -c^7+b^6*e, -b^6*c+a^6*e, -b^7+a^6*d, -d^8+a*e^7, -b^8+a^7*e}}",
  "ring" => "QQ [a, b, c, d, e, Degrees=>{{1, 0}, {1, 1}, {1, 2}, {1, 7}, {1, 8}}, MonomialSize=>16]",
  "degrees ambient target" => "{{0, 0}}",
  "degrees ambient source" => "{{2, 9}, {2, 8}, {2, 2}, {3, 16}, {4, 14}, {4, 8}, {4, 8}, {4, 7}, {5, 28}, {5, 22}, {5, 21}, {5, 16}, {5, 14}, {5, 10}, {5, 10}, {5, 8}, {5, 7}, {6, 42}, {6, 36}, {6, 35}, {6, 30}, {6, 28}, {6, 24}, {6, 21}, {6, 18}, {6, 14}, {6, 12}, {6, 12}, {6, 8}, {6, 7}, {7, 49}, {7, 42}, {7, 35}, {7, 28}, {7, 21}, {7, 14}, {7, 14}, {7, 14}, {7, 8}, {7, 7}, {8, 56}, {8, 8}}",
  "degree" => "{0, 0}",
},
"graverFibers" => {
},
"o16" => {
},
"fibers" => {
  "class" => "HashTable",
  "toString" => "new HashTable from {{3, 6} => matrix {{a*d^2, b*c*d, c^3}}, {2, 2} => matrix {{a*c, b^2}}, {2, 3} => matrix {{a*d, b*c}}, {3, 3} => matrix {{a^2*d, a*b*c, b^3}}, {2, 4} => matrix {{b*d, c^2}}}",
},
"o17" => {
  "class" => "HashTable",
  "toString" => "new HashTable from {{7, 42} => matrix {{a*c*e^5, a*d^6, b^2*e^5, c^2*d^2*e^3}}, {5, 28} => matrix {{a*d^4, c^2*e^3}}, {6, 35} => matrix {{a*d^5, b*c*e^4, c^2*d*e^3}}, {2, 8} => matrix {{a*e, b*d}}, {6, 36} => matrix {{a*d^4*e, b*d^5, c^2*e^4}}, {2, 9} => matrix {{b*e, c*d}}, {3, 16} => matrix {{a*e^2, b*d*e, c*d^2}}, {8, 56} => matrix {{a*e^7, b*d*e^6, c*d^2*e^5, d^8}}, {7, 49} => matrix {{b*e^6, c*d*e^5, d^7}}, {6, 42} => matrix {{c*e^5, d^6}}, {8, 8} => matrix {{a^7*e, a^6*b*d, a^4*c^4, b^8}}, {7, 7} => matrix {{a^6*d, a^3*b*c^3, b^7}}, {7, 8} => matrix {{a^6*e, a^5*b*d, a^3*c^4, b^6*c}}, {7, 14} => matrix {{a^5*d^2, a^3*c^3*e, a^2*b*c^3*d, b^6*e, b^5*c*d, c^7}}, {6, 7} => matrix {{a^5*d, a^2*b*c^3, b^5*c}}, {6, 8} => matrix {{a^5*e, a^4*b*d, a^2*c^4, b^4*c^2}}, {6, 12} => matrix {{a^3*c^2*e, a^2*b*c^2*d, a*b^4*e, b^5*d, c^6}}, {7, 21} => matrix {{a^4*d^3, a^2*b*c^2*e^2, a^2*c^3*d*e, a*b*c^3*d^2, b^5*e^2, b^3*c^2*d^2}}, {5, 7} => matrix {{a^4*d, a*b*c^3, b^3*c^2}}, {6, 14} => matrix {{a^4*d^2, a^2*c^3*e, a*b*c^3*d, b^4*c*e, b^3*c^2*d}}, {5, 8} => matrix {{a^4*e, a^3*b*d, a*c^4, b^2*c^3}}, {5, 10} => matrix {{a^3*c*e, a^2*b^2*e, a^2*b*c*d, a*b^3*d, c^5}}, {6, 18} => matrix {{a^3*c*e^2, a^2*b^2*e^2, a^2*c^2*d^2, b^4*d^2, c^5*e}}, {7, 28} => matrix {{a^3*d^4, a^2*c^2*e^3, a*c^3*d^2*e, b^4*e^3, b*c^3*d^3}}, {5, 14} => matrix {{a^3*d^2, a*c^3*e, b^2*c^2*e, b*c^3*d}}, {4, 7} => matrix {{a^3*d, b*c^3}}, {6, 21} => matrix {{a^3*d^3, a*b*c^2*e^2, a*c^3*d*e, b^3*c*e^2, b*c^3*d^2}}, {4, 8} => matrix {{a^3*e, a^2*b*d, c^4}}, {5, 16} => matrix {{a^3*e^2, a^2*c*d^2, a*b^2*d^2, c^4*e}}, {6, 24} => matrix {{a^3*e^3, a^2*c*d^2*e, a*b*c*d^3, b^3*d^3, c^4*e^2}}, {7, 35} => matrix {{a^2*d^5, a*b*c*e^4, a*c^2*d*e^3, b^3*e^4, c^3*d^3*e}}, {5, 21} => matrix {{a^2*d^3, b*c^2*e^2, c^3*d*e}}, {4, 14} => matrix {{a^2*d^2, c^3*e}}, {6, 28} => matrix {{a^2*d^4, a*c^2*e^3, b^2*c*e^3, c^3*d^2*e}}, {5, 22} => matrix {{a^2*d^2*e, a*b*d^3, c^3*e^2}}, {2, 2} => matrix {{a*c, b^2}}, {6, 30} => matrix {{a^2*d^2*e^2, a*c*d^4, b^2*d^4, c^3*e^3}}}",
},
"generateAmonos" => {
},
"monos" => {
  "class" => "List",
  "toString" => "{{f*h, c*h, f*g, e*g, c*g, b*g, c*e, c*d, b*d}, {f*h, d*h, c*h, f*g, c*g, b*g, c*e, c*d, b*d}, {d*i, f*h, d*h, c*h, c*g, b*g, c*e, c*d, b*d}, {e*i, c*h, f*g, e*g, c*g, b*g, c*e, c*d, b*d}, {e*i, d*i, c*h, e*g, c*g, b*g, c*e, c*d, b*d}, {e*i, d*i, d*h, c*h, c*g, b*g, c*e, c*d, b*d}, {f*h, c*h, f*g, e*g, c*g, b*g, c*e, a*e, c*d}, {e*i, c*h, f*g, e*g, c*g, b*g, c*e, a*e, c*d, b*d*i}, {e*i, c*h, f*g, e*g, c*g, b*g, c*e, a*e, c*d, a*f*h}, {e*i, d*i, c*h, e*g, c*g, b*g, c*e, a*e, c*d}, {f*h, c*h, f*g, e*g, c*g, b*g, a*f, c*e, a*e}, {e*i, c*h, f*g, e*g, c*g, b*g, a*f, c*e, a*e}, {f*h, c*h, f*g, e*g, c*g, b*g, b*f, c*d, b*d}, {f*h, d*h, c*h, f*g, c*g, b*g, b*f, c*d, b*d}, {d*i, f*h, d*h, c*h, c*g, b*g, b*f, c*d, b*d}, {f*h, c*h, f*g, e*g, c*g, b*g, b*f, a*f, b*d}, {f*h, d*h, c*h, f*g, c*g, b*g, b*f, a*f, b*d}, {f*h, c*h, f*g, e*g, c*g, b*g, b*f, a*f, a*e}, {f*h, d*h, c*h, a*h, f*g, c*g, c*e, c*d, b*d}, {d*i, f*h, d*h, c*h, a*h, c*g, c*e, c*d, b*d, b*f*g}, {d*i, f*h, d*h, c*h, a*h, c*g, c*e, c*d, b*d, a*e*i}, {e*i, d*i, d*h, c*h, a*h, c*g, c*e, c*d, b*d}, {f*h, c*h, a*h, f*g, e*g, c*g, c*e, a*e, c*d}, {f*h, d*h, c*h, a*h, f*g, c*g, c*e, a*e, c*d}, {d*i, f*h, d*h, c*h, a*h, c*g, c*e, a*e, c*d}, {e*i, c*h, a*h, f*g, e*g, c*g, c*e, a*e, c*d}, {e*i, d*i, c*h, a*h, e*g, c*g, c*e, a*e, c*d}, {e*i, d*i, d*h, c*h, a*h, c*g, c*e, a*e, c*d}, {f*h, c*h, a*h, f*g, e*g, c*g, a*f, c*e, a*e}, {f*h, d*h, c*h, a*h, f*g, c*g, a*f, c*e, a*e}, {e*i, c*h, a*h, f*g, e*g, c*g, a*f, c*e, a*e}, {f*h, d*h, c*h, a*h, f*g, c*g, b*f, c*d, b*d}, {d*i, f*h, d*h, c*h, a*h, c*g, b*f, c*d, b*d}, {f*h, d*h, c*h, a*h, f*g, c*g, b*f, a*f, b*d}, {f*h, c*h, a*h, f*g, e*g, c*g, b*f, a*f, a*e}, {f*h, d*h, c*h, a*h, f*g, c*g, b*f, a*f, a*e}, {d*i, a*i, f*h, d*h, c*h, a*h, c*e, c*d, b*d}, {e*i, d*i, a*i, d*h, c*h, a*h, c*e, c*d, b*d}, {d*i, a*i, f*h, d*h, c*h, a*h, c*e, a*e, c*d}, {e*i, d*i, a*i, c*h, a*h, e*g, c*e, a*e, c*d}, {e*i, d*i, a*i, d*h, c*h, a*h, c*e, a*e, c*d}, {a*i, f*h, c*h, a*h, f*g, e*g, a*f, c*e, a*e}, {a*i, f*h, d*h, c*h, a*h, f*g, a*f, c*e, a*e}, {d*i, a*i, f*h, d*h, c*h, a*h, a*f, c*e, a*e}, {e*i, a*i, c*h, a*h, f*g, e*g, a*f, c*e, a*e}, {e*i, d*i, a*i, c*h, a*h, e*g, a*f, c*e, a*e}, {e*i, d*i, a*i, d*h, c*h, a*h, a*f, c*e, a*e}, {d*i, a*i, f*h, d*h, c*h, a*h, b*f, c*d, b*d}, {a*i, f*h, d*h, c*h, a*h, f*g, b*f, a*f, b*d}, {d*i, a*i, f*h, d*h, c*h, a*h, b*f, a*f, b*d}, {a*i, f*h, c*h, a*h, f*g, e*g, b*f, a*f, a*e}, {a*i, f*h, d*h, c*h, a*h, f*g, b*f, a*f, a*e, c*e*g}, {a*i, f*h, d*h, c*h, a*h, f*g, b*f, a*f, a*e, b*d*i}, {d*i, a*i, f*h, d*h, c*h, a*h, b*f, a*f, a*e}, {e*i, b*i, f*g, e*g, c*g, b*g, c*e, c*d, b*d}, {e*i, d*i, b*i, e*g, c*g, b*g, c*e, c*d, b*d}, {e*i, d*i, b*i, d*h, c*g, b*g, c*e, c*d, b*d}, {e*i, b*i, f*g, e*g, c*g, b*g, c*e, a*e, c*d}, {e*i, d*i, b*i, e*g, c*g, b*g, c*e, a*e, c*d}, {e*i, b*i, f*g, e*g, c*g, b*g, a*f, c*e, a*e}, {b*i, f*h, f*g, e*g, c*g, b*g, b*f, c*d, b*d}, {b*i, f*h, d*h, f*g, c*g, b*g, b*f, c*d, b*d}, {d*i, b*i, f*h, d*h, c*g, b*g, b*f, c*d, b*d}, {e*i, b*i, f*g, e*g, c*g, b*g, b*f, c*d, b*d}, {e*i, d*i, b*i, e*g, c*g, b*g, b*f, c*d, b*d}, {e*i, d*i, b*i, d*h, c*g, b*g, b*f, c*d, b*d}, {b*i, f*h, f*g, e*g, c*g, b*g, b*f, a*f, b*d, c*d*h}, {b*i, f*h, f*g, e*g, c*g, b*g, b*f, a*f, b*d, a*e*i}, {b*i, f*h, d*h, f*g, c*g, b*g, b*f, a*f, b*d}, {e*i, b*i, f*g, e*g, c*g, b*g, b*f, a*f, b*d}, {b*i, f*h, f*g, e*g, c*g, b*g, b*f, a*f, a*e}, {e*i, b*i, f*g, e*g, c*g, b*g, b*f, a*f, a*e}, {e*i, d*i, b*i, a*i, e*g, b*g, c*e, c*d, b*d}, {e*i, d*i, b*i, a*i, d*h, b*g, c*e, c*d, b*d}, {e*i, d*i, b*i, a*i, e*g, b*g, c*e, a*e, c*d}, {e*i, b*i, a*i, f*g, e*g, b*g, a*f, c*e, a*e}, {e*i, d*i, b*i, a*i, e*g, b*g, a*f, c*e, a*e}, {d*i, b*i, a*i, f*h, d*h, b*g, b*f, c*d, b*d}, {e*i, d*i, b*i, a*i, e*g, b*g, b*f, c*d, b*d}, {e*i, d*i, b*i, a*i, d*h, b*g, b*f, c*d, b*d, c*e*g}, {e*i, d*i, b*i, a*i, d*h, b*g, b*f, c*d, b*d, a*f*h}, {b*i, a*i, f*h, f*g, e*g, b*g, b*f, a*f, b*d}, {b*i, a*i, f*h, d*h, f*g, b*g, b*f, a*f, b*d}, {d*i, b*i, a*i, f*h, d*h, b*g, b*f, a*f, b*d}, {e*i, b*i, a*i, f*g, e*g, b*g, b*f, a*f, b*d}, {e*i, d*i, b*i, a*i, e*g, b*g, b*f, a*f, b*d}, {e*i, d*i, b*i, a*i, d*h, b*g, b*f, a*f, b*d}, {b*i, a*i, f*h, f*g, e*g, b*g, b*f, a*f, a*e}, {e*i, b*i, a*i, f*g, e*g, b*g, b*f, a*f, a*e}, {e*i, d*i, b*i, a*i, e*g, b*g, b*f, a*f, a*e}, {e*i, d*i, b*i, a*i, d*h, a*h, c*e, c*d, b*d}, {e*i, d*i, b*i, a*i, a*h, e*g, c*e, a*e, c*d}, {e*i, d*i, b*i, a*i, d*h, a*h, c*e, a*e, c*d}, {e*i, b*i, a*i, a*h, f*g, e*g, a*f, c*e, a*e}, {e*i, d*i, b*i, a*i, a*h, e*g, a*f, c*e, a*e, c*d*h}, {e*i, d*i, b*i, a*i, a*h, e*g, a*f, c*e, a*e, b*f*g}, {e*i, d*i, b*i, a*i, d*h, a*h, a*f, c*e, a*e}, {d*i, b*i, a*i, f*h, d*h, a*h, b*f, c*d, b*d}, {e*i, d*i, b*i, a*i, d*h, a*h, b*f, c*d, b*d}, {b*i, a*i, f*h, d*h, a*h, f*g, b*f, a*f, b*d}, {d*i, b*i, a*i, f*h, d*h, a*h, b*f, a*f, b*d}, {e*i, d*i, b*i, a*i, d*h, a*h, b*f, a*f, b*d}, {b*i, a*i, f*h, a*h, f*g, e*g, b*f, a*f, a*e}, {b*i, a*i, f*h, d*h, a*h, f*g, b*f, a*f, a*e}, {d*i, b*i, a*i, f*h, d*h, a*h, b*f, a*f, a*e}, {e*i, b*i, a*i, a*h, f*g, e*g, b*f, a*f, a*e}, {e*i, d*i, b*i, a*i, a*h, e*g, b*f, a*f, a*e}, {e*i, d*i, b*i, a*i, d*h, a*h, b*f, a*f, a*e}}",
},
"o18" => {
},
"o20" => {
  "class" => "ZZ",
  "toString" => "281",
},
"findPositiveVector" => {
},
"o22" => {
},
"flips" => {
},
"o23" => {
},
"o24" => {
  "class" => "PolynomialRing",
  "generators" => "{a, b, c, d, e}",
  "degrees" => "{{1, 0}, {1, 1}, {1, 2}, {1, 7}, {1, 8}}",
  "coefficientRing" => "QQ",
},
"M" => {
  "class" => "Ideal",
  "ring" => "Y",
  "toString" => "ideal(a^2*c^3*e,b^8*g^4,b^7*c^2*g^4,a*b^4*c^7*f^3,b^5*c^4*d^3*f^5,a^2*b^6*c^5*g^4,a^3*b^3*c^10*f,b^12*c^6,b^13*c^3*d^2*f,b^3*e^5*g^11,a^3*c^8*d*f^7,b^6*c*d^6*f^7,a*b^2*e^6*g^11,a^5*b^2*c^13,a*b^11*c^9,a^5*c^11*f^5,a^4*b^5*c^8*g^4,b^14*d^5*f^3,a^3*b*c*e^7*g^11,a^7*c^14*f^3,a^7*b*c^16,a^5*c^2*e^11*g^7,b^21*c^2*d*g,a^3*b^10*c^12,a^6*b^4*c^11*g^4,b^20*c^5*g,b^22*d^4*g,a^9*c^17*f,a^9*c^19,a^2*b*c^12*d^4*f^12,b^2*c^9*d^7*f^14,a^2*e^15*g^18,b^34*c^5*d^3,b^35*c^2*d^6,b^13*d^15*f^16,b^36*d^9*f^2,a*c^14*d^11*f^23,a*e^20*g^29,b^57*c*d^10,b^58*d^13*f,b^79*d^14,b*e^39*g^58,b*c^34*d^32*f^62,c^59*d^57*f^110)",
  "degrees source generators" => "{{6, 29, 19, 23}, {12, 60, 60, 40}, {13, 68, 57, 39}, {15, 85, 63, 40}, {17, 93, 73, 51}, {17, 83, 62, 52}, {17, 92, 56, 53}, {18, 114, 96, 72}, {19, 113, 103, 83}, {19, 91, 67, 40}, {19, 89, 67, 40}, {20, 101, 86, 68}, {20, 93, 70, 46}, {20, 103, 55, 66}, {21, 129, 98, 79}, {21, 97, 67, 52}, {21, 98, 67, 65}, {22, 121, 116, 100}, {23, 102, 78, 60}, {24, 110, 67, 70}, {24, 118, 60, 79}, {25, 123, 103, 89}, {25, 148, 152, 115}, {25, 144, 103, 92}, {25, 113, 72, 78}, {26, 158, 151, 110}, {27, 155, 155, 134}, {27, 123, 67, 88}, {28, 133, 65, 92}, {31, 158, 109, 65}, {32, 166, 116, 70}, {35, 174, 129, 87}, {42, 254, 248, 198}, {43, 254, 249, 215}, {44, 217, 187, 155}, {47, 269, 264, 234}, {49, 245, 169, 100}, {50, 247, 172, 106}, {68, 399, 401, 347}, {72, 417, 412, 368}, {93, 544, 553, 479}, {98, 492, 338, 200}, {129, 652, 447, 265}, {226, 1138, 778, 460}}",
},
"o25" => {
  "class" => "Ideal",
  "ring" => "o24",
  "toString" => "ideal(a*e,c*d,a*c,a^2*d^2,a^2*b*d,a^3*d,c^2*e^3,c^3*e^2,c^4*e,c^5,c*e^5,a*d^5,b*e^6)",
  "degrees source generators" => "{{2, 8}, {2, 9}, {2, 2}, {4, 14}, {4, 8}, {4, 7}, {5, 28}, {5, 22}, {5, 16}, {5, 10}, {6, 42}, {6, 35}, {7, 49}}",
},
"o26" => {
  "class" => "List",
  "toString" => "{ideal(a*e,c*d,a*c,a^2*d^2,a^3*d,c^4,c^2*e^3,c^3*e^2,a*d^5,c*e^5,b*e^6), ideal(c*d,a*e,a*c,a^2*d^2,a^2*b*d,a^3*d,c^3*e^2,c^4*e,c^5,a*d^4,c*e^5,c^2*e^4,b*e^6), ideal(a*e,c*d,a*c,a^2*d^2,a^3*d,a^2*b*d,c^2*e^3,c^3*e^2,c^4*e,c^5,c*e^5,b*c*e^4,a*d^6,b*e^6), ideal(a*e,a*c,c*d,a^2*b*d,a^3*d,a^2*d^2,c^2*e^3,c^3*e^2,c^4*e,c^5,c*e^5,a*d^5,d^7)}",
},
"o27" => {
  "class" => "ZZ",
  "toString" => "4",
},
"stdMonomials" => {
},
"o29" => {
},
"o30" => {
  "class" => "PolynomialRing",
  "generators" => "{a, b, c, d, e}",
  "degrees" => "{{1, 0}, {1, 1}, {1, 2}, {1, 7}, {1, 8}}",
  "coefficientRing" => "QQ",
},
"o31" => {
  "class" => "Ideal",
  "ring" => "o30",
  "toString" => "ideal(a^3*d,a^2*b*d,a^2*d^2,a*b^3*d,a*b^2*d^2,a*b*d^3,a*c,a*d^4,a*e,b^5*d,b^4*d^2,b^3*d^3,b^2*d^4,b*d^5,b*e,c*e^5)",
  "degrees source generators" => "{{4, 7}, {4, 8}, {4, 14}, {5, 10}, {5, 16}, {5, 22}, {2, 2}, {5, 28}, {2, 8}, {6, 12}, {6, 18}, {6, 24}, {6, 30}, {6, 36}, {2, 9}, {6, 42}}",
},
"o32" => {
  "class" => "String",
  "toString" => "{b*c^3, c^4, c^3*e, c^5, c^4*e, c^3*e^2, b^2, c^2*e^3, b*d, c^6, c^5*e, c^4*e^2, c^3*e^3, c^2*e^4, c*d, d^6}",
},
"inequalities" => {
},
"o33" => {
},
"o34" => {
  "class" => "Matrix",
  "toString" => "matrix {{3, 2, 2, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0}, {-1, 1, 0, 3, 2, 1, -2, 0, -1, 5, 4, 3, 2, 1, 1, 0}, {-3, -4, -3, -5, -4, -3, 1, -2, 0, -6, -5, -4, -3, -2, -1, 1}, {1, 1, 2, 1, 2, 3, 0, 4, -1, 1, 2, 3, 4, 5, -1, -6}, {0, 0, -1, 0, -1, -2, 0, -3, 1, 0, -1, -2, -3, -4, 1, 5}}",
  "ring" => "ZZ",
  "degrees ambient target" => "{{}, {}, {}, {}, {}}",
  "degrees ambient source" => "{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}",
  "degree" => "{}",
},
"primitive" => {
},
"o35" => {
},
"toZZ" => {
},
"rotateMatrix" => {
},
"isRedundant" => {
},
"fourierMotzkin" => {
},
"polarCone" => {
},
"numRow" => {
  "class" => "ZZ",
  "toString" => "3",
},
"decideCoherence" => {
},
"o37" => {
},
"o38" => {
  "class" => "List",
  "toString" => "{0, 0, 1, 15, 18}",
},
"N" => {
  "class" => "Ideal",
  "ring" => "o30",
  "toString" => "ideal(a*e,c*d,a*c,c^3*e,a^3*d,c^4,a*d^4,a^2*d^3,c*e^5,c^2*e^4,d^7)",
  "degrees source generators" => "{{2, 8}, {2, 9}, {2, 2}, {4, 14}, {4, 7}, {4, 8}, {5, 28}, {5, 21}, {6, 42}, {6, 36}, {7, 49}}",
},
"o39" => {
  "class" => "Ideal",
  "ring" => "o30",
  "toString" => "ideal(a*e,c*d,a*c,c^3*e,a^3*d,c^4,a*d^4,a^2*d^3,c*e^5,c^2*e^4,d^7)",
  "degrees source generators" => "{{2, 8}, {2, 9}, {2, 2}, {4, 14}, {4, 7}, {4, 8}, {5, 28}, {5, 21}, {6, 42}, {6, 36}, {7, 49}}",
},
"o40" => {
  "class" => "Boolean",
  "toString" => "false",
},
"A22" => {
  "class" => "List",
  "toString" => "{{1, 1, 1, 1, 1, 1, 1, 1, 1}, {0, 0, 0, 1, 1, 1, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 1, 1, 1}, {1, 0, 0, 1, 0, 0, 1, 0, 0}, {0, 1, 0, 0, 1, 0, 0, 1, 0}, {0, 0, 1, 0, 0, 1, 0, 0, 1}}",
},
"o41" => {
  "class" => "List",
  "toString" => "{{1, 1, 1, 1, 1, 1, 1, 1, 1}, {0, 0, 0, 1, 1, 1, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 1, 1, 1}, {1, 0, 0, 1, 0, 0, 1, 0, 0}, {0, 1, 0, 0, 1, 0, 0, 1, 0}, {0, 0, 1, 0, 0, 1, 0, 0, 1}}",
},
"I22" => {
  "class" => "Ideal",
  "ring" => "QQ [a, b, c, d, e, f, g, h, i, Degrees=>{{1, 0, 0, 1, 0, 0}, {1, 0, 0, 0, 1, 0}, {1, 0, 0, 0, 0, 1}, {1, 1, 0, 1, 0, 0}, {1, 1, 0, 0, 1, 0}, {1, 1, 0, 0, 0, 1}, {1, 0, 1, 1, 0, 0}, {1, 0, 1, 0, 1, 0}, {1, 0, 1, 0, 0, 1}}, MonomialSize=>16]",
  "toString" => "ideal(f*h-e*i,c*h-b*i,f*g-d*i,e*g-d*h,c*g-a*i,b*g-a*h,c*e-b*f,c*d-a*f,b*d-a*e)",
  "degrees source generators" => "{{2, 1, 1, 0, 1, 1}, {2, 0, 1, 0, 1, 1}, {2, 1, 1, 1, 0, 1}, {2, 1, 1, 1, 1, 0}, {2, 0, 1, 1, 0, 1}, {2, 0, 1, 1, 1, 0}, {2, 1, 0, 0, 1, 1}, {2, 1, 0, 1, 0, 1}, {2, 1, 0, 1, 1, 0}}",
},
"f" => {
  "class" => "T",
  "toString" => "f",
  "degree" => "{1}",
},
"g" => {
  "class" => "T",
  "toString" => "g",
  "degree" => "{1}",
},
"o42" => {
  "class" => "Ideal",
  "ring" => "QQ [a, b, c, d, e, f, g, h, i, Degrees=>{{1, 0, 0, 1, 0, 0}, {1, 0, 0, 0, 1, 0}, {1, 0, 0, 0, 0, 1}, {1, 1, 0, 1, 0, 0}, {1, 1, 0, 0, 1, 0}, {1, 1, 0, 0, 0, 1}, {1, 0, 1, 1, 0, 0}, {1, 0, 1, 0, 1, 0}, {1, 0, 1, 0, 0, 1}}, MonomialSize=>16]",
  "toString" => "ideal(f*h-e*i,c*h-b*i,f*g-d*i,e*g-d*h,c*g-a*i,b*g-a*h,c*e-b*f,c*d-a*f,b*d-a*e)",
  "degrees source generators" => "{{2, 1, 1, 0, 1, 1}, {2, 0, 1, 0, 1, 1}, {2, 1, 1, 1, 0, 1}, {2, 1, 1, 1, 1, 0}, {2, 0, 1, 1, 0, 1}, {2, 0, 1, 1, 1, 0}, {2, 1, 0, 0, 1, 1}, {2, 1, 0, 1, 0, 1}, {2, 1, 0, 1, 1, 0}}",
},
"Graver22" => {
  "class" => "Matrix",
  "toString" => "matrix {{-f*h+e*i, -c*h+b*i, -f*g+d*i, -e*g+d*h, -c*g+a*i, -b*g+a*h, -c*e+b*f, -c*d+a*f, -b*d+a*e, -a*f*h+b*d*i, -c*d*h+a*e*i, -b*f*g+c*d*h, -b*f*g+a*e*i, -c*e*g+a*f*h, -c*e*g+b*d*i}}",
  "ring" => "QQ [a, b, c, d, e, f, g, h, i, Degrees=>{{1, 0, 0, 1, 0, 0}, {1, 0, 0, 0, 1, 0}, {1, 0, 0, 0, 0, 1}, {1, 1, 0, 1, 0, 0}, {1, 1, 0, 0, 1, 0}, {1, 1, 0, 0, 0, 1}, {1, 0, 1, 1, 0, 0}, {1, 0, 1, 0, 1, 0}, {1, 0, 1, 0, 0, 1}}, MonomialSize=>16]",
  "degrees ambient target" => "{{0, 0, 0, 0, 0, 0}}",
  "degrees ambient source" => "{{2, 1, 1, 0, 1, 1}, {2, 0, 1, 0, 1, 1}, {2, 1, 1, 1, 0, 1}, {2, 1, 1, 1, 1, 0}, {2, 0, 1, 1, 0, 1}, {2, 0, 1, 1, 1, 0}, {2, 1, 0, 0, 1, 1}, {2, 1, 0, 1, 0, 1}, {2, 1, 0, 1, 1, 0}, {3, 1, 1, 1, 1, 1}, {3, 1, 1, 1, 1, 1}, {3, 1, 1, 1, 1, 1}, {3, 1, 1, 1, 1, 1}, {3, 1, 1, 1, 1, 1}, {3, 1, 1, 1, 1, 1}}",
  "degree" => "{0, 0, 0, 0, 0, 0}",
},
"o43" => {
  "class" => "Matrix",
  "toString" => "matrix {{-f*h+e*i, -c*h+b*i, -f*g+d*i, -e*g+d*h, -c*g+a*i, -b*g+a*h, -c*e+b*f, -c*d+a*f, -b*d+a*e, -a*f*h+b*d*i, -c*d*h+a*e*i, -b*f*g+c*d*h, -b*f*g+a*e*i, -c*e*g+a*f*h, -c*e*g+b*d*i}}",
  "ring" => "QQ [a, b, c, d, e, f, g, h, i, Degrees=>{{1, 0, 0, 1, 0, 0}, {1, 0, 0, 0, 1, 0}, {1, 0, 0, 0, 0, 1}, {1, 1, 0, 1, 0, 0}, {1, 1, 0, 0, 1, 0}, {1, 1, 0, 0, 0, 1}, {1, 0, 1, 1, 0, 0}, {1, 0, 1, 0, 1, 0}, {1, 0, 1, 0, 0, 1}}, MonomialSize=>16]",
  "degrees ambient target" => "{{0, 0, 0, 0, 0, 0}}",
  "degrees ambient source" => "{{2, 1, 1, 0, 1, 1}, {2, 0, 1, 0, 1, 1}, {2, 1, 1, 1, 0, 1}, {2, 1, 1, 1, 1, 0}, {2, 0, 1, 1, 0, 1}, {2, 0, 1, 1, 1, 0}, {2, 1, 0, 0, 1, 1}, {2, 1, 0, 1, 0, 1}, {2, 1, 0, 1, 1, 0}, {3, 1, 1, 1, 1, 1}, {3, 1, 1, 1, 1, 1}, {3, 1, 1, 1, 1, 1}, {3, 1, 1, 1, 1, 1}, {3, 1, 1, 1, 1, 1}, {3, 1, 1, 1, 1, 1}}",
  "degree" => "{0, 0, 0, 0, 0, 0}",
},
"o45" => {
  "class" => "ZZ",
  "toString" => "108",
},
"localCoherentEquations" => {
},
"T" => {
  "class" => "PolynomialRing",
  "generators" => "{a, b, c, d, e, f, g, z_1, z_2, z_3, z_4, z_5, z_6, z_7, z_8, z_9, z_10, z_11, z_12, z_13, z_14, z_15, z_16, z_17, z_18, z_19, z_20, z_21, z_22, z_23, z_24, z_25, z_26, z_27, z_28, z_29, z_30, z_31, z_32, z_33, z_34, z_35, z_36, z_37, z_38, z_39, z_40, z_41, z_42, z_43, z_44}",
  "degrees" => "{{1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}}",
  "toString" => "T",
  "coefficientRing" => "QQ",
},
"z" => {
  "class" => "S",
  "toString" => "z",
  "degree" => "{1}",
},
"o47" => {
},
"IA" => {
  "class" => "Ideal",
  "ring" => "Y",
  "toString" => "ideal(a^2*c^3*e-b*d^3*f^2,-b^8*g^4+a^2*c*d*e^4*f^4,-b^7*c^2*g^4+d^4*e^3*f^6,a*b^4*c^7*f^3-e^8*g^7,-a^2*b^6*c^5*g^4+d^7*e^2*f^8,a^3*b^3*c^10*f-d^3*e^7*g^7,b^12*c^6-a*d*e^12*f*g^3,-b^3*e^5*g^11+a*c^5*d^4*f^9,a^3*c^8*d*f^7-b^4*e^4*g^11,b^13*c^3*d^2*f-a^3*e^13*g^3,-a*b^2*e^6*g^11+c^2*d^7*f^11,a^5*b^2*c^13-d^6*e^6*f*g^7,-a^4*b^5*c^8*g^4+d^10*e*f^10,a^5*c^11*f^5-b^5*d^2*e^3*g^11,a*b^11*c^9-d^4*e^11*f^3*g^3,-a^3*b*c*e^7*g^11+d^10*f^13,a^7*c^14*f^3-b^6*d^5*e^2*g^11,a^7*b*c^16-d^9*e^5*f^3*g^7,-a^6*b^4*c^11*g^4+d^13*f^12,-b^21*c^2*d*g+a^5*e^17*f^3,a^3*b^10*c^12-d^7*e^10*f^5*g^3,-b^20*c^5*g+a^3*d^2*e^16*f^5,-b^22*d^4*g+a^7*c*e^18*f,a^9*c^17*f-b^7*d^8*e*g^11,a^9*c^19-d^12*e^4*f^5*g^7,b^34*c^5*d^3-a^8*e^30*f^2*g^2,b^35*c^2*d^6-a^10*e^31*g^2,b^57*c*d^10-a^17*e^49*f*g,b^58*d^13*f-a^19*c^2*e^50*g,b^79*d^14-a^24*e^67*f^2)",
  "degrees source generators" => "{{6, 29, 19, 23}, {12, 60, 60, 40}, {13, 68, 57, 39}, {15, 85, 63, 40}, {17, 83, 62, 52}, {17, 92, 56, 53}, {18, 114, 96, 72}, {19, 91, 67, 40}, {19, 89, 67, 40}, {19, 113, 103, 83}, {20, 93, 70, 46}, {20, 103, 55, 66}, {21, 98, 67, 65}, {21, 97, 67, 52}, {21, 129, 98, 79}, {23, 102, 78, 60}, {24, 110, 67, 70}, {24, 118, 60, 79}, {25, 113, 72, 78}, {25, 148, 152, 115}, {25, 144, 103, 92}, {26, 158, 151, 110}, {27, 155, 155, 134}, {27, 123, 67, 88}, {28, 133, 65, 92}, {42, 254, 248, 198}, {43, 254, 249, 215}, {68, 399, 401, 347}, {72, 417, 412, 368}, {93, 544, 553, 479}}",
},
"o48" => {
  "class" => "Ideal",
  "ring" => "QQ [a, b, c, d, e, Degrees=>{{1, 0}, {1, 1}, {1, 2}, {1, 7}, {1, 8}}, MonomialSize=>16]",
  "toString" => "ideal(c*d-b*e,b*d-a*e,b^2-a*c,a^2*d^2-c^3*e,c^4-a^3*e,b*c^3-a^3*d,a*d^4-c^2*e^3,d^6-c*e^5)",
  "degrees source generators" => "{{2, 9}, {2, 8}, {2, 2}, {4, 14}, {4, 8}, {4, 7}, {5, 28}, {6, 42}}",
},
"Y" => {
  "class" => "PolynomialRing",
  "generators" => "{a, b, c, d, e, f, g}",
  "degrees" => "{{1, 0, 3, 6}, {1, 6, 7, 5}, {1, 7, 2, 2}, {1, 5, 0, 6}, {1, 8, 7, 5}, {1, 4, 6, 0}, {1, 3, 1, 0}}",
  "toString" => "Y",
  "coefficientRing" => "QQ",
},
"o49" => {
  "class" => "PolynomialRing",
  "generators" => "{a, b, c, d, e}",
  "degrees" => "{{1, 0}, {1, 1}, {1, 2}, {1, 7}, {1, 8}}",
  "coefficientRing" => "QQ",
},
"o50" => {
  "class" => "Ideal",
  "ring" => "o49",
  "toString" => "ideal(c*d-b*e,-a*e+b*d,-a*c+b^2,a^2*d^2-c^3*e,-a^3*e+c^4,-a^3*d+b*c^3,-c^2*e^3+a*d^4,-c*e^5+d^6)",
  "degrees source generators" => "{{2, 9}, {2, 8}, {2, 2}, {4, 14}, {4, 8}, {4, 7}, {5, 28}, {6, 42}}",
},
"JM" => {
  "class" => "Ideal",
  "ring" => "B",
  "toString" => "ideal(z_1*z_2-z_3,z_1*z_2-z_3,z_1*z_5-z_4,z_1*z_3-z_6,z_1*z_3-z_6,z_1*z_4-z_7,z_1*z_12-z_5,-z_10*z_11+z_1,z_1*z_4-z_7,z_1*z_9-z_8,z_1*z_10-z_13,-z_1*z_5+z_4,z_1*z_7-z_14,z_1*z_18-z_9,-z_1*z_9+z_8,z_1*z_8-z_15,z_1*z_2*z_5-z_8,-z_4*z_10+z_3,z_4*z_13-z_6,z_1*z_11-z_16,z_1*z_6-z_17,z_1*z_6-z_17,z_1*z_7-z_14,z_2*z_4-z_8,z_1*z_2*z_12-z_9,-z_1*z_12+z_5,-z_2*z_11+z_4,z_1*z_8-z_15,-z_5*z_13+z_3,-z_5*z_10+z_2,z_3*z_4-z_15,z_1*z_13-z_19,-z_3*z_11+z_7,-z_2*z_16+z_7,z_4*z_19-z_17,z_1*z_10-z_13,-z_10*z_11+z_1,z_1*z_11-z_16,-z_7*z_10+z_6,z_7*z_13-z_17,z_2*z_5-z_9,-z_1*z_18+z_9,-z_12*z_22+z_1,z_2*z_7-z_15,z_5*z_19-z_6,-z_4*z_10+z_3,z_1*z_13-z_19,z_1*z_2*z_4-z_15,-z_3*z_16+z_14,z_1*z_16-z_20,z_1*z_14-z_21,z_1*z_14-z_21,z_2*z_12-z_18,z_3*z_5-z_8,-z_12*z_22+z_1,-z_12*z_13+z_2,-z_12*z_19+z_3,z_3*z_7-z_24,z_1*z_15-z_24,z_1*z_15-z_24,z_1*z_16-z_20,-z_2*z_20+z_14,z_7*z_19-z_25,z_1*z_17-z_25,z_1*z_17-z_25,z_2*z_8-z_26,z_3*z_20-z_21,z_10*z_14-z_17,z_13*z_14-z_25,z_2*z_9-z_23,z_2*z_12-z_18,z_1*z_2*z_18-z_23,z_1*z_23-z_26,z_2*z_14-z_24,z_1*z_20-z_28,-z_2*z_28+z_21,z_1*z_27-z_23,z_1*z_23-z_26,-z_1*z_27+z_23,z_3*z_9-z_26,-z_3*z_12+z_9,z_2*z_8-z_26,z_2*z_14-z_24,z_1*z_20-z_28,z_3*z_28-z_29,z_1*z_21-z_29,z_1*z_21-z_29,z_2*z_18-z_27,-z_2*z_22+z_19,z_2*z_18-z_27,-z_10*z_30+z_4,z_3*z_18-z_23,-z_18*z_22+z_3,z_1*z_31-z_30,z_5*z_11-z_30,-z_10*z_31+z_5,-z_10*z_30+z_4,-z_31*z_32+z_1,-z_10*z_31+z_5,-z_13*z_31+z_4,z_11*z_12-z_31,-z_12*z_32+z_10,-z_5*z_32+z_13,-z_1*z_31+z_30,-z_4*z_32+z_19,-z_31*z_32+z_1,-z_11*z_32+z_22,z_9*z_23-z_33,z_1*z_18*z_23-z_33,z_8*z_27-z_33,z_18*z_23-z_34,-z_22*z_35+z_12,z_1*z_34-z_33,z_9*z_27-z_34,-z_19*z_35+z_18,-z_22*z_35+z_12,z_18*z_23-z_34,-z_1*z_34+z_33,z_1*z_36-z_34,z_18*z_27-z_36,z_18*z_27-z_36,-z_1^2*z_32*z_35+z_2,-z_1*z_36+z_34,z_10*z_37-z_31,-z_31*z_38+z_13,z_10*z_32-z_38,-z_37*z_38+z_1,-z_10*z_37+z_31,-z_13*z_37+z_30,-z_32*z_37+z_11,-z_31*z_38+z_13,z_27*z_34-z_39,z_27*z_34-z_39,z_23*z_36-z_39,z_27*z_36-z_40,z_27*z_36-z_40,-z_1*z_40+z_39,z_23*z_40-z_41,z_27*z_39-z_41,z_27*z_39-z_41,z_37*z_42-z_38,-z_37*z_42+z_38,z_10*z_38-z_31*z_42,-z_42*z_43+z_31,-z_42*z_43+z_31,z_31*z_37-z_38*z_43,z_42*z_44-z_43,-z_42*z_44+z_43,z_37*z_43-z_38*z_44)",
  "degrees source generators" => "{{2}, {11}, {11}, {12}, {5}, {12}, {14}, {14}, {5}, {15}, {2}, {6}, {15}, {16}, {4}, {4}, {10}, {9}, {7}, {16}, {16}, {5}, {5}, {8}, {11}, {6}, {8}, {17}, {10}, {12}, {9}, {4}, {7}, {7}, {9}, {18}, {18}, {5}, {7}, {7}, {8}, {6}, {19}, {8}, {8}, {12}, {19}, {13}, {5}, {19}, {19}, {5}, {14}, {9}, {20}, {14}, {13}, {9}, {20}, {5}, {5}, {6}, {9}, {20}, {5}, {9}, {3}, {7}, {7}, {9}, {8}, {16}, {3}, {8}, {22}, {4}, {23}, {23}, {4}, {10}, {10}, {17}, {17}, {5}, {2}, {23}, {5}, {18}, {7}, {9}, {16}, {10}, {19}, {26}, {13}, {16}, {19}, {29}, {18}, {20}, {16}, {17}, {17}, {6}, {15}, {32}, {15}, {24}, {18}, {25}, {19}, {24}, {39}, {26}, {23}, {25}, {24}, {4}, {41}, {26}, {21}, {36}, {6}, {30}, {30}, {16}, {45}, {19}, {20}, {32}, {32}, {42}, {26}, {23}, {26}, {46}, {5}, {22}, {67}, {26}, {49}, {49}, {81}, {97}, {98}, {81}, {128}, {98}, {178}}",
},
"o51" => {
  "class" => "Ideal",
  "ring" => "QQ [z_1, z_2, z_3, z_4, z_5, z_6, z_7, z_8, z_9, z_10, z_11, z_12, z_13, MonomialSize=>16]",
  "toString" => "ideal(z_1*z_2-z_3,z_1*z_2-z_3,-z_4*z_7+z_2,-z_5*z_8+z_2,-z_1*z_5+z_4,z_1*z_5*z_8-z_4*z_8,z_1*z_2-z_5*z_9,z_1*z_2*z_5-z_6,z_3*z_4-z_1*z_6,z_3*z_5-z_6,z_1*z_2*z_5-z_6,-z_10*z_11+z_1,-z_2*z_7+z_3*z_10,z_1*z_10-z_7,-z_1^2*z_4*z_10+z_1*z_2,z_3*z_7-z_2*z_8,z_1*z_7-z_8,-z_1^2*z_5*z_7+z_1*z_2,z_3*z_8-z_2*z_9,z_1*z_8-z_9,-z_1*z_5*z_8+z_1*z_2,-z_5*z_9+z_3,z_1*z_13-z_12,-z_11*z_12+z_2,z_2*z_10-z_1*z_12,-z_1*z_11*z_12+z_1*z_2,-z_2*z_10*z_11+z_1*z_2,z_1^3*z_4-z_3*z_11,-z_1*z_13+z_12,-z_1*z_11*z_13+z_2)",
  "degrees source generators" => "{{1}, {1}, {3}, {3}, {1}, {3}, {3}, {3}, {1}, {1}, {3}, {4}, {1}, {4}, {4}, {1}, {4}, {4}, {1}, {4}, {4}, {4}, {5}, {5}, {2}, {5}, {5}, {3}, {2}, {6}}",
},
"findRedundant" => {
},
"removeRedundantVariables" => {
},
"G" => {
  "class" => "Ideal",
  "ring" => "QQ [a, b, c, d, Degrees=>{{1, 0}, {1, 1}, {1, 2}, {1, 3}}, MonomialSize=>16]",
  "toString" => "ideal(a^5*b*c*d^5,a^4*b^3*d^5,a^5*c^3*d^4,a^4*b^2*c^2*d^4,a^3*b^4*c*d^4,a^2*b^6*d^4,a^4*b*c^4*d^3,a^3*b^3*c^3*d^3,a^2*b^5*c^2*d^3,a*b^7*c*d^3,a^4*c^6*d^2,a^3*b^2*c^5*d^2,a^2*b^4*c^4*d^2,a*b^6*c^3*d^2,b^8*c^2*d^2,a^3*b*c^7*d,a^2*b^3*c^6*d,a*b^5*c^5*d,b^7*c^4*d,a^2*b^2*c^8,a*b^4*c^7,b^6*c^6)",
  "degrees source generators" => "{{12, 18}, {12, 18}, {12, 18}, {12, 18}, {12, 18}, {12, 18}, {12, 18}, {12, 18}, {12, 18}, {12, 18}, {12, 18}, {12, 18}, {12, 18}, {12, 18}, {12, 18}, {12, 18}, {12, 18}, {12, 18}, {12, 18}, {12, 18}, {12, 18}, {12, 18}}",
},
"o53" => {
  "class" => "RingMap",
  "toString" => "map(QQ [z_1, z_2, z_3, z_4, z_5, z_6, z_7, z_8, z_9, z_10, z_11, z_12, z_13, MonomialSize=>16],QQ [z_1, z_2, z_3, z_4, z_5, z_6, z_7, z_8, z_9, z_10, z_11, z_12, z_13, MonomialSize=>16],{z_10*z_11, z_5*z_10^3*z_11^2, z_5*z_10^4*z_11^3, z_5*z_10*z_11, z_5, z_5^2*z_10^4*z_11^3, z_10^2*z_11, z_10^3*z_11^2, z_10^4*z_11^3, z_10, z_11, z_10*z_11*z_13, z_13})",
},
"o54" => {
  "class" => "Ideal",
  "ring" => "QQ [z_1, z_2, z_3, z_4, z_5, z_6, z_7, z_8, z_9, z_10, z_11, z_12, z_13, MonomialSize=>16]",
  "toString" => "ideal(z_5*z_10^3*z_11^2-z_10*z_11^2*z_13)",
  "degrees source generators" => "{{6}}",
},
"CX" => {
  "class" => "PolynomialRing",
  "generators" => "{a, b, c, d, e, z_5, z_10, z_11, z_13}",
  "degrees" => "{{1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}}",
  "toString" => "CX",
  "coefficientRing" => "QQ",
},
"o55" => {
  "class" => "PolynomialRing",
  "generators" => "{a, b, c, d, e, z_5, z_10, z_11, z_13}",
  "degrees" => "{{1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}}",
  "toString" => "CX",
  "coefficientRing" => "QQ",
},
"o56" => {
  "class" => "RingMap",
  "toString" => "map(CX,QQ [a, b, c, d, e, z_1, z_2, z_3, z_4, z_5, z_6, z_7, z_8, z_9, z_10, z_11, z_12, z_13, MonomialSize=>16],{a, b, c, d, e, z_10*z_11, z_5*z_10^3*z_11^2, z_5*z_10^4*z_11^3, z_5*z_10*z_11, z_5, z_5^2*z_10^4*z_11^3, z_10^2*z_11, z_10^3*z_11^2, z_10^4*z_11^3, z_10, z_11, z_10*z_11*z_13, z_13})",
},
"J1" => {
  "class" => "Ideal",
  "ring" => "o55",
  "toString" => "ideal(c*d-b*e*z_10*z_11,a*e-b*d*z_5*z_10^3*z_11^2,a*c-b^2*z_5*z_10^4*z_11^3,a^2*d^2-c^3*e*z_5*z_10*z_11,a^2*b*d-c^4*z_5,a^3*d-b*c^3*z_5^2*z_10^4*z_11^3,c^3*e^2-a*b*d^3*z_10^2*z_11,c^4*e-a*b^2*d^2*z_10^3*z_11^2,c^5-a*b^3*d*z_10^4*z_11^3,c^2*e^3-a*d^4*z_10,a*d^5-b*c*e^4*z_11,c*e^5-d^6*z_10*z_11*z_13,b*e^6-d^7*z_13)",
  "degrees source generators" => "{{4}, {8}, {10}, {7}, {5}, {13}, {8}, {10}, {12}, {6}, {7}, {9}, {8}}",
},
"o57" => {
  "class" => "Ideal",
  "ring" => "o55",
  "toString" => "ideal(c*d-b*e*z_10*z_11,a*e-b*d*z_5*z_10^3*z_11^2,a*c-b^2*z_5*z_10^4*z_11^3,a^2*d^2-c^3*e*z_5*z_10*z_11,a^2*b*d-c^4*z_5,a^3*d-b*c^3*z_5^2*z_10^4*z_11^3,c^3*e^2-a*b*d^3*z_10^2*z_11,c^4*e-a*b^2*d^2*z_10^3*z_11^2,c^5-a*b^3*d*z_10^4*z_11^3,c^2*e^3-a*d^4*z_10,a*d^5-b*c*e^4*z_11,c*e^5-d^6*z_10*z_11*z_13,b*e^6-d^7*z_13)",
  "degrees source generators" => "{{4}, {8}, {10}, {7}, {5}, {13}, {8}, {10}, {12}, {6}, {7}, {9}, {8}}",
},
"o58" => {
  "class" => "Ideal",
  "ring" => "o55",
  "toString" => "ideal(z_11^2,c*d-b*e*z_10*z_11,a*e-b*d*z_5*z_10^3*z_11^2,a*c-b^2*z_5*z_10^4*z_11^3,a^2*d^2-c^3*e*z_5*z_10*z_11,a^2*b*d-c^4*z_5,a^3*d-b*c^3*z_5^2*z_10^4*z_11^3,c^3*e^2-a*b*d^3*z_10^2*z_11,c^4*e-a*b^2*d^2*z_10^3*z_11^2,c^5-a*b^3*d*z_10^4*z_11^3,c^2*e^3-a*d^4*z_10,a*d^5-b*c*e^4*z_11,c*e^5-d^6*z_10*z_11*z_13,b*e^6-d^7*z_13)",
  "degrees source generators" => "{{2}, {4}, {8}, {10}, {7}, {5}, {13}, {8}, {10}, {12}, {6}, {7}, {9}, {8}}",
},
"o59" => {
  "class" => "List",
  "toString" => "{{1, 1, 1, 1, 1, 1, 1}, {0, 6, 7, 5, 8, 4, 3}, {3, 7, 2, 0, 7, 6, 1}, {6, 5, 2, 6, 5, 0, 0}}",
},
"o60" => {
  "class" => "Ideal",
  "ring" => "QQ [a, b, c, d, e, f, g, Degrees=>{{1, 0, 3, 6}, {1, 6, 7, 5}, {1, 7, 2, 2}, {1, 5, 0, 6}, {1, 8, 7, 5}, {1, 4, 6, 0}, {1, 3, 1, 0}}, MonomialSize=>16]",
  "toString" => "ideal(a^2*c^3*e-b*d^3*f^2,a^2*c*d*e^4*f^4-b^8*g^4,d^4*e^3*f^6-b^7*c^2*g^4,a*b^4*c^7*f^3-e^8*g^7,d^7*e^2*f^8-a^2*b^6*c^5*g^4,a^3*b^3*c^10*f-d^3*e^7*g^7,b^12*c^6-a*d*e^12*f*g^3,a*c^5*d^4*f^9-b^3*e^5*g^11,a^3*c^8*d*f^7-b^4*e^4*g^11,b^13*c^3*d^2*f-a^3*e^13*g^3,c^2*d^7*f^11-a*b^2*e^6*g^11,a^5*b^2*c^13-d^6*e^6*f*g^7,d^10*e*f^10-a^4*b^5*c^8*g^4,a^5*c^11*f^5-b^5*d^2*e^3*g^11,a*b^11*c^9-d^4*e^11*f^3*g^3,d^10*f^13-a^3*b*c*e^7*g^11,a^7*c^14*f^3-b^6*d^5*e^2*g^11,a^7*b*c^16-d^9*e^5*f^3*g^7,d^13*f^12-a^6*b^4*c^11*g^4,a^5*e^17*f^3-b^21*c^2*d*g,a^3*b^10*c^12-d^7*e^10*f^5*g^3,a^3*d^2*e^16*f^5-b^20*c^5*g,a^7*c*e^18*f-b^22*d^4*g,a^9*c^17*f-b^7*d^8*e*g^11,a^9*c^19-d^12*e^4*f^5*g^7,b^34*c^5*d^3-a^8*e^30*f^2*g^2,b^35*c^2*d^6-a^10*e^31*g^2,b^57*c*d^10-a^17*e^49*f*g,b^58*d^13*f-a^19*c^2*e^50*g,b^79*d^14-a^24*e^67*f^2)",
  "degrees source generators" => "{{6, 29, 19, 23}, {12, 60, 60, 40}, {13, 68, 57, 39}, {15, 85, 63, 40}, {17, 83, 62, 52}, {17, 92, 56, 53}, {18, 114, 96, 72}, {19, 91, 67, 40}, {19, 89, 67, 40}, {19, 113, 103, 83}, {20, 93, 70, 46}, {20, 103, 55, 66}, {21, 98, 67, 65}, {21, 97, 67, 52}, {21, 129, 98, 79}, {23, 102, 78, 60}, {24, 110, 67, 70}, {24, 118, 60, 79}, {25, 113, 72, 78}, {25, 148, 152, 115}, {25, 144, 103, 92}, {26, 158, 151, 110}, {27, 155, 155, 134}, {27, 123, 67, 88}, {28, 133, 65, 92}, {42, 254, 248, 198}, {43, 254, 249, 215}, {68, 399, 401, 347}, {72, 417, 412, 368}, {93, 544, 553, 479}}",
},
"o61" => {
  "class" => "PolynomialRing",
  "generators" => "{a, b, c, d, e, f, g}",
  "degrees" => "{{1, 0, 3, 6}, {1, 6, 7, 5}, {1, 7, 2, 2}, {1, 5, 0, 6}, {1, 8, 7, 5}, {1, 4, 6, 0}, {1, 3, 1, 0}}",
  "toString" => "Y",
  "coefficientRing" => "QQ",
},
"o62" => {
  "class" => "Ideal",
  "ring" => "o61",
  "toString" => "ideal(a^2*c^3*e-b*d^3*f^2,-b^8*g^4+a^2*c*d*e^4*f^4,-b^7*c^2*g^4+d^4*e^3*f^6,a*b^4*c^7*f^3-e^8*g^7,-a^2*b^6*c^5*g^4+d^7*e^2*f^8,a^3*b^3*c^10*f-d^3*e^7*g^7,b^12*c^6-a*d*e^12*f*g^3,-b^3*e^5*g^11+a*c^5*d^4*f^9,a^3*c^8*d*f^7-b^4*e^4*g^11,b^13*c^3*d^2*f-a^3*e^13*g^3,-a*b^2*e^6*g^11+c^2*d^7*f^11,a^5*b^2*c^13-d^6*e^6*f*g^7,-a^4*b^5*c^8*g^4+d^10*e*f^10,a^5*c^11*f^5-b^5*d^2*e^3*g^11,a*b^11*c^9-d^4*e^11*f^3*g^3,-a^3*b*c*e^7*g^11+d^10*f^13,a^7*c^14*f^3-b^6*d^5*e^2*g^11,a^7*b*c^16-d^9*e^5*f^3*g^7,-a^6*b^4*c^11*g^4+d^13*f^12,-b^21*c^2*d*g+a^5*e^17*f^3,a^3*b^10*c^12-d^7*e^10*f^5*g^3,-b^20*c^5*g+a^3*d^2*e^16*f^5,-b^22*d^4*g+a^7*c*e^18*f,a^9*c^17*f-b^7*d^8*e*g^11,a^9*c^19-d^12*e^4*f^5*g^7,b^34*c^5*d^3-a^8*e^30*f^2*g^2,b^35*c^2*d^6-a^10*e^31*g^2,b^57*c*d^10-a^17*e^49*f*g,b^58*d^13*f-a^19*c^2*e^50*g,b^79*d^14-a^24*e^67*f^2)",
  "degrees source generators" => "{{6, 29, 19, 23}, {12, 60, 60, 40}, {13, 68, 57, 39}, {15, 85, 63, 40}, {17, 83, 62, 52}, {17, 92, 56, 53}, {18, 114, 96, 72}, {19, 91, 67, 40}, {19, 89, 67, 40}, {19, 113, 103, 83}, {20, 93, 70, 46}, {20, 103, 55, 66}, {21, 98, 67, 65}, {21, 97, 67, 52}, {21, 129, 98, 79}, {23, 102, 78, 60}, {24, 110, 67, 70}, {24, 118, 60, 79}, {25, 113, 72, 78}, {25, 148, 152, 115}, {25, 144, 103, 92}, {26, 158, 151, 110}, {27, 155, 155, 134}, {27, 123, 67, 88}, {28, 133, 65, 92}, {42, 254, 248, 198}, {43, 254, 249, 215}, {68, 399, 401, 347}, {72, 417, 412, 368}, {93, 544, 553, 479}}",
},
"o63" => {
  "class" => "Ideal",
  "ring" => "o61",
  "toString" => "ideal(a^2*c^3*e,b^8*g^4,b^7*c^2*g^4,a*b^4*c^7*f^3,b^5*c^4*d^3*f^5,a^2*b^6*c^5*g^4,a^3*b^3*c^10*f,b^12*c^6,b^13*c^3*d^2*f,b^3*e^5*g^11,a^3*c^8*d*f^7,b^6*c*d^6*f^7,a*b^2*e^6*g^11,a^5*b^2*c^13,a*b^11*c^9,a^5*c^11*f^5,a^4*b^5*c^8*g^4,b^14*d^5*f^3,a^3*b*c*e^7*g^11,a^7*c^14*f^3,a^7*b*c^16,a^5*c^2*e^11*g^7,b^21*c^2*d*g,a^3*b^10*c^12,a^6*b^4*c^11*g^4,b^20*c^5*g,b^22*d^4*g,a^9*c^17*f,a^9*c^19,a^2*b*c^12*d^4*f^12,b^2*c^9*d^7*f^14,a^2*e^15*g^18,b^34*c^5*d^3,b^35*c^2*d^6,b^13*d^15*f^16,b^36*d^9*f^2,a*c^14*d^11*f^23,a*e^20*g^29,b^57*c*d^10,b^58*d^13*f,b^79*d^14,b*e^39*g^58,b*c^34*d^32*f^62,c^59*d^57*f^110)",
  "degrees source generators" => "{{6, 29, 19, 23}, {12, 60, 60, 40}, {13, 68, 57, 39}, {15, 85, 63, 40}, {17, 93, 73, 51}, {17, 83, 62, 52}, {17, 92, 56, 53}, {18, 114, 96, 72}, {19, 113, 103, 83}, {19, 91, 67, 40}, {19, 89, 67, 40}, {20, 101, 86, 68}, {20, 93, 70, 46}, {20, 103, 55, 66}, {21, 129, 98, 79}, {21, 97, 67, 52}, {21, 98, 67, 65}, {22, 121, 116, 100}, {23, 102, 78, 60}, {24, 110, 67, 70}, {24, 118, 60, 79}, {25, 123, 103, 89}, {25, 148, 152, 115}, {25, 144, 103, 92}, {25, 113, 72, 78}, {26, 158, 151, 110}, {27, 155, 155, 134}, {27, 123, 67, 88}, {28, 133, 65, 92}, {31, 158, 109, 65}, {32, 166, 116, 70}, {35, 174, 129, 87}, {42, 254, 248, 198}, {43, 254, 249, 215}, {44, 217, 187, 155}, {47, 269, 264, 234}, {49, 245, 169, 100}, {50, 247, 172, 106}, {68, 399, 401, 347}, {72, 417, 412, 368}, {93, 544, 553, 479}, {98, 492, 338, 200}, {129, 652, 447, 265}, {226, 1138, 778, 460}}",
},
"o64" => {
  "class" => "Ideal",
  "ring" => "B",
  "toString" => "ideal(z_1*z_2-z_3,z_1*z_2-z_3,z_1*z_5-z_4,z_1*z_3-z_6,z_1*z_3-z_6,z_1*z_4-z_7,z_1*z_12-z_5,-z_10*z_11+z_1,z_1*z_4-z_7,z_1*z_9-z_8,z_1*z_10-z_13,-z_1*z_5+z_4,z_1*z_7-z_14,z_1*z_18-z_9,-z_1*z_9+z_8,z_1*z_8-z_15,z_1*z_2*z_5-z_8,-z_4*z_10+z_3,z_4*z_13-z_6,z_1*z_11-z_16,z_1*z_6-z_17,z_1*z_6-z_17,z_1*z_7-z_14,z_2*z_4-z_8,z_1*z_2*z_12-z_9,-z_1*z_12+z_5,-z_2*z_11+z_4,z_1*z_8-z_15,-z_5*z_13+z_3,-z_5*z_10+z_2,z_3*z_4-z_15,z_1*z_13-z_19,-z_3*z_11+z_7,-z_2*z_16+z_7,z_4*z_19-z_17,z_1*z_10-z_13,-z_10*z_11+z_1,z_1*z_11-z_16,-z_7*z_10+z_6,z_7*z_13-z_17,z_2*z_5-z_9,-z_1*z_18+z_9,-z_12*z_22+z_1,z_2*z_7-z_15,z_5*z_19-z_6,-z_4*z_10+z_3,z_1*z_13-z_19,z_1*z_2*z_4-z_15,-z_3*z_16+z_14,z_1*z_16-z_20,z_1*z_14-z_21,z_1*z_14-z_21,z_2*z_12-z_18,z_3*z_5-z_8,-z_12*z_22+z_1,-z_12*z_13+z_2,-z_12*z_19+z_3,z_3*z_7-z_24,z_1*z_15-z_24,z_1*z_15-z_24,z_1*z_16-z_20,-z_2*z_20+z_14,z_7*z_19-z_25,z_1*z_17-z_25,z_1*z_17-z_25,z_2*z_8-z_26,z_3*z_20-z_21,z_10*z_14-z_17,z_13*z_14-z_25,z_2*z_9-z_23,z_2*z_12-z_18,z_1*z_2*z_18-z_23,z_1*z_23-z_26,z_2*z_14-z_24,z_1*z_20-z_28,-z_2*z_28+z_21,z_1*z_27-z_23,z_1*z_23-z_26,-z_1*z_27+z_23,z_3*z_9-z_26,-z_3*z_12+z_9,z_2*z_8-z_26,z_2*z_14-z_24,z_1*z_20-z_28,z_3*z_28-z_29,z_1*z_21-z_29,z_1*z_21-z_29,z_2*z_18-z_27,-z_2*z_22+z_19,z_2*z_18-z_27,-z_10*z_30+z_4,z_3*z_18-z_23,-z_18*z_22+z_3,z_1*z_31-z_30,z_5*z_11-z_30,-z_10*z_31+z_5,-z_10*z_30+z_4,-z_31*z_32+z_1,-z_10*z_31+z_5,-z_13*z_31+z_4,z_11*z_12-z_31,-z_12*z_32+z_10,-z_5*z_32+z_13,-z_1*z_31+z_30,-z_4*z_32+z_19,-z_31*z_32+z_1,-z_11*z_32+z_22,z_9*z_23-z_33,z_1*z_18*z_23-z_33,z_8*z_27-z_33,z_18*z_23-z_34,-z_22*z_35+z_12,z_1*z_34-z_33,z_9*z_27-z_34,-z_19*z_35+z_18,-z_22*z_35+z_12,z_18*z_23-z_34,-z_1*z_34+z_33,z_1*z_36-z_34,z_18*z_27-z_36,z_18*z_27-z_36,-z_1^2*z_32*z_35+z_2,-z_1*z_36+z_34,z_10*z_37-z_31,-z_31*z_38+z_13,z_10*z_32-z_38,-z_37*z_38+z_1,-z_10*z_37+z_31,-z_13*z_37+z_30,-z_32*z_37+z_11,-z_31*z_38+z_13,z_27*z_34-z_39,z_27*z_34-z_39,z_23*z_36-z_39,z_27*z_36-z_40,z_27*z_36-z_40,-z_1*z_40+z_39,z_23*z_40-z_41,z_27*z_39-z_41,z_27*z_39-z_41,z_37*z_42-z_38,-z_37*z_42+z_38,z_10*z_38-z_31*z_42,-z_42*z_43+z_31,-z_42*z_43+z_31,z_31*z_37-z_38*z_43,z_42*z_44-z_43,-z_42*z_44+z_43,z_37*z_43-z_38*z_44)",
  "degrees source generators" => "{{2}, {11}, {11}, {12}, {5}, {12}, {14}, {14}, {5}, {15}, {2}, {6}, {15}, {16}, {4}, {4}, {10}, {9}, {7}, {16}, {16}, {5}, {5}, {8}, {11}, {6}, {8}, {17}, {10}, {12}, {9}, {4}, {7}, {7}, {9}, {18}, {18}, {5}, {7}, {7}, {8}, {6}, {19}, {8}, {8}, {12}, {19}, {13}, {5}, {19}, {19}, {5}, {14}, {9}, {20}, {14}, {13}, {9}, {20}, {5}, {5}, {6}, {9}, {20}, {5}, {9}, {3}, {7}, {7}, {9}, {8}, {16}, {3}, {8}, {22}, {4}, {23}, {23}, {4}, {10}, {10}, {17}, {17}, {5}, {2}, {23}, {5}, {18}, {7}, {9}, {16}, {10}, {19}, {26}, {13}, {16}, {19}, {29}, {18}, {20}, {16}, {17}, {17}, {6}, {15}, {32}, {15}, {24}, {18}, {25}, {19}, {24}, {39}, {26}, {23}, {25}, {24}, {4}, {41}, {26}, {21}, {36}, {6}, {30}, {30}, {16}, {45}, {19}, {20}, {32}, {32}, {42}, {26}, {23}, {26}, {46}, {5}, {22}, {67}, {26}, {49}, {49}, {81}, {97}, {98}, {81}, {128}, {98}, {178}}",
},
"o65" => {
  "class" => "RingMap",
  "toString" => "map(B,B,{z_32^4*z_35*z_37^2, z_32^9*z_35^3*z_37^4, z_32^13*z_35^4*z_37^6, z_32^10*z_35^3*z_37^5, z_32^6*z_35^2*z_37^3, z_32^17*z_35^5*z_37^8, z_32^14*z_35^4*z_37^7, z_32^19*z_35^6*z_37^9, z_32^15*z_35^5*z_37^7, z_32^3*z_35*z_37, z_32*z_37, z_32^2*z_35*z_37, z_32^7*z_35^2*z_37^3, z_32^18*z_35^5*z_37^9, z_32^23*z_35^7*z_37^11, z_32^5*z_35*z_37^3, z_32^21*z_35^6*z_37^10, z_32^11*z_35^4*z_37^5, z_32^11*z_35^3*z_37^5, z_32^9*z_35^2*z_37^5, z_32^22*z_35^6*z_37^11, z_32^2*z_37, z_32^24*z_35^8*z_37^11, z_32^27*z_35^8*z_37^13, z_32^25*z_35^7*z_37^12, z_32^28*z_35^9*z_37^13, z_32^20*z_35^7*z_37^9, z_32^13*z_35^3*z_37^7, z_32^26*z_35^7*z_37^13, z_32^7*z_35^2*z_37^4, z_32^3*z_35*z_37^2, z_32, z_32^39*z_35^13*z_37^18, z_32^35*z_35^12*z_37^16, z_35, z_32^31*z_35^11*z_37^14, z_37, z_32^4*z_35*z_37, z_32^55*z_35^19*z_37^25, z_32^51*z_35^18*z_37^23, z_32^75*z_35^26*z_37^34, z_42, z_42*z_44, z_44})",
},
"o66" => {
  "class" => "String",
  "toString" => "ideal(z_32*z_42^2*z_44-z_37^2*z_42,z_32^3*z_35*z_37^2-z_42^2*z_44,z_32^4*z_35*z_37-z_37*z_42,z_32^2*z_35*z_37^4*z_42-z_42^4*z_44^2,z_32*z_35*z_37^6*z_42-z_42^5*z_44^3,z_35*z_37^8*z_42-z_42^6*z_44^4)",
},
"K" => {
  "class" => "Ideal",
  "ring" => "R",
  "toString" => "ideal(y_21^2-y_20,y_19*y_21-y_18,y_18*y_21-y_17,y_17*y_21-y_16,y_15*y_21-y_14,y_14*y_21-y_13,y_13*y_21-y_12,y_12*y_21-y_11,y_10*y_21-y_9,y_9*y_21-y_8,y_8*y_21-y_7,y_6*y_21-y_5,y_5*y_21-y_4,y_4*y_21-y_3,y_2*y_21-y_1,y_19*y_20-y_17,y_18*y_20-y_16,y_17*y_20-y_16*y_21,y_15*y_20-y_13,y_14*y_20-y_12,y_13*y_20-y_11,y_12*y_20-y_11*y_21,y_10*y_20-y_8,y_9*y_20-y_7,y_8*y_20-y_7*y_21,y_6*y_20-y_4,y_5*y_20-y_3,y_4*y_20-y_3*y_21,y_2*y_20-y_1*y_21,y_19^2-y_15,y_18*y_19-y_14,y_17*y_19-y_13,y_16*y_19-y_12,y_14*y_19-y_10,y_13*y_19-y_9,y_12*y_19-y_8,y_11*y_19-y_7,y_9*y_19-y_6,y_8*y_19-y_5,y_7*y_19-y_4,y_4*y_19-y_2,y_3*y_19-y_1,y_18^2-y_13,y_17*y_18-y_12,y_16*y_18-y_11,y_15*y_18-y_10,y_14*y_18-y_9,y_13*y_18-y_8,y_12*y_18-y_7,y_11*y_18-y_7*y_21,y_10*y_18-y_6,y_9*y_18-y_5,y_8*y_18-y_4,y_7*y_18-y_3,y_6*y_18-y_5*y_19,y_5*y_18-y_2,y_4*y_18-y_1,y_3*y_18-y_1*y_21,y_2*y_18-y_1*y_19,y_17^2-y_11,y_16*y_17-y_11*y_21,y_15*y_17-y_9,y_14*y_17-y_8,y_13*y_17-y_7,y_12*y_17-y_7*y_21,y_11*y_17-y_7*y_20,y_10*y_17-y_5,y_9*y_17-y_4,y_8*y_17-y_3,y_7*y_17-y_3*y_21,y_6*y_17-y_2,y_5*y_17-y_1,y_4*y_17-y_1*y_21,y_3*y_17-y_1*y_20,y_2*y_17-y_1*y_18,y_16^2-y_11*y_20,y_15*y_16-y_8,y_14*y_16-y_7,y_13*y_16-y_7*y_21,y_12*y_16-y_7*y_20,y_10*y_16-y_4,y_9*y_16-y_3,y_8*y_16-y_3*y_21,y_7*y_16-y_3*y_20,y_6*y_16-y_1,y_5*y_16-y_1*y_21,y_4*y_16-y_1*y_20,y_2*y_16-y_1*y_17,y_14*y_15-y_10*y_19,y_13*y_15-y_6,y_12*y_15-y_5,y_11*y_15-y_4,y_9*y_15-y_6*y_19,y_8*y_15-y_5*y_19,y_7*y_15-y_2,y_4*y_15-y_2*y_19,y_3*y_15-y_1*y_19,y_14^2-y_6,y_13*y_14-y_5,y_12*y_14-y_4,y_11*y_14-y_3,y_10*y_14-y_6*y_19,y_9*y_14-y_5*y_19,y_8*y_14-y_2,y_7*y_14-y_1,y_6*y_14-y_5*y_15,y_5*y_14-y_2*y_19,y_4*y_14-y_1*y_19,y_3*y_14-y_1*y_18,y_2*y_14-y_1*y_15,y_13^2-y_4,y_12*y_13-y_3,y_11*y_13-y_3*y_21,y_10*y_13-y_5*y_19,y_9*y_13-y_2,y_8*y_13-y_1,y_7*y_13-y_1*y_21,y_6*y_13-y_2*y_19,y_5*y_13-y_1*y_19,y_4*y_13-y_1*y_18,y_3*y_13-y_1*y_17,y_2*y_13-y_1*y_14,y_12^2-y_3*y_21,y_11*y_12-y_3*y_20,y_10*y_12-y_2,y_9*y_12-y_1,y_8*y_12-y_1*y_21,y_7*y_12-y_1*y_20,y_6*y_12-y_1*y_19,y_5*y_12-y_1*y_18,y_4*y_12-y_1*y_17,y_3*y_12-y_1*y_16,y_2*y_12-y_1*y_13,y_10*y_11-y_1,y_9*y_11-y_1*y_21,y_8*y_11-y_1*y_20,y_7*y_11-y_3*y_16,y_6*y_11-y_1*y_18,y_5*y_11-y_1*y_17,y_4*y_11-y_1*y_16,y_2*y_11-y_1*y_12,y_10^2-y_6*y_15,y_9*y_10-y_5*y_15,y_8*y_10-y_2*y_19,y_7*y_10-y_1*y_19,y_5*y_10-y_2*y_15,y_4*y_10-y_1*y_15,y_3*y_10-y_1*y_14,y_9^2-y_2*y_19,y_8*y_9-y_1*y_19,y_7*y_9-y_1*y_18,y_6*y_9-y_2*y_15,y_5*y_9-y_1*y_15,y_4*y_9-y_1*y_14,y_3*y_9-y_1*y_13,y_2*y_9-y_1*y_10,y_8^2-y_1*y_18,y_7*y_8-y_1*y_17,y_6*y_8-y_1*y_15,y_5*y_8-y_1*y_14,y_4*y_8-y_1*y_13,y_3*y_8-y_1*y_12,y_2*y_8-y_1*y_9,y_7^2-y_1*y_16,y_6*y_7-y_1*y_14,y_5*y_7-y_1*y_13,y_4*y_7-y_1*y_12,y_3*y_7-y_1*y_11,y_2*y_7-y_1*y_8,y_5*y_6-y_2*y_10,y_4*y_6-y_1*y_10,y_3*y_6-y_1*y_9,y_5^2-y_1*y_10,y_4*y_5-y_1*y_9,y_3*y_5-y_1*y_8,y_2*y_5-y_1*y_6,y_4^2-y_1*y_8,y_3*y_4-y_1*y_7,y_2*y_4-y_1*y_5,y_2*y_3-y_1*y_4)",
  "degrees source generators" => "{{2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}}",
},
"o67" => {
  "class" => "Ideal",
  "ring" => "B",
  "toString" => "ideal(z_32*z_42*z_44-z_37^2,z_32^4*z_35-z_42,z_32^3*z_35*z_37^2-z_42^2*z_44,z_32^2*z_35*z_37^4-z_42^3*z_44^2,z_32*z_35*z_37^6-z_42^4*z_44^3,z_35*z_37^8-z_42^5*z_44^4)",
  "degrees source generators" => "{{3}, {5}, {6}, {7}, {8}, {9}}",
},
"GG" => {
  "class" => "RingMap",
  "toString" => "map(B,B,{z_1, z_2, z_3, z_4, z_5, z_6, z_7, z_8, z_9, z_10, z_11, z_12, z_13, z_14, z_15, z_16, z_17, z_18, z_19, z_20, z_21, z_22, z_23, z_24, z_25, z_26, z_27, z_28, z_29, z_30, z_31, z_32, z_33, z_34, z_35, z_36, z_37, z_38, z_39, z_40, z_41, z_32^4*z_35, z_43, z_44})",
},
"o68" => {
  "class" => "RingMap",
  "toString" => "map(B,B,{z_1, z_2, z_3, z_4, z_5, z_6, z_7, z_8, z_9, z_10, z_11, z_12, z_13, z_14, z_15, z_16, z_17, z_18, z_19, z_20, z_21, z_22, z_23, z_24, z_25, z_26, z_27, z_28, z_29, z_30, z_31, z_32, z_33, z_34, z_35, z_36, z_37, z_38, z_39, z_40, z_41, z_32^4*z_35, z_43, z_44})",
},
"o69" => {
  "class" => "Ideal",
  "ring" => "B",
  "toString" => "ideal(z_32^5*z_35*z_44-z_37^2)",
  "degrees source generators" => "{{7}}",
},
"o70" => {
  "class" => "List",
  "toString" => "{{1, 1, 1, 1}, {0, 1, 2, 3}}",
},
"o71" => {
  "class" => "Ideal",
  "ring" => "QQ [a, b, c, d, Degrees=>{{1, 0}, {1, 1}, {1, 2}, {1, 3}}, MonomialSize=>16]",
  "toString" => "ideal(c^2-b*d,b*c-a*d,b^2-a*c)",
  "degrees source generators" => "{{2, 4}, {2, 3}, {2, 2}}",
},
"o72" => {
  "class" => "Matrix",
  "toString" => "matrix {{-c^2+b*d, -b*c+a*d, -b^2+a*c, -c^3+a*d^2, -b^3+a^2*d}}",
  "ring" => "QQ [a, b, c, d, Degrees=>{{1, 0}, {1, 1}, {1, 2}, {1, 3}}, MonomialSize=>16]",
  "degrees ambient target" => "{{0, 0}}",
  "degrees ambient source" => "{{2, 4}, {2, 3}, {2, 2}, {3, 6}, {3, 3}}",
  "degree" => "{0, 0}",
},
"o73" => {
  "class" => "HashTable",
  "toString" => "new HashTable from {{3, 6} => matrix {{a*d^2, b*c*d, c^3}}, {2, 2} => matrix {{a*c, b^2}}, {2, 3} => matrix {{a*d, b*c}}, {3, 3} => matrix {{a^2*d, a*b*c, b^3}}, {2, 4} => matrix {{b*d, c^2}}}",
},
"o74" => {
  "class" => "Net",
  "toString" => "HashTable{{2, 2} => | ac b2 |     }\n          {2, 3} => | ad bc |\n          {2, 4} => | bd c2 |\n          {3, 3} => | a2d abc b3 |\n          {3, 6} => | ad2 bcd c3 |",
},
"o75" => {
  "class" => "Ideal",
  "ring" => "QQ [a, b, c, d, Degrees=>{{1, 0}, {1, 1}, {1, 2}, {1, 3}}, MonomialSize=>16]",
  "toString" => "ideal(a^5*b*c*d^5,a^4*b^3*d^5,a^5*c^3*d^4,a^4*b^2*c^2*d^4,a^3*b^4*c*d^4,a^2*b^6*d^4,a^4*b*c^4*d^3,a^3*b^3*c^3*d^3,a^2*b^5*c^2*d^3,a*b^7*c*d^3,a^4*c^6*d^2,a^3*b^2*c^5*d^2,a^2*b^4*c^4*d^2,a*b^6*c^3*d^2,b^8*c^2*d^2,a^3*b*c^7*d,a^2*b^3*c^6*d,a*b^5*c^5*d,b^7*c^4*d,a^2*b^2*c^8,a*b^4*c^7,b^6*c^6)",
  "degrees source generators" => "{{12, 18}, {12, 18}, {12, 18}, {12, 18}, {12, 18}, {12, 18}, {12, 18}, {12, 18}, {12, 18}, {12, 18}, {12, 18}, {12, 18}, {12, 18}, {12, 18}, {12, 18}, {12, 18}, {12, 18}, {12, 18}, {12, 18}, {12, 18}, {12, 18}, {12, 18}}",
},
"o76" => {
  "class" => "ZZ",
  "toString" => "22",
},
"o77" => {
  "class" => "Symbol",
  "toString" => "z",
},
"S" => {
  "class" => "PolynomialRing",
  "generators" => "{a, b, c, d, z}",
  "degrees" => "{{1}, {1}, {1}, {1}, {1}}",
  "toString" => "S",
  "coefficientRing" => "QQ",
},
"o78" => {
  "class" => "PolynomialRing",
  "generators" => "{a, b, c, d, z}",
  "degrees" => "{{1}, {1}, {1}, {1}, {1}}",
  "toString" => "S",
  "coefficientRing" => "QQ",
},
"zG" => {
  "class" => "Matrix",
  "toString" => "matrix {{a^5*b*c*d^5*z, a^4*b^3*d^5*z, a^5*c^3*d^4*z, a^4*b^2*c^2*d^4*z, a^3*b^4*c*d^4*z, a^2*b^6*d^4*z, a^4*b*c^4*d^3*z, a^3*b^3*c^3*d^3*z, a^2*b^5*c^2*d^3*z, a*b^7*c*d^3*z, a^4*c^6*d^2*z, a^3*b^2*c^5*d^2*z, a^2*b^4*c^4*d^2*z, a*b^6*c^3*d^2*z, b^8*c^2*d^2*z, a^3*b*c^7*d*z, a^2*b^3*c^6*d*z, a*b^5*c^5*d*z, b^7*c^4*d*z, a^2*b^2*c^8*z, a*b^4*c^7*z, b^6*c^6*z}}",
  "ring" => "o78",
  "degrees ambient target" => "{{0}}",
  "degrees ambient source" => "{{1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}}",
  "degree" => "{0}",
},
"o79" => {
  "class" => "Matrix",
  "toString" => "matrix {{a^5*b*c*d^5*z, a^4*b^3*d^5*z, a^5*c^3*d^4*z, a^4*b^2*c^2*d^4*z, a^3*b^4*c*d^4*z, a^2*b^6*d^4*z, a^4*b*c^4*d^3*z, a^3*b^3*c^3*d^3*z, a^2*b^5*c^2*d^3*z, a*b^7*c*d^3*z, a^4*c^6*d^2*z, a^3*b^2*c^5*d^2*z, a^2*b^4*c^4*d^2*z, a*b^6*c^3*d^2*z, b^8*c^2*d^2*z, a^3*b*c^7*d*z, a^2*b^3*c^6*d*z, a*b^5*c^5*d*z, b^7*c^4*d*z, a^2*b^2*c^8*z, a*b^4*c^7*z, b^6*c^6*z}}",
  "ring" => "o78",
  "degrees ambient target" => "{{0}}",
  "degrees ambient source" => "{{1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}}",
  "degree" => "{0}",
},
"y" => {
  "class" => "IndexedVariableTable",
  "toString" => "y",
},
"o80" => {
  "class" => "PolynomialRing",
  "generators" => "{y_1, y_2, y_3, y_4, y_5, y_6, y_7, y_8, y_9, y_10, y_11, y_12, y_13, y_14, y_15, y_16, y_17, y_18, y_19, y_20, y_21, y_22}",
  "degrees" => "{{1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}}",
  "toString" => "R",
  "coefficientRing" => "QQ",
},
"o81" => {
  "class" => "RingMap",
  "toString" => "map(S,R,{a^5*b*c*d^5*z, a^4*b^3*d^5*z, a^5*c^3*d^4*z, a^4*b^2*c^2*d^4*z, a^3*b^4*c*d^4*z, a^2*b^6*d^4*z, a^4*b*c^4*d^3*z, a^3*b^3*c^3*d^3*z, a^2*b^5*c^2*d^3*z, a*b^7*c*d^3*z, a^4*c^6*d^2*z, a^3*b^2*c^5*d^2*z, a^2*b^4*c^4*d^2*z, a*b^6*c^3*d^2*z, b^8*c^2*d^2*z, a^3*b*c^7*d*z, a^2*b^3*c^6*d*z, a*b^5*c^5*d*z, b^7*c^4*d*z, a^2*b^2*c^8*z, a*b^4*c^7*z, b^6*c^6*z})",
},
"PA" => {
  "class" => "Ideal",
  "ring" => "o80",
  "toString" => "ideal(y_21^2-y_20*y_22,y_19*y_21-y_18*y_22,y_18*y_21-y_17*y_22,y_17*y_21-y_16*y_22,y_15*y_21-y_14*y_22,y_14*y_21-y_13*y_22,y_13*y_21-y_12*y_22,y_12*y_21-y_11*y_22,y_10*y_21-y_9*y_22,y_9*y_21-y_8*y_22,y_8*y_21-y_7*y_22,y_6*y_21-y_5*y_22,y_5*y_21-y_4*y_22,y_4*y_21-y_3*y_22,y_2*y_21-y_1*y_22,y_19*y_20-y_17*y_22,y_18*y_20-y_16*y_22,y_17*y_20-y_16*y_21,y_15*y_20-y_13*y_22,y_14*y_20-y_12*y_22,y_13*y_20-y_11*y_22,y_12*y_20-y_11*y_21,y_10*y_20-y_8*y_22,y_9*y_20-y_7*y_22,y_8*y_20-y_7*y_21,y_6*y_20-y_4*y_22,y_5*y_20-y_3*y_22,y_4*y_20-y_3*y_21,y_2*y_20-y_1*y_21,y_19^2-y_15*y_22,y_18*y_19-y_14*y_22,y_17*y_19-y_13*y_22,y_16*y_19-y_12*y_22,y_14*y_19-y_10*y_22,y_13*y_19-y_9*y_22,y_12*y_19-y_8*y_22,y_11*y_19-y_7*y_22,y_9*y_19-y_6*y_22,y_8*y_19-y_5*y_22,y_7*y_19-y_4*y_22,y_4*y_19-y_2*y_22,y_3*y_19-y_1*y_22,y_18^2-y_13*y_22,y_17*y_18-y_12*y_22,y_16*y_18-y_11*y_22,y_15*y_18-y_10*y_22,y_14*y_18-y_9*y_22,y_13*y_18-y_8*y_22,y_12*y_18-y_7*y_22,y_11*y_18-y_7*y_21,y_10*y_18-y_6*y_22,y_9*y_18-y_5*y_22,y_8*y_18-y_4*y_22,y_7*y_18-y_3*y_22,y_6*y_18-y_5*y_19,y_5*y_18-y_2*y_22,y_4*y_18-y_1*y_22,y_3*y_18-y_1*y_21,y_2*y_18-y_1*y_19,y_17^2-y_11*y_22,y_16*y_17-y_11*y_21,y_15*y_17-y_9*y_22,y_14*y_17-y_8*y_22,y_13*y_17-y_7*y_22,y_12*y_17-y_7*y_21,y_11*y_17-y_7*y_20,y_10*y_17-y_5*y_22,y_9*y_17-y_4*y_22,y_8*y_17-y_3*y_22,y_7*y_17-y_3*y_21,y_6*y_17-y_2*y_22,y_5*y_17-y_1*y_22,y_4*y_17-y_1*y_21,y_3*y_17-y_1*y_20,y_2*y_17-y_1*y_18,y_16^2-y_11*y_20,y_15*y_16-y_8*y_22,y_14*y_16-y_7*y_22,y_13*y_16-y_7*y_21,y_12*y_16-y_7*y_20,y_10*y_16-y_4*y_22,y_9*y_16-y_3*y_22,y_8*y_16-y_3*y_21,y_7*y_16-y_3*y_20,y_6*y_16-y_1*y_22,y_5*y_16-y_1*y_21,y_4*y_16-y_1*y_20,y_2*y_16-y_1*y_17,y_14*y_15-y_10*y_19,y_13*y_15-y_6*y_22,y_12*y_15-y_5*y_22,y_11*y_15-y_4*y_22,y_9*y_15-y_6*y_19,y_8*y_15-y_5*y_19,y_7*y_15-y_2*y_22,y_4*y_15-y_2*y_19,y_3*y_15-y_1*y_19,y_14^2-y_6*y_22,y_13*y_14-y_5*y_22,y_12*y_14-y_4*y_22,y_11*y_14-y_3*y_22,y_10*y_14-y_6*y_19,y_9*y_14-y_5*y_19,y_8*y_14-y_2*y_22,y_7*y_14-y_1*y_22,y_6*y_14-y_5*y_15,y_5*y_14-y_2*y_19,y_4*y_14-y_1*y_19,y_3*y_14-y_1*y_18,y_2*y_14-y_1*y_15,y_13^2-y_4*y_22,y_12*y_13-y_3*y_22,y_11*y_13-y_3*y_21,y_10*y_13-y_5*y_19,y_9*y_13-y_2*y_22,y_8*y_13-y_1*y_22,y_7*y_13-y_1*y_21,y_6*y_13-y_2*y_19,y_5*y_13-y_1*y_19,y_4*y_13-y_1*y_18,y_3*y_13-y_1*y_17,y_2*y_13-y_1*y_14,y_12^2-y_3*y_21,y_11*y_12-y_3*y_20,y_10*y_12-y_2*y_22,y_9*y_12-y_1*y_22,y_8*y_12-y_1*y_21,y_7*y_12-y_1*y_20,y_6*y_12-y_1*y_19,y_5*y_12-y_1*y_18,y_4*y_12-y_1*y_17,y_3*y_12-y_1*y_16,y_2*y_12-y_1*y_13,y_10*y_11-y_1*y_22,y_9*y_11-y_1*y_21,y_8*y_11-y_1*y_20,y_7*y_11-y_3*y_16,y_6*y_11-y_1*y_18,y_5*y_11-y_1*y_17,y_4*y_11-y_1*y_16,y_2*y_11-y_1*y_12,y_10^2-y_6*y_15,y_9*y_10-y_5*y_15,y_8*y_10-y_2*y_19,y_7*y_10-y_1*y_19,y_5*y_10-y_2*y_15,y_4*y_10-y_1*y_15,y_3*y_10-y_1*y_14,y_9^2-y_2*y_19,y_8*y_9-y_1*y_19,y_7*y_9-y_1*y_18,y_6*y_9-y_2*y_15,y_5*y_9-y_1*y_15,y_4*y_9-y_1*y_14,y_3*y_9-y_1*y_13,y_2*y_9-y_1*y_10,y_8^2-y_1*y_18,y_7*y_8-y_1*y_17,y_6*y_8-y_1*y_15,y_5*y_8-y_1*y_14,y_4*y_8-y_1*y_13,y_3*y_8-y_1*y_12,y_2*y_8-y_1*y_9,y_7^2-y_1*y_16,y_6*y_7-y_1*y_14,y_5*y_7-y_1*y_13,y_4*y_7-y_1*y_12,y_3*y_7-y_1*y_11,y_2*y_7-y_1*y_8,y_5*y_6-y_2*y_10,y_4*y_6-y_1*y_10,y_3*y_6-y_1*y_9,y_5^2-y_1*y_10,y_4*y_5-y_1*y_9,y_3*y_5-y_1*y_8,y_2*y_5-y_1*y_6,y_4^2-y_1*y_8,y_3*y_4-y_1*y_7,y_2*y_4-y_1*y_5,y_2*y_3-y_1*y_4)",
  "degrees source generators" => "{{2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}}",
},
"o82" => {
  "class" => "Ideal",
  "ring" => "o80",
  "toString" => "ideal(y_21^2-y_20*y_22,y_19*y_21-y_18*y_22,y_18*y_21-y_17*y_22,y_17*y_21-y_16*y_22,y_15*y_21-y_14*y_22,y_14*y_21-y_13*y_22,y_13*y_21-y_12*y_22,y_12*y_21-y_11*y_22,y_10*y_21-y_9*y_22,y_9*y_21-y_8*y_22,y_8*y_21-y_7*y_22,y_6*y_21-y_5*y_22,y_5*y_21-y_4*y_22,y_4*y_21-y_3*y_22,y_2*y_21-y_1*y_22,y_19*y_20-y_17*y_22,y_18*y_20-y_16*y_22,y_17*y_20-y_16*y_21,y_15*y_20-y_13*y_22,y_14*y_20-y_12*y_22,y_13*y_20-y_11*y_22,y_12*y_20-y_11*y_21,y_10*y_20-y_8*y_22,y_9*y_20-y_7*y_22,y_8*y_20-y_7*y_21,y_6*y_20-y_4*y_22,y_5*y_20-y_3*y_22,y_4*y_20-y_3*y_21,y_2*y_20-y_1*y_21,y_19^2-y_15*y_22,y_18*y_19-y_14*y_22,y_17*y_19-y_13*y_22,y_16*y_19-y_12*y_22,y_14*y_19-y_10*y_22,y_13*y_19-y_9*y_22,y_12*y_19-y_8*y_22,y_11*y_19-y_7*y_22,y_9*y_19-y_6*y_22,y_8*y_19-y_5*y_22,y_7*y_19-y_4*y_22,y_4*y_19-y_2*y_22,y_3*y_19-y_1*y_22,y_18^2-y_13*y_22,y_17*y_18-y_12*y_22,y_16*y_18-y_11*y_22,y_15*y_18-y_10*y_22,y_14*y_18-y_9*y_22,y_13*y_18-y_8*y_22,y_12*y_18-y_7*y_22,y_11*y_18-y_7*y_21,y_10*y_18-y_6*y_22,y_9*y_18-y_5*y_22,y_8*y_18-y_4*y_22,y_7*y_18-y_3*y_22,y_6*y_18-y_5*y_19,y_5*y_18-y_2*y_22,y_4*y_18-y_1*y_22,y_3*y_18-y_1*y_21,y_2*y_18-y_1*y_19,y_17^2-y_11*y_22,y_16*y_17-y_11*y_21,y_15*y_17-y_9*y_22,y_14*y_17-y_8*y_22,y_13*y_17-y_7*y_22,y_12*y_17-y_7*y_21,y_11*y_17-y_7*y_20,y_10*y_17-y_5*y_22,y_9*y_17-y_4*y_22,y_8*y_17-y_3*y_22,y_7*y_17-y_3*y_21,y_6*y_17-y_2*y_22,y_5*y_17-y_1*y_22,y_4*y_17-y_1*y_21,y_3*y_17-y_1*y_20,y_2*y_17-y_1*y_18,y_16^2-y_11*y_20,y_15*y_16-y_8*y_22,y_14*y_16-y_7*y_22,y_13*y_16-y_7*y_21,y_12*y_16-y_7*y_20,y_10*y_16-y_4*y_22,y_9*y_16-y_3*y_22,y_8*y_16-y_3*y_21,y_7*y_16-y_3*y_20,y_6*y_16-y_1*y_22,y_5*y_16-y_1*y_21,y_4*y_16-y_1*y_20,y_2*y_16-y_1*y_17,y_14*y_15-y_10*y_19,y_13*y_15-y_6*y_22,y_12*y_15-y_5*y_22,y_11*y_15-y_4*y_22,y_9*y_15-y_6*y_19,y_8*y_15-y_5*y_19,y_7*y_15-y_2*y_22,y_4*y_15-y_2*y_19,y_3*y_15-y_1*y_19,y_14^2-y_6*y_22,y_13*y_14-y_5*y_22,y_12*y_14-y_4*y_22,y_11*y_14-y_3*y_22,y_10*y_14-y_6*y_19,y_9*y_14-y_5*y_19,y_8*y_14-y_2*y_22,y_7*y_14-y_1*y_22,y_6*y_14-y_5*y_15,y_5*y_14-y_2*y_19,y_4*y_14-y_1*y_19,y_3*y_14-y_1*y_18,y_2*y_14-y_1*y_15,y_13^2-y_4*y_22,y_12*y_13-y_3*y_22,y_11*y_13-y_3*y_21,y_10*y_13-y_5*y_19,y_9*y_13-y_2*y_22,y_8*y_13-y_1*y_22,y_7*y_13-y_1*y_21,y_6*y_13-y_2*y_19,y_5*y_13-y_1*y_19,y_4*y_13-y_1*y_18,y_3*y_13-y_1*y_17,y_2*y_13-y_1*y_14,y_12^2-y_3*y_21,y_11*y_12-y_3*y_20,y_10*y_12-y_2*y_22,y_9*y_12-y_1*y_22,y_8*y_12-y_1*y_21,y_7*y_12-y_1*y_20,y_6*y_12-y_1*y_19,y_5*y_12-y_1*y_18,y_4*y_12-y_1*y_17,y_3*y_12-y_1*y_16,y_2*y_12-y_1*y_13,y_10*y_11-y_1*y_22,y_9*y_11-y_1*y_21,y_8*y_11-y_1*y_20,y_7*y_11-y_3*y_16,y_6*y_11-y_1*y_18,y_5*y_11-y_1*y_17,y_4*y_11-y_1*y_16,y_2*y_11-y_1*y_12,y_10^2-y_6*y_15,y_9*y_10-y_5*y_15,y_8*y_10-y_2*y_19,y_7*y_10-y_1*y_19,y_5*y_10-y_2*y_15,y_4*y_10-y_1*y_15,y_3*y_10-y_1*y_14,y_9^2-y_2*y_19,y_8*y_9-y_1*y_19,y_7*y_9-y_1*y_18,y_6*y_9-y_2*y_15,y_5*y_9-y_1*y_15,y_4*y_9-y_1*y_14,y_3*y_9-y_1*y_13,y_2*y_9-y_1*y_10,y_8^2-y_1*y_18,y_7*y_8-y_1*y_17,y_6*y_8-y_1*y_15,y_5*y_8-y_1*y_14,y_4*y_8-y_1*y_13,y_3*y_8-y_1*y_12,y_2*y_8-y_1*y_9,y_7^2-y_1*y_16,y_6*y_7-y_1*y_14,y_5*y_7-y_1*y_13,y_4*y_7-y_1*y_12,y_3*y_7-y_1*y_11,y_2*y_7-y_1*y_8,y_5*y_6-y_2*y_10,y_4*y_6-y_1*y_10,y_3*y_6-y_1*y_9,y_5^2-y_1*y_10,y_4*y_5-y_1*y_9,y_3*y_5-y_1*y_8,y_2*y_5-y_1*y_6,y_4^2-y_1*y_8,y_3*y_4-y_1*y_7,y_2*y_4-y_1*y_5,y_2*y_3-y_1*y_4)",
  "degrees source generators" => "{{2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}, {2}}",
},
"o83" => {
  "class" => "ZZ",
  "toString" => "19",
},
"o84" => {
  "class" => "ZZ",
  "toString" => "30",
},
"Aff" => {
  "class" => "Sequence",
  "toString" => "(ideal(),ideal(),ideal(),ideal(y_1^4*y_5*y_21-1),ideal(y_1^4*y_6^6*y_21-1),ideal(),ideal(y_1^2*y_11^2*y_17-1),ideal(y_1^3*y_9^2*y_21^2-1),ideal(y_6^3*y_21-y_10,y_1*y_10^3-y_6^2,y_1*y_6*y_10^2*y_21-1),ideal(y_6*y_15-1,y_2*y_15^2-y_6*y_14,y_6^2*y_14-y_2*y_15),ideal(),ideal(y_11*y_13-1,y_1^2*y_21^3-y_13^2),ideal(y_1^2*y_14^3*y_21^3-1),ideal(y_10^2*y_21-1,y_1*y_15^4-y_10^3),ideal(),ideal(y_11*y_20-1,y_3*y_20^2-y_11*y_17,y_11^2*y_17-y_3*y_20),ideal(y_11*y_18*y_21-1,y_1*y_21^3-y_11*y_18^2,y_11^2*y_18^3-y_1*y_21^2),ideal(y_1*y_19^4*y_21^4-1),ideal(y_15*y_22-1),ideal(),ideal(y_20*y_22-1),ideal())",
},
"FF" => {
  "class" => "RingMap",
  "toString" => "map(R,R,{y_19^5*y_21^5, y_19^5*y_21^4, y_19^4*y_21^5, y_19^4*y_21^4, y_19^4*y_21^3, y_19^4*y_21^2, y_19^3*y_21^4, y_19^3*y_21^3, y_19^3*y_21^2, y_19^3*y_21, y_19^2*y_21^4, y_19^2*y_21^3, y_19^2*y_21^2, y_19^2*y_21, y_19^2, y_19*y_21^3, y_19*y_21^2, y_19*y_21, y_19, y_21^2, y_21, y_22})",
},
"o85" => {
  "class" => "Sequence",
  "toString" => "(ideal(),ideal(),ideal(),ideal(y_1^4*y_5*y_21-1),ideal(y_1^4*y_6^6*y_21-1),ideal(),ideal(y_1^2*y_11^2*y_17-1),ideal(y_1^3*y_9^2*y_21^2-1),ideal(y_6^3*y_21-y_10,y_1*y_10^3-y_6^2,y_1*y_6*y_10^2*y_21-1),ideal(y_6*y_15-1,y_2*y_15^2-y_6*y_14,y_6^2*y_14-y_2*y_15),ideal(),ideal(y_11*y_13-1,y_1^2*y_21^3-y_13^2),ideal(y_1^2*y_14^3*y_21^3-1),ideal(y_10^2*y_21-1,y_1*y_15^4-y_10^3),ideal(),ideal(y_11*y_20-1,y_3*y_20^2-y_11*y_17,y_11^2*y_17-y_3*y_20),ideal(y_11*y_18*y_21-1,y_1*y_21^3-y_11*y_18^2,y_11^2*y_18^3-y_1*y_21^2),ideal(y_1*y_19^4*y_21^4-1),ideal(y_15*y_22-1),ideal(),ideal(y_20*y_22-1),ideal())",
},
"o87" => {
  "class" => "Net",
  "toString" => "-- /home/dan/src/M2/Macaulay2/packages/ComputationsBook/toricHilbertScheme/polarCone.m2:16-20\nprimitive = (L) -> (\n     n := #L-1;                    g := L#n;\n     while n > 0 do (n = n-1;      g = gcd(g, L#n);\n          if g === 1 then n = 0);\n     if g === 1 then L else apply(L, i -> i // g));",
},
"o88" => {
  "class" => "Net",
  "toString" => "-- /home/dan/src/M2/Macaulay2/packages/ComputationsBook/toricHilbertScheme/polarCone.m2:28-32\ntoZZ = (L) -> (\n     d := apply(L, e -> denominator e);\n     R := ring d#0;             l := 1_R;\n     scan(d, i -> (l = (l*i // gcd(l,i))));    \n     apply(L, e -> (numerator(l*e))));",
},
"o89" => {
  "class" => "Net",
  "toString" => "-- /home/dan/src/M2/Macaulay2/packages/ComputationsBook/toricHilbertScheme/polarCone.m2:41-43\nrotateMatrix = (M) -> (\n     r := rank source M;        c := rank target M;\n     matrix table(r, c, (i,j) -> M_(c-j-1, r-i-1)));",
},
"o90" => {
  "class" => "Net",
  "toString" => "-- /home/dan/src/M2/Macaulay2/packages/ComputationsBook/toricHilbertScheme/polarCone.m2:57-65\nisRedundant = (V, vert) -> (\n     -- the row vector is redundant iff 'vert' contains an\n     -- entry in 'V'.\n     x := 0;            k := 0;\n     numRow := #V;      -- equals the number of inequalities\n     while x < 1 and k < numRow do (\n          if isSubset(V#k, vert) then x = x+1;\n          k = k+1;);     \n     x === 1);",
},
"o91" => {
  "class" => "Net",
  "toString" => "-- /home/dan/src/M2/Macaulay2/packages/ComputationsBook/toricHilbertScheme/polarCone.m2:89-118\nfourierMotzkin = (A, V, spot) -> (\n     -- initializing local variables\n     numRow := #A;               -- equal to the length of V\n     numCol := #(A#0);           pos := {};       \n     neg := {};                  projA := {};     \n     projV := {};                k := 0;\n     -- divide the inequalities into three groups.\n     while k < numRow do (\n          if A#k#0 < 0 then neg = append(neg, k)\n          else if A#k#0 > 0 then pos = append(pos, k)\n          else (projA = append(projA, A#k);\n               projV = append(projV, V#k););\n          k = k+1;);      \n     -- generate new irredundant inequalities.\n     scan(pos, i -> scan(neg, j -> (vert := V#i + V#j;\n                    if not isRedundant(projV, vert)  \n                    then (iRow := A#i;     jRow := A#j;\n                         iCoeff := - jRow#0;\n                         jCoeff := iRow#0;\n                         a := iCoeff*iRow + jCoeff*jRow;\n                         projA = append(projA, a);\n                         projV = append(projV, vert););)));\n     -- don't forget the implicit inequalities '-t <= 0'.\n     scan(pos, i -> (vert := V#i + set{spot};\n          if not isRedundant(projV, vert) then (\n               projA = append(projA, A#i);\n               projV = append(projV, vert););));\n     -- remove the first column \n     projA = apply(projA, e -> e_{1..(numCol-1)});\n     {projA, projV});   ",
},
"o92" => {
  "class" => "Net",
  "toString" => "-- /home/dan/src/M2/Macaulay2/packages/ComputationsBook/toricHilbertScheme/polarCone.m2:137-192\npolarCone(Matrix, Matrix) := (Z, H) -> (\n     R := ring source Z;\n     if R =!= ring source H then error (\"polarCone: \" | \n          \"expected matrices over the same ring\");\n     if rank target Z =!= rank target H then error (\n          \"polarCone: expected matrices to have the \" |\n          \"same number of rows\");     \n     if (R =!= ZZ) then error (\"polarCone: expected \" | \n          \"matrices over 'ZZ'\");\n     -- expressing 'cone(Y)+affine(B)' as '{x : Ax <= 0}'\n     Y := substitute(Z, QQ);     B := substitute(H, QQ);   \n     if rank source B > 0 then Y = Y | B | -B;\n     n := rank source Y;         d := rank target Y;     \n     A := Y | -id_(QQ^d);\n     -- computing the row echelon form of 'A'\n     A = gens gb rotateMatrix A;\n     L := rotateMatrix leadTerm A;\n     A = rotateMatrix A;\n     -- find pivots\n     numRow = rank target A;                  -- numRow <= d\n     i := 0;                     pivotCol := {};\n     while i < numRow do (j := 0;\n          while j < n+d and L_(i,j) =!= 1_QQ do j = j+1;\n          pivotCol = append(pivotCol, j);\n          i = i+1;);\n     -- computing the row-reduced echelon form of 'A'\n     A = ((submatrix(A, pivotCol))^(-1)) * A;\n     -- converting 'A' into a list of integer row vectors \n     A = entries A;\n     A = apply(A, e -> primitive toZZ e);\n     -- creating the vertex list 'V' for double description\n     -- and listing the variables 'T' which remain to be\n     -- eliminated\n     V := {};                    T := toList(0..(n-1));\n     scan(pivotCol, e -> (if e < n then (T = delete(e, T);\n                    V = append(V, set{e});)));\n     -- separating inequalities 'A' and equalities 'E'\n     eqnRow := {};               ineqnRow := {};\n     scan(numRow, i -> (if pivotCol#i >= n then \n               eqnRow = append(eqnRow, i)\n               else ineqnRow = append(ineqnRow, i);));    \n     E := apply(eqnRow, i -> A#i);\n     E = apply(E, e -> e_{n..(n+d-1)});\n     A = apply(ineqnRow, i -> A#i);\n     A = apply(A, e -> e_(T | toList(n..(n+d-1)))); \n     -- successive projections eliminate the variables 'T'.\n     if A =!= {} then scan(T, t -> (\n               D := fourierMotzkin(A, V, t);\n               A = D#0;          V = D#1;));\n     -- output formating\n     A = apply(A, e -> primitive e);\n     if A === {} then A = map(ZZ^d, ZZ^0, 0)\n     else A = transpose matrix A;\n     if E === {} then E = map(ZZ^d, ZZ^0, 0)\n     else E = transpose matrix E;\n     (A, E)); ",
},
"o93" => {
  "class" => "Net",
  "toString" => "-- /home/dan/src/M2/Macaulay2/packages/ComputationsBook/toricHilbertScheme/polarCone.m2:199-200\npolarCone(Matrix) := (Z) -> (\n     polarCone(Z, map(ZZ^(rank target Z), ZZ^0, 0)));",
},
"o94" => {
  "class" => "Matrix",
  "toString" => "matrix {{1, 1, 2, 2, 3, 3}, {2, 3, 1, 3, 1, 2}, {3, 2, 3, 1, 2, 1}}",
  "ring" => "ZZ",
  "degrees ambient target" => "{{}, {}, {}}",
  "degrees ambient source" => "{{}, {}, {}, {}, {}, {}}",
  "degree" => "{}",
},
"P" => {
  "class" => "Sequence",
  "toString" => "(matrix {{1, 1, 1, -1, -1, -5}, {-1, 1, -5, 1, -1, 1}, {-1, -5, 1, -1, 1, 1}},matrix {{}, {}, {}})",
},
"o95" => {
  "class" => "Sequence",
  "toString" => "(matrix {{1, 1, 1, -1, -1, -5}, {-1, 1, -5, 1, -1, 1}, {-1, -5, 1, -1, 1, 1}},matrix {{}, {}, {}})",
},
"Q" => {
  "class" => "Sequence",
  "toString" => "(matrix {{1, 1, 2, 2, 3, 3}, {2, 3, 1, 3, 1, 2}, {3, 2, 3, 1, 2, 1}},matrix {{}, {}, {}})",
},
"o96" => {
  "class" => "Sequence",
  "toString" => "(matrix {{1, 1, 2, 2, 3, 3}, {2, 3, 1, 3, 1, 2}, {3, 2, 3, 1, 2, 1}},matrix {{}, {}, {}})",
},
"o97" => {
  "class" => "PolynomialRing",
  "generators" => "{a, b, c, d, e}",
  "degrees" => "{{1}, {1}, {1}, {1}, {1}}",
  "toString" => "A",
  "coefficientRing" => "QQ",
},
"o98" => {
  "class" => "Ideal",
  "ring" => "o97",
  "toString" => "ideal(-b^2+a-1,-c^2+b,-d^2+c,a^2-e^2)",
  "degrees source generators" => "{{2}, {2}, {2}, {2}}",
},
"o99" => {
  "class" => "RingMap",
  "toString" => "map(A,A,{d^8+1, d^4, d^2, d, e})",
},
"I1" => {
  "class" => "Ideal",
  "ring" => "o97",
  "toString" => "ideal(d^16+2*d^8-e^2+1)",
  "degrees source generators" => "{{16}}",
},
"o100" => {
  "class" => "Ideal",
  "ring" => "o97",
  "toString" => "ideal(d^16+2*d^8-e^2+1)",
  "degrees source generators" => "{{16}}",
},
"o101" => {
  "class" => "Ideal",
  "ring" => "o97",
  "toString" => "ideal(d^8-a+1,d^4-b,d^2-c,d^16+2*d^8-e^2+1)",
  "degrees source generators" => "{{0}, {0}, {0}, {16}}",
},
"o102" => {
  "class" => "Net",
  "toString" => "-- /home/dan/src/M2/Macaulay2/packages/ComputationsBook/toricHilbertScheme/minPres.m2:1-12\nfindRedundant=(f)->(\n     A := ring(f);\n     p := first entries contract(vars A,f);\n     i := position(p, g -> g != 0 and first degree g === 0);\n     if i === null then\n         null\n     else (\n          v := A_i;\n          c := f_v;\n          {i,(-1)*(c^(-1)*(f-c*v))}\n          )\n     )",
},
"o103" => {
  "class" => "Net",
  "toString" => "-- /home/dan/src/M2/Macaulay2/packages/ComputationsBook/toricHilbertScheme/minPres.m2:14-39\nremoveRedundantVariables = (I) -> (\n     A := ring I;\n     xmap := new MutableList from gens A;       \n     M := gens I;\n     findnext := () -> (\n          p := null;\n          next := 0;\n          done := false;\n          ngens := numgens source M;\n          while next < ngens and not done do (\n            p = findRedundant(M_(0,next));\n            if p =!= null then\n                 done = true\n            else next=next+1;\n          );\n          p);\n     p := findnext();\n     while p =!= null do (\n          xmap#(p#0) = p#1;\n          F1 := map(A,A,toList xmap);\n          F2 := map(A,A, F1 (F1.matrix));\n          xmap = new MutableList from first entries F2.matrix;\n          M = compress(F2 M);\n          p = findnext();\n          );\n     map(A,A,toList xmap));",
},
}
