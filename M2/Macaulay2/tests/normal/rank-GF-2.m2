-- bugs reported by Dimitri.Markouchevitch@math.univ-lille1.fr

-- second one:

p = 13;
KK= GF( (ZZ/p[a])/ideal(a^4-a^3+a^2-a+1));
R5=KK[xi_0..xi_5];
A = matrix(KK, {{(33/35)*a^3-(13/35)*a^2+(53/35)*a-16/35, (106/35)*a^3-(47/35)*a^2+(17/5)*a-68/35, (9/35)*a^2+(3/35)*a+3/70, (4/7)*a^3+(33/35)*a^2-(4/7)*a+17/35, (13/35)*a^3+(106/35)*a^2-(59/35)*a+38/35, (3/35)*a^3-(9/35)*a+3/70, -(8/7)*a^3+(4/7)*a^2-(53/35)*a+37/35, -(72/35)*a^3+(13/35)*a^2-(17/5)*a+51/35, -(12/35)*a^3+(3/35)*a^2-(3/35)*a+9/70, -(13/35)*a^3-(8/7)*a^2+(4/7)*a-3/35, -(47/35)*a^3-(72/35)*a^2+(59/35)*a-3/5, (9/35)*a^3-(12/35)*a^2+(9/35)*a-3/14, -(4/7)*a^3+(4/7)*a^2+2/7, -(6/7)*a^3+(6/7)*a^2+3/7, (3/35)*a^3-(3/35)*a^2-3/70, (4/7)*a^3-(4/7)*a^2-2/7, (6/7)*a^3-(6/7)*a^2-3/7, -(3/35)*a^3+(3/35)*a^2+3/70, -(53/35)*a^3-(4/7)*a^2-(4/7)*a-3/35, -(22/7)*a^3-(36/35)*a^2-(2/7)*a-24/35, (18/35)*a^3-(6/35)*a^2+(9/35)*a-39/70, -(4/7)*a^3+(8/7)*a^2-(73/35)*a+17/35, -(36/35)*a^3+(46/35)*a^2-(146/35)*a+12/35, -(6/35)*a^3-(3/35)*a^2+(12/35)*a-27/70, (33/35)*a^3-(53/35)*a^2+(73/35)*a-8/5, (20/7)*a^3-(22/7)*a^2+(146/35)*a-134/35, -(9/35)*a^3+(18/35)*a^2-(12/35)*a-3/70, (8/7)*a^3+(33/35)*a^2+(4/7)*a-23/35, (46/35)*a^3+(20/7)*a^2+(2/7)*a-34/35, -(3/35)*a^3-(9/35)*a^2-(9/35)*a-3/10}, {-(8/35)*a^3+(4/35)*a^2-(12/35)*a+6/35, -(31/35)*a^3+(3/7)*a^2-a+29/35, -(6/35)*a^2-(2/35)*a-1/35, -(4/35)*a^3-(8/35)*a^2+(4/35)*a-2/35, -(4/35)*a^3-(31/35)*a^2+(16/35)*a-2/35, -(2/35)*a^3+(6/35)*a-1/35, (8/35)*a^3-(4/35)*a^2+(12/35)*a-6/35, (4/7)*a^3-(4/35)*a^2+a-6/35, (8/35)*a^3-(2/35)*a^2+(2/35)*a-3/35, (4/35)*a^3+(8/35)*a^2-(4/35)*a+2/35, (3/7)*a^3+(4/7)*a^2-(16/35)*a+2/5, -(6/35)*a^3+(8/35)*a^2-(6/35)*a+1/7, (4/35)*a^3-(4/35)*a^2-2/35, (6/35)*a^3-(6/35)*a^2-3/35, -(2/35)*a^3+(2/35)*a^2+1/35, -(4/35)*a^3+(4/35)*a^2+2/35, -(6/35)*a^3+(6/35)*a^2+3/35, (2/35)*a^3-(2/35)*a^2-1/35, (12/35)*a^3+(4/35)*a^2+(4/35)*a+2/35, (29/35)*a^3+(2/7)*a^2+(2/35)*a+16/35, -(12/35)*a^3+(4/35)*a^2-(6/35)*a+13/35, (4/35)*a^3-(8/35)*a^2+(16/35)*a-2/35, (2/7)*a^3-(12/35)*a^2+(39/35)*a+6/35, (4/35)*a^3+(2/35)*a^2-(8/35)*a+9/35, -(8/35)*a^3+(12/35)*a^2-(16/35)*a+2/5, -(27/35)*a^3+(29/35)*a^2-(39/35)*a+9/7, (6/35)*a^3-(12/35)*a^2+(8/35)*a+1/35, -(8/35)*a^3-(8/35)*a^2-(4/35)*a+6/35, -(12/35)*a^3-(27/35)*a^2-(2/35)*a+18/35, (2/35)*a^3+(6/35)*a^2+(6/35)*a+1/5}, {(24/35)*a^3-(12/35)*a^2+(36/35)*a-18/35, (72/35)*a^3-(24/35)*a^2+(12/5)*a-9/7, -(1/5)*a^3+(11/35)*a^2-(1/35)*a+27/70, (12/35)*a^3+(24/35)*a^2-(12/35)*a+6/35, (12/35)*a^3+(72/35)*a^2-(48/35)*a+27/35, (6/35)*a^3-(1/5)*a^2-(4/35)*a+13/70, -(24/35)*a^3+(12/35)*a^2-(36/35)*a+18/35, -(12/7)*a^3+(12/35)*a^2-(12/5)*a+39/35, -(2/7)*a^3+(6/35)*a^2+(1/35)*a+5/14, -(12/35)*a^3-(24/35)*a^2+(12/35)*a-6/35, -(24/35)*a^3-(12/7)*a^2+(48/35)*a-3/5, (11/35)*a^3-(2/7)*a^2+(4/35)*a+1/14, -(12/35)*a^3+(12/35)*a^2+6/35, -(18/35)*a^3+(18/35)*a^2+9/35, -(1/35)*a^3+(1/35)*a^2+1/70, (12/35)*a^3-(12/35)*a^2-6/35, (18/35)*a^3-(18/35)*a^2-9/35, (1/35)*a^3-(1/35)*a^2-1/70, -(36/35)*a^3-(12/35)*a^2-(12/35)*a-6/35, -(66/35)*a^3-(6/7)*a^2-(6/35)*a-27/35, (22/35)*a^3-(1/7)*a^2+(11/35)*a-29/70, -(12/35)*a^3+(24/35)*a^2-(48/35)*a+6/35, -(6/7)*a^3+(36/35)*a^2-(96/35)*a+3/35, -(1/7)*a^3-(6/35)*a^2+(17/35)*a-19/70, (24/35)*a^3-(36/35)*a^2+(48/35)*a-6/5, (12/7)*a^3-(66/35)*a^2+(96/35)*a-93/35, -(11/35)*a^3+(22/35)*a^2-(17/35)*a+3/14, (24/35)*a^3+(24/35)*a^2+(12/35)*a-18/35, (36/35)*a^3+(12/7)*a^2+(6/35)*a-33/35, -(6/35)*a^3-(11/35)*a^2-(11/35)*a-1/10}, {(22/35)*a^3-(29/70)*a^2+(59/70)*a-33/70, (59/35)*a^3-(51/70)*a^2+(21/10)*a-79/70, (6/35)*a^2+(2/35)*a+1/35, (3/14)*a^3+(22/35)*a^2-(3/14)*a+11/70, (29/70)*a^3+(59/35)*a^2-(67/70)*a+39/70, (2/35)*a^3-(6/35)*a+1/35, -(3/7)*a^3+(3/14)*a^2-(59/70)*a+13/35, -(48/35)*a^3+(29/70)*a^2-(21/10)*a+34/35, -(8/35)*a^3+(2/35)*a^2-(2/35)*a+3/35, -(29/70)*a^3-(3/7)*a^2+(3/14)*a-2/35, -(51/70)*a^3-(48/35)*a^2+(67/70)*a-2/5, (6/35)*a^3-(8/35)*a^2+(6/35)*a-1/7, -(3/14)*a^3+(3/14)*a^2+5/14, -(4/7)*a^3+(4/7)*a^2+2/7, (2/35)*a^3-(2/35)*a^2-1/35, (3/14)*a^3-(3/14)*a^2+1/7, (4/7)*a^3-(4/7)*a^2-2/7, -(2/35)*a^3+(2/35)*a^2+1/35, -(59/70)*a^3-(3/14)*a^2-(3/14)*a-2/35, -(27/14)*a^3-(24/35)*a^2-(5/14)*a-16/35, (12/35)*a^3-(4/35)*a^2+(6/35)*a-13/35, -(3/14)*a^3+(3/7)*a^2-(37/35)*a+11/70, -(24/35)*a^3+(73/70)*a^2-(183/70)*a+8/35, -(4/35)*a^3-(2/35)*a^2+(8/35)*a-9/35, (22/35)*a^3-(59/70)*a^2+(37/35)*a-9/10, (11/7)*a^3-(27/14)*a^2+(183/70)*a-167/70, -(6/35)*a^3+(12/35)*a^2-(8/35)*a-1/35, (3/7)*a^3+(22/35)*a^2+(3/14)*a-19/70, (73/70)*a^3+(11/7)*a^2+(5/14)*a-57/70, -(2/35)*a^3-(6/35)*a^2-(6/35)*a-1/5}, {-(2/35)*a^3+(1/35)*a^2-(3/35)*a+3/70, (1/35)*a^3-(1/7)*a^2-3/70, -(3/70)*a^2-(1/70)*a-1/140, -(1/35)*a^3-(2/35)*a^2+(1/35)*a-1/70, -(1/35)*a^3+(1/35)*a^2+(4/35)*a-1/70, -(1/70)*a^3+(3/70)*a-1/140, (2/35)*a^3-(1/35)*a^2+(3/35)*a-3/70, (1/7)*a^3-(1/35)*a^2-3/70, (2/35)*a^3-(1/70)*a^2+(1/70)*a-3/140, (1/35)*a^3+(2/35)*a^2-(1/35)*a+1/70, -(1/7)*a^3+(1/7)*a^2-(4/35)*a+1/10, -(3/70)*a^3+(2/35)*a^2-(3/70)*a+1/28, (1/35)*a^3-(1/35)*a^2-1/70, (3/70)*a^3-(3/70)*a^2+8/35, -(1/70)*a^3+(1/70)*a^2+1/140, -(1/35)*a^3+(1/35)*a^2+1/70, -(3/70)*a^3+(3/70)*a^2+19/70, (1/70)*a^3-(1/70)*a^2-1/140, (3/35)*a^3+(1/35)*a^2+(1/35)*a+1/70, -(3/70)*a^3+(1/14)*a^2+(1/70)*a+4/35, -(3/35)*a^3+(1/35)*a^2-(3/70)*a+13/140, (1/35)*a^3-(2/35)*a^2+(4/35)*a-1/70, (1/14)*a^3-(3/35)*a^2+(1/35)*a+3/70, (1/35)*a^3+(1/70)*a^2-(2/35)*a+9/140, -(2/35)*a^3+(3/35)*a^2-(4/35)*a+1/10, (2/35)*a^3-(3/70)*a^2-(1/35)*a+1/14, (3/70)*a^3-(3/35)*a^2+(2/35)*a+1/140, -(2/35)*a^3-(2/35)*a^2-(1/35)*a+3/70, -(3/35)*a^3+(2/35)*a^2-(1/70)*a+9/70, (1/70)*a^3+(3/70)*a^2+(3/70)*a+1/20}, {-(24/35)*a^3+(12/35)*a^2-(36/35)*a+18/35, -(72/35)*a^3+(24/35)*a^2-(12/5)*a+9/7, (1/5)*a^3-(11/35)*a^2+(1/35)*a-19/140, -(12/35)*a^3-(24/35)*a^2+(12/35)*a-6/35, -(12/35)*a^3-(72/35)*a^2+(48/35)*a-27/35, -(6/35)*a^3+(1/5)*a^2+(4/35)*a+9/140, (24/35)*a^3-(12/35)*a^2+(36/35)*a-18/35, (12/7)*a^3-(12/35)*a^2+(12/5)*a-39/35, (2/7)*a^3-(6/35)*a^2-(1/35)*a-3/28, (12/35)*a^3+(24/35)*a^2-(12/35)*a+6/35, (24/35)*a^3+(12/7)*a^2-(48/35)*a+3/5, -(11/35)*a^3+(2/7)*a^2-(4/35)*a+5/28, (12/35)*a^3-(12/35)*a^2-6/35, (18/35)*a^3-(18/35)*a^2-9/35, (1/35)*a^3-(1/35)*a^2+33/140, -(12/35)*a^3+(12/35)*a^2+6/35, -(18/35)*a^3+(18/35)*a^2+9/35, -(1/35)*a^3+(1/35)*a^2+37/140, (36/35)*a^3+(12/35)*a^2+(12/35)*a+6/35, (66/35)*a^3+(6/7)*a^2+(6/35)*a+27/35, -(22/35)*a^3+(1/7)*a^2-(11/35)*a+93/140, (12/35)*a^3-(24/35)*a^2+(48/35)*a-6/35, (6/7)*a^3-(36/35)*a^2+(96/35)*a-3/35, (1/7)*a^3+(6/35)*a^2-(17/35)*a+73/140, -(24/35)*a^3+(36/35)*a^2-(48/35)*a+6/5, -(12/7)*a^3+(66/35)*a^2-(96/35)*a+93/35, (11/35)*a^3-(22/35)*a^2+(17/35)*a+1/28, -(24/35)*a^3-(24/35)*a^2-(12/35)*a+18/35, -(36/35)*a^3-(12/7)*a^2-(6/35)*a+33/35, (6/35)*a^3+(11/35)*a^2+(11/35)*a+7/20}})
Jten = matrix(R5,{{4001*xi_2+(9624*a^3+6039*a^2+8643*a-8148)*xi_3+(24753*a^3-22209*a^2+11832*a-33723)*xi_4+(5739*a^3+5129*a^2+6158*a-1671)*xi_5, 4001*xi_2+(-981*a^3+9624*a^2-15663*a+1476)*xi_3+(-12921*a^3+24753*a^2-2544*a-8970)*xi_4+(419*a^3+5739*a^2-10868*a+4068)*xi_5, 4001*xi_2+(-14682*a^3-981*a^2-8643*a+495)*xi_3+(10377*a^3-12921*a^2-11832*a-21891)*xi_4+(-11287*a^3+419*a^2-6158*a+4487)*xi_5, 4001*xi_2+(6039*a^3-14682*a^2+15663*a-14187)*xi_3+(-22209*a^3+10377*a^2+2544*a-11514)*xi_4+(5129*a^3-11287*a^2+10868*a-6800)*xi_5, 29*xi_2+(84*a^3-84*a^2+18)*xi_3+(186*a^3-186*a^2+102)*xi_4+(2*a^3-2*a^2-12)*xi_5, 29*xi_2+(-84*a^3+84*a^2+102)*xi_3+(-186*a^3+186*a^2+288)*xi_4+(-2*a^3+2*a^2-10)*xi_5, 276551*xi_2+(-200754*a^3+171288*a^2+290058*a-818640)*xi_3+(-778602*a^3-603702*a^2-4158*a+635910)*xi_4+(-140246*a^3+170394*a^2+243266*a-432148)*xi_5, 276551*xi_2+(171288*a^3-461346*a^2-29466*a-989928)*xi_3+(-603702*a^3+607860*a^2-1382304*a+1239612)*xi_4+(170394*a^3-413660*a^2+30148*a-602542)*xi_5,276551*xi_2+(490812*a^3-200754*a^2+29466*a-1019394)*xi_3+(774444*a^3-778602*a^2+1382304*a-142692)*xi_4+(383512*a^3-140246*a^2-30148*a-572394)*xi_5, 276551*xi_2+(-461346*a^3+490812*a^2-290058*a-528582)*xi_3+(607860*a^3+774444*a^2+4158*a+631752)*xi_4+(-413660*a^3+383512*a^2-243266*a-188882)*xi_5}, {4001*xi_1+(-9068*a^3+10708*a^2+3*a+14911)*xi_3+(19815*a^3+11562*a^2+25110*a+1877)*xi_4+(-6939*a^3+7458*a^2-870*a+8893)*xi_5, 4001*xi_1+(9071*a^3-9068*a^2-1640*a+5843)*xi_3+(5295*a^3+19815*a^2-31377*a+21692)*xi_4+(6069*a^3-6939*a^2-519*a+1954)*xi_5, 4001*xi_1+(-10711*a^3+9071*a^2-3*a+14914)*xi_3+(-36672*a^3+5295*a^2-25110*a+26987)*xi_4+(-6588*a^3+6069*a^2+870*a+8023)*xi_5, 4001*xi_1+(10708*a^3-10711*a^2+1640*a+4203)*xi_3+(11562*a^3-36672*a^2+31377*a-9685)*xi_4+(7458*a^3-6588*a^2+519*a+1435)*xi_5, 29*xi_1+(-44*a^3+44*a^2-26)*xi_3+(-114*a^3+114*a^2-70)*xi_4+(10*a^3-10*a^2-2)*xi_5, 29*xi_1+(44*a^3-44*a^2-70)*xi_3+(114*a^3-114*a^2-184)*xi_4+(-10*a^3+10*a^2+8)*xi_5, 276551*xi_1+(316850*a^3-123898*a^2+318204*a-315274)*xi_3+(-419892*a^3-846978*a^2-461340*a+232760)*xi_4+(275808*a^3-50694*a^2+279228*a-371500)*xi_5, 276551*xi_1+(-123898*a^3-194306*a^2+192952*a-191376)*xi_3+(-846978*a^3+1308318*a^2-1266870*a+1079738)*xi_4+(-50694*a^3-228534*a^2+225114*a-320806)*xi_5, 276551*xi_1+(1354*a^3+316850*a^2-192952*a+1576)*xi_3+(-41448*a^3-419892*a^2+1266870*a-187132)*xi_4+(3420*a^3+275808*a^2-225114*a-95692)*xi_5, 276551*xi_1+(-194306*a^3+1354*a^2-318204*a+2930)*xi_3+(1308318*a^3-41448*a^2+461340*a-228580)*xi_4+(-228534*a^3+3420*a^2-279228*a-92272)*xi_5}, {4001*xi_0+(-21241*a^3-17483*a^2-25121*a-11206)*xi_3+(-106761*a^3+7866*a^2-54231*a+73241)*xi_4+(-13653*a^3-11200*a^2-16735*a-3073)*xi_5, 4001*xi_0+(-3880*a^3-21241*a^2+38724*a-32447)*xi_3+(52530*a^3-106761*a^2+98895*a-33520)*xi_4+(-3082*a^3-13653*a^2+24853*a-16726)*xi_5, 4001*xi_0+(42604*a^3-3880*a^2+25121*a-36327)*xi_3+(46365*a^3+52530*a^2+54231*a+19010)*xi_4+(27935*a^3-3082*a^2+16735*a-19808)*xi_5, 4001*xi_0+(-17483*a^3+42604*a^2-38724*a+6277)*xi_3+(7866*a^3+46365*a^2-98895*a+65375)*xi_4+(-11200*a^3+27935*a^2-24853*a+8127)*xi_5, 29*xi_0+(172*a^3-172*a^2+70)*xi_3+(414*a^3-414*a^2+242)*xi_4+(-18*a^3+18*a^2-8)*xi_5, 29*xi_0+(-172*a^3+172*a^2+242)*xi_3+(-414*a^3+414*a^2+656)*xi_4+(18*a^3-18*a^2-26)*xi_5, 276551*xi_0+(789578*a^3+136948*a^2+539302*a-678930)*xi_3+(-2113914*a^3-765732*a^2-2185392*a-532180)*xi_4+(735374*a^3+189048*a^2+540304*a-125830)*xi_5, 276551*xi_0+(136948*a^3-676250*a^2+926526*a-815878)*xi_3+(-765732*a^3+2951124*a^2-2879646*a+233552)*xi_4+(189048*a^3-729352*a^2+924422*a-314878)*xi_5, 276551*xi_0+(-250276*a^3+789578*a^2-926526*a+110648)*xi_3+(-71478*a^3-2113914*a^2+2879646*a-2646094)*xi_4+(-195070*a^3+735374*a^2-924422*a+609544)*xi_5, 276551*xi_0+(-676250*a^3-250276*a^2-539302*a-139628)*xi_3+(2951124*a^3-71478*a^2+2185392*a-2717572)*xi_4+(-729352*a^3-195070*a^2-540304*a+414474)*xi_5}})
A1=mutableMatrix(KK,6,6);
for i from 0 to 8 do
   for j from i+1 to 9 do
   (
      for m from 0 to 2 do
         for k from 0 to 5 do
            A1_(m,k)=Jten_(m,i)_(xi_k);
      for m from 0 to 2 do
         for k from 0 to 5 do
            A1_(3+m,k)=Jten_(m,j)_(xi_k);
      A2=matrix A1;
      A2=gens trim ker A2;
     lst=apply(6,k->A2_(k,0));
     pts_(i,j)=lst;
     pts_(j,i)=lst;
   );
for i from 0 to 9 do
(
   v=sum(apply(3,q->sum(apply(4,q0->random(p)*a^q0))*A_(3*i+q)));
   pts_(i,i)=apply(6,k->v_k);
);
--
-- Check that the 55 points lie in respective planes
--
for i from 0 to 9 do
for j from 0 to 9 do
for m from 0 to 2 do
(s=substitute(Jten_(m,i), apply(6,q-> R5_q=>pts_(i,j)_q));
if s != 0 then print(toString i|" "|toString j|" "|toString m));
end
========================================

When I run version 1.2, this script produces the error:

============================================
i9 : --
    -- Check:
    --
    for i from 0 to 9 do
    for j from 0 to 9 do
    for m from 0 to 2 do
    (s=substitute(Jten_(m,i), apply(6,q-> R5_q=>pts_(i,j)_q));
    if s != 0 then print(toString i|" "|toString j|" "|toString m));
stdio:33:4:(1):[0]: error: no method found for applying promote to:
                    3     2
    argument 1 :  6a  + 5a  + 6a - 2 (of class         ZZ          )
                                                       --[a]
                                                       13
                                               --------------------
                                               ....................
    argument 2 :          ZZ
                          --[a]
                          13
                  --------------------
                  ....................

====================================================

The same script works perfectly with version 1.1.

One more bug here: in version 1.2, the above "trim ker" produces
a 6x3 matrix of rank 1. In version 1.1, it produces a 6x1 matrix
as expected.

Best,

Dimitri Markushevich

-- Local Variables:
-- compile-command: "make -C $M2BUILDDIR/Macaulay2/packages/Macaulay2Doc/test rank-GF-2.out"
-- End:
