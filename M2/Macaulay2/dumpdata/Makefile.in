# @configure_input@
VPATH = @srcdir@
include ../../include/config.Makefile
CFLAGS += -O0 -fno-stack-protector
CPPFLAGS += -I../../include
checkit: checkit.o libdump.a
map.o: map.h file.h std.h warning.h
map.o: map-solaris.c map-linux.c map-macosx.c
dumpdata.o: dumpdata.h map.h warning.h std.h maputil.h
maputil.o: maputil.h map.h
checkit.o: dumpdata.h std.h
file.o: std.h
warning.o: warning.h std.h
gdb: checkit; gdb checkit
ifneq (@ETAGS@,false)
all: tags
endif
tags: @srcdir@/TAGS
@srcdir@/TAGS: Makefile @srcdir@/*.h @srcdir@/*.c ; cd @srcdir@ && @ETAGS@ *.h *.c
clean::; rm -f *.o checkit core check-data *.a libdump.a
EXTRAOBJS :=
# EXTRAOBJS += mmap.o
# EXTRAOBJS += write.o

## use "all" for copious debugging output from ld.so
# LD_DEBUG = all
LD_DEBUG = 

$(EXTRAOBJS): /usr/lib/libc.a; $(AR) x $< $@	
libdump.a: libdump.a(file.o warning.o map.o dumpdata.o maputil.o printmaps.o $(EXTRAOBJS)); ranlib libdump.a
all: libdump.a
check:: checkit
	./checkit dump "hi there" && ./checkit load "look!"
#	LD_DEBUG=$(LD_DEBUG) LOADDATA_DEBUG=true; export LD_DEBUG LOADDATA_DEBUG; set -x; ./checkit dump "hi there" && ./checkit load "look!"
debug1:; gdb --args ./checkit dump "hi there"
debug2:; gdb --args ./checkit load "look!"
distclean: clean; rm -f Makefile
Makefile: Makefile.in; cd ../..; ./config.status Macaulay2/dumpdata/Makefile
check:: testprintmaps; ./$<
testprintmaps:libdump.a
clean::; rm -f testprintmaps

ifeq "@HAVE_PERSONALITY@" "yes"
all: personality
clean::; rm -f personality
all: personality @pre_bindir@  ; @INSTALL_PROGRAM@ $< @pre_bindir@/personality
@pre_bindir@ :; @INSTALL@ -d "$@"
PERDIR = @pre_packagesdir@/personality
$(PERDIR):; @INSTALL@ -d "$@"
all: personality.c $(PERDIR) ; @INSTALL_DATA@ $^
endif

# Local Variables:
# compile-command: "make -C $M2BUILDDIR/Macaulay2/dumpdata "
# End:
.NOTPARALLEL:
