--This file computes Betti tables for P^1 for d = 9 and b = 8
A := degreesRing 2
new HashTable from {
--tb stands for Total Betti numbers
"tb"=>new HashTable from {(7,0) => 72, (6,1) => 0, (7,1) => 0, (8,0) => 9, (8,1) => 0, (0,0) => 9, (0,1) => 0, (1,0) => 72, (2,0) => 252, (1,1) => 0, (2,1) => 0, (3,0) => 504, (4,0) => 630, (3,1) => 0, (5,0) => 504, (4,1) => 0, (5,1) => 0, (6,0) => 252},
--mb stands for Multigraded Betti numbers
"mb"=>new HashTable from {(7,0) => A_0^43*A_1^28+2*A_0^42*A_1^29+3*A_0^41*A_1^30+4*A_0^40*A_1^31+5*A_0^39*A_1^32+6*A_0^38*A_1^33+7*A_0^37*A_1^34+8*A_0^36*A_1^35+8*A_0^35*A_1^36+7*A_0^34*A_1^37+6*A_0^33*A_1^38+5*A_0^32*A_1^39+4*A_0^31*A_1^40+3*A_0^30*A_1^41+2*A_0^29*A_1^42+A_0^28*A_1^43, (6,1) => 0, (8,0) => A_0^44*A_1^36+A_0^43*A_1^37+A_0^42*A_1^38+A_0^41*A_1^39+A_0^40*A_1^40+A_0^39*A_1^41+A_0^38*A_1^42+A_0^37*A_1^43+A_0^36*A_1^44, (7,1) => 0, (8,1) => 0, (0,0) => A_0^8+A_0^7*A_1+A_0^6*A_1^2+A_0^5*A_1^3+A_0^4*A_1^4+A_0^3*A_1^5+A_0^2*A_1^6+A_0*A_1^7+A_1^8, (0,1) => 0, (1,0) => A_0^16*A_1+2*A_0^15*A_1^2+3*A_0^14*A_1^3+4*A_0^13*A_1^4+5*A_0^12*A_1^5+6*A_0^11*A_1^6+7*A_0^10*A_1^7+8*A_0^9*A_1^8+8*A_0^8*A_1^9+7*A_0^7*A_1^10+6*A_0^6*A_1^11+5*A_0^5*A_1^12+4*A_0^4*A_1^13+3*A_0^3*A_1^14+2*A_0^2*A_1^15+A_0*A_1^16, (2,0) => A_0^23*A_1^3+2*A_0^22*A_1^4+4*A_0^21*A_1^5+6*A_0^20*A_1^6+9*A_0^19*A_1^7+12*A_0^18*A_1^8+16*A_0^17*A_1^9+19*A_0^16*A_1^10+22*A_0^15*A_1^11+23*A_0^14*A_1^12+24*A_0^13*A_1^13+23*A_0^12*A_1^14+22*A_0^11*A_1^15+19*A_0^10*A_1^16+16*A_0^9*A_1^17+12*A_0^8*A_1^18+9*A_0^7*A_1^19+6*A_0^6*A_1^20+4*A_0^5*A_1^21+2*A_0^4*A_1^22+A_0^3*A_1^23, (1,1) => 0, (2,1) => 0, (3,0) => A_0^29*A_1^6+2*A_0^28*A_1^7+4*A_0^27*A_1^8+7*A_0^26*A_1^9+11*A_0^25*A_1^10+16*A_0^24*A_1^11+22*A_0^23*A_1^12+28*A_0^22*A_1^13+34*A_0^21*A_1^14+39*A_0^20*A_1^15+43*A_0^19*A_1^16+45*A_0^18*A_1^17+45*A_0^17*A_1^18+43*A_0^16*A_1^19+39*A_0^15*A_1^20+34*A_0^14*A_1^21+28*A_0^13*A_1^22+22*A_0^12*A_1^23+16*A_0^11*A_1^24+11*A_0^10*A_1^25+7*A_0^9*A_1^26+4*A_0^8*A_1^27+2*A_0^7*A_1^28+A_0^6*A_1^29, (3,1) => 0, (4,0) => A_0^34*A_1^10+2*A_0^33*A_1^11+4*A_0^32*A_1^12+7*A_0^31*A_1^13+12*A_0^30*A_1^14+17*A_0^29*A_1^15+24*A_0^28*A_1^16+31*A_0^27*A_1^17+39*A_0^26*A_1^18+45*A_0^25*A_1^19+51*A_0^24*A_1^20+54*A_0^23*A_1^21+56*A_0^22*A_1^22+54*A_0^21*A_1^23+51*A_0^20*A_1^24+45*A_0^19*A_1^25+39*A_0^18*A_1^26+31*A_0^17*A_1^27+24*A_0^16*A_1^28+17*A_0^15*A_1^29+12*A_0^14*A_1^30+7*A_0^13*A_1^31+4*A_0^12*A_1^32+2*A_0^11*A_1^33+A_0^10*A_1^34, (4,1) => 0, (5,0) => A_0^38*A_1^15+2*A_0^37*A_1^16+4*A_0^36*A_1^17+7*A_0^35*A_1^18+11*A_0^34*A_1^19+16*A_0^33*A_1^20+22*A_0^32*A_1^21+28*A_0^31*A_1^22+34*A_0^30*A_1^23+39*A_0^29*A_1^24+43*A_0^28*A_1^25+45*A_0^27*A_1^26+45*A_0^26*A_1^27+43*A_0^25*A_1^28+39*A_0^24*A_1^29+34*A_0^23*A_1^30+28*A_0^22*A_1^31+22*A_0^21*A_1^32+16*A_0^20*A_1^33+11*A_0^19*A_1^34+7*A_0^18*A_1^35+4*A_0^17*A_1^36+2*A_0^16*A_1^37+A_0^15*A_1^38, (6,0) => A_0^41*A_1^21+2*A_0^40*A_1^22+4*A_0^39*A_1^23+6*A_0^38*A_1^24+9*A_0^37*A_1^25+12*A_0^36*A_1^26+16*A_0^35*A_1^27+19*A_0^34*A_1^28+22*A_0^33*A_1^29+23*A_0^32*A_1^30+24*A_0^31*A_1^31+23*A_0^30*A_1^32+22*A_0^29*A_1^33+19*A_0^28*A_1^34+16*A_0^27*A_1^35+12*A_0^26*A_1^36+9*A_0^25*A_1^37+6*A_0^24*A_1^38+4*A_0^23*A_1^39+2*A_0^22*A_1^40+A_0^21*A_1^41, (5,1) => 0},
--sb represents the betti numbers as sums of Schur functors
"sb"=>new HashTable from {(7,0) => {({43,28},1)}, (6,1) => {}, (7,1) => {}, (8,0) => {({44,36},1)}, (8,1) => {}, (0,0) => {({8,0},1)}, (0,1) => {}, (1,0) => {({16,1},1)}, (2,0) => {({23,3},1)}, (1,1) => {}, (2,1) => {}, (3,0) => {({29,6},1)}, (4,0) => {({34,10},1)}, (3,1) => {}, (5,0) => {({38,15},1)}, (4,1) => {}, (5,1) => {}, (6,0) => {({41,21},1)}},
--dw encodes the dominant weights in each entry
"dw"=>new HashTable from {(7,0) => {{43,28}}, (6,1) => {}, (7,1) => {}, (8,0) => {{44,36}}, (8,1) => {}, (0,0) => {{8,0}}, (0,1) => {}, (1,0) => {{16,1}}, (2,0) => {{23,3}}, (1,1) => {}, (2,1) => {}, (3,0) => {{29,6}}, (4,0) => {{34,10}}, (3,1) => {}, (5,0) => {{38,15}}, (4,1) => {}, (5,1) => {}, (6,0) => {{41,21}}},
--lw encodes the lex leading weight in each entry
"lw"=>new HashTable from {(7,0) => {43,28}, (6,1) => {}, (7,1) => {}, (8,0) => {44,36}, (8,1) => {}, (0,0) => {8,0}, (0,1) => {}, (1,0) => {16,1}, (2,0) => {23,3}, (1,1) => {}, (2,1) => {}, (3,0) => {29,6}, (4,0) => {34,10}, (3,1) => {}, (5,0) => {38,15}, (4,1) => {}, (5,1) => {}, (6,0) => {41,21}},
--nr encodes the number of distinct representations in each entry
"nr"=>new HashTable from {(7,0) => 1, (6,1) => 0, (7,1) => 0, (8,0) => 1, (8,1) => 0, (0,0) => 1, (0,1) => 0, (1,0) => 1, (2,0) => 1, (1,1) => 0, (2,1) => 0, (3,0) => 1, (4,0) => 1, (3,1) => 0, (5,0) => 1, (4,1) => 0, (5,1) => 0, (6,0) => 1},
--nrm encodes the number of representations with multiplicity in each entry
"nrm"=>new HashTable from {(7,0) => 1, (6,1) => 0, (7,1) => 0, (8,0) => 1, (8,1) => 0, (0,0) => 1, (0,1) => 0, (1,0) => 1, (2,0) => 1, (1,1) => 0, (2,1) => 0, (3,0) => 1, (4,0) => 1, (3,1) => 0, (5,0) => 1, (4,1) => 0, (5,1) => 0, (6,0) => 1},
--er encodes the errors in the computed multigraded Hilbert series via our Schur method in each entry
"er"=>new HashTable from {(7,0) => 72, (6,1) => 0, (7,1) => 0, (8,0) => 9, (8,1) => 0, (0,0) => 9, (0,1) => 0, (1,0) => 72, (2,0) => 252, (1,1) => 0, (2,1) => 0, (3,0) => 504, (4,0) => 630, (3,1) => 0, (5,0) => 504, (4,1) => 0, (5,1) => 0, (6,0) => 252},
--bs encodes the Boij-Soederberg coefficients each entry
"bs"=>{362880/1},
}
