--This file computes Betti tables for P^1 for d = 10 and b = 6
A := degreesRing 2
new HashTable from {
--tb stands for Total Betti numbers
"tb"=>new HashTable from {(7,0) => 0, (6,1) => 0, (7,1) => 45, (8,0) => 0, (8,1) => 20, (9,0) => 0, (9,1) => 3, (0,0) => 7, (0,1) => 0, (1,0) => 60, (2,0) => 225, (1,1) => 0, (3,0) => 480, (2,1) => 0, (4,0) => 630, (3,1) => 0, (5,0) => 504, (4,1) => 0, (5,1) => 0, (6,0) => 210},
--mb stands for Multigraded Betti numbers
"mb"=>new HashTable from {(7,0) => 0, (6,1) => 0, (8,0) => 0, (7,1) => A_0^51*A_1^35+A_0^50*A_1^36+2*A_0^49*A_1^37+2*A_0^48*A_1^38+3*A_0^47*A_1^39+3*A_0^46*A_1^40+4*A_0^45*A_1^41+4*A_0^44*A_1^42+5*A_0^43*A_1^43+4*A_0^42*A_1^44+4*A_0^41*A_1^45+3*A_0^40*A_1^46+3*A_0^39*A_1^47+2*A_0^38*A_1^48+2*A_0^37*A_1^49+A_0^36*A_1^50+A_0^35*A_1^51, (9,0) => 0, (8,1) => A_0^53*A_1^43+2*A_0^52*A_1^44+2*A_0^51*A_1^45+2*A_0^50*A_1^46+2*A_0^49*A_1^47+2*A_0^48*A_1^48+2*A_0^47*A_1^49+2*A_0^46*A_1^50+2*A_0^45*A_1^51+2*A_0^44*A_1^52+A_0^43*A_1^53, (9,1) => A_0^54*A_1^52+A_0^53*A_1^53+A_0^52*A_1^54, (0,0) => A_0^6+A_0^5*A_1+A_0^4*A_1^2+A_0^3*A_1^3+A_0^2*A_1^4+A_0*A_1^5+A_1^6, (0,1) => 0, (1,0) => A_0^15*A_1+2*A_0^14*A_1^2+3*A_0^13*A_1^3+4*A_0^12*A_1^4+5*A_0^11*A_1^5+6*A_0^10*A_1^6+6*A_0^9*A_1^7+6*A_0^8*A_1^8+6*A_0^7*A_1^9+6*A_0^6*A_1^10+5*A_0^5*A_1^11+4*A_0^4*A_1^12+3*A_0^3*A_1^13+2*A_0^2*A_1^14+A_0*A_1^15, (2,0) => A_0^23*A_1^3+2*A_0^22*A_1^4+4*A_0^21*A_1^5+6*A_0^20*A_1^6+9*A_0^19*A_1^7+11*A_0^18*A_1^8+14*A_0^17*A_1^9+16*A_0^16*A_1^10+19*A_0^15*A_1^11+20*A_0^14*A_1^12+21*A_0^13*A_1^13+20*A_0^12*A_1^14+19*A_0^11*A_1^15+16*A_0^10*A_1^16+14*A_0^9*A_1^17+11*A_0^8*A_1^18+9*A_0^7*A_1^19+6*A_0^6*A_1^20+4*A_0^5*A_1^21+2*A_0^4*A_1^22+A_0^3*A_1^23, (1,1) => 0, (2,1) => 0, (3,0) => A_0^30*A_1^6+2*A_0^29*A_1^7+4*A_0^28*A_1^8+7*A_0^27*A_1^9+10*A_0^26*A_1^10+14*A_0^25*A_1^11+19*A_0^24*A_1^12+24*A_0^23*A_1^13+29*A_0^22*A_1^14+34*A_0^21*A_1^15+37*A_0^20*A_1^16+39*A_0^19*A_1^17+40*A_0^18*A_1^18+39*A_0^17*A_1^19+37*A_0^16*A_1^20+34*A_0^15*A_1^21+29*A_0^14*A_1^22+24*A_0^13*A_1^23+19*A_0^12*A_1^24+14*A_0^11*A_1^25+10*A_0^10*A_1^26+7*A_0^9*A_1^27+4*A_0^8*A_1^28+2*A_0^7*A_1^29+A_0^6*A_1^30, (3,1) => 0, (4,0) => A_0^36*A_1^10+2*A_0^35*A_1^11+4*A_0^34*A_1^12+6*A_0^33*A_1^13+10*A_0^32*A_1^14+14*A_0^31*A_1^15+20*A_0^30*A_1^16+25*A_0^29*A_1^17+32*A_0^28*A_1^18+37*A_0^27*A_1^19+43*A_0^26*A_1^20+46*A_0^25*A_1^21+50*A_0^24*A_1^22+50*A_0^23*A_1^23+50*A_0^22*A_1^24+46*A_0^21*A_1^25+43*A_0^20*A_1^26+37*A_0^19*A_1^27+32*A_0^18*A_1^28+25*A_0^17*A_1^29+20*A_0^16*A_1^30+14*A_0^15*A_1^31+10*A_0^14*A_1^32+6*A_0^13*A_1^33+4*A_0^12*A_1^34+2*A_0^11*A_1^35+A_0^10*A_1^36, (4,1) => 0, (5,0) => A_0^41*A_1^15+2*A_0^40*A_1^16+3*A_0^39*A_1^17+5*A_0^38*A_1^18+8*A_0^37*A_1^19+12*A_0^36*A_1^20+16*A_0^35*A_1^21+20*A_0^34*A_1^22+25*A_0^33*A_1^23+30*A_0^32*A_1^24+34*A_0^31*A_1^25+37*A_0^30*A_1^26+39*A_0^29*A_1^27+40*A_0^28*A_1^28+39*A_0^27*A_1^29+37*A_0^26*A_1^30+34*A_0^25*A_1^31+30*A_0^24*A_1^32+25*A_0^23*A_1^33+20*A_0^22*A_1^34+16*A_0^21*A_1^35+12*A_0^20*A_1^36+8*A_0^19*A_1^37+5*A_0^18*A_1^38+3*A_0^17*A_1^39+2*A_0^16*A_1^40+A_0^15*A_1^41, (6,0) => A_0^45*A_1^21+A_0^44*A_1^22+2*A_0^43*A_1^23+3*A_0^42*A_1^24+5*A_0^41*A_1^25+6*A_0^40*A_1^26+9*A_0^39*A_1^27+10*A_0^38*A_1^28+13*A_0^37*A_1^29+14*A_0^36*A_1^30+16*A_0^35*A_1^31+16*A_0^34*A_1^32+18*A_0^33*A_1^33+16*A_0^32*A_1^34+16*A_0^31*A_1^35+14*A_0^30*A_1^36+13*A_0^29*A_1^37+10*A_0^28*A_1^38+9*A_0^27*A_1^39+6*A_0^26*A_1^40+5*A_0^25*A_1^41+3*A_0^24*A_1^42+2*A_0^23*A_1^43+A_0^22*A_1^44+A_0^21*A_1^45, (5,1) => 0},
--sb represents the betti numbers as sums of Schur functors
"sb"=>new HashTable from {(7,0) => {}, (6,1) => {}, (7,1) => {({51,35},1)}, (8,0) => {}, (8,1) => {({53,43},1)}, (9,0) => {}, (9,1) => {({54,52},1)}, (0,0) => {({6,0},1)}, (0,1) => {}, (1,0) => {({15,1},1)}, (2,0) => {({23,3},1)}, (1,1) => {}, (3,0) => {({30,6},1)}, (2,1) => {}, (4,0) => {({36,10},1)}, (3,1) => {}, (5,0) => {({41,15},1)}, (4,1) => {}, (5,1) => {}, (6,0) => {({45,21},1)}},
--dw encodes the dominant weights in each entry
"dw"=>new HashTable from {(7,0) => {}, (6,1) => {}, (7,1) => {{51,35}}, (8,0) => {}, (8,1) => {{53,43}}, (9,0) => {}, (9,1) => {{54,52}}, (0,0) => {{6,0}}, (0,1) => {}, (1,0) => {{15,1}}, (2,0) => {{23,3}}, (1,1) => {}, (3,0) => {{30,6}}, (2,1) => {}, (4,0) => {{36,10}}, (3,1) => {}, (5,0) => {{41,15}}, (4,1) => {}, (5,1) => {}, (6,0) => {{45,21}}},
--lw encodes the lex leading weight in each entry
"lw"=>new HashTable from {(7,0) => {}, (6,1) => {}, (7,1) => {51,35}, (8,0) => {}, (8,1) => {53,43}, (9,0) => {}, (9,1) => {54,52}, (0,0) => {6,0}, (0,1) => {}, (1,0) => {15,1}, (2,0) => {23,3}, (1,1) => {}, (3,0) => {30,6}, (2,1) => {}, (4,0) => {36,10}, (3,1) => {}, (5,0) => {41,15}, (4,1) => {}, (5,1) => {}, (6,0) => {45,21}},
--nr encodes the number of distinct representations in each entry
"nr"=>new HashTable from {(7,0) => 0, (6,1) => 0, (7,1) => 1, (8,0) => 0, (8,1) => 1, (9,0) => 0, (9,1) => 1, (0,0) => 1, (0,1) => 0, (1,0) => 1, (2,0) => 1, (1,1) => 0, (3,0) => 1, (2,1) => 0, (4,0) => 1, (3,1) => 0, (5,0) => 1, (4,1) => 0, (5,1) => 0, (6,0) => 1},
--nrm encodes the number of representations with multiplicity in each entry
"nrm"=>new HashTable from {(7,0) => 0, (6,1) => 0, (7,1) => 1, (8,0) => 0, (8,1) => 1, (9,0) => 0, (9,1) => 1, (0,0) => 1, (0,1) => 0, (1,0) => 1, (2,0) => 1, (1,1) => 0, (3,0) => 1, (2,1) => 0, (4,0) => 1, (3,1) => 0, (5,0) => 1, (4,1) => 0, (5,1) => 0, (6,0) => 1},
--er encodes the errors in the computed multigraded Hilbert series via our Schur method in each entry
"er"=>new HashTable from {(7,0) => 0, (6,1) => 0, (7,1) => 45, (8,0) => 0, (8,1) => 20, (9,0) => 0, (9,1) => 3, (0,0) => 7, (0,1) => 0, (1,0) => 60, (2,0) => 225, (1,1) => 0, (3,0) => 480, (2,1) => 0, (4,0) => 630, (3,1) => 0, (5,0) => 504, (4,1) => 0, (5,1) => 0, (6,0) => 210},
--bs encodes the Boij-Soederberg coefficients each entry
"bs"=>{3628800/1},
}
