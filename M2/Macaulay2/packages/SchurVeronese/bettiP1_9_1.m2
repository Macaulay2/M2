--This file computes Betti tables for P^1 for d = 9 and b = 1
A := degreesRing 2
new HashTable from {
--tb stands for Total Betti numbers
"tb"=>new HashTable from {(7,0) => 0, (6,1) => 180, (7,1) => 54, (8,0) => 0, (8,1) => 7, (0,0) => 2, (0,1) => 0, (1,0) => 9, (2,0) => 0, (1,1) => 0, (2,1) => 84, (3,0) => 0, (4,0) => 0, (3,1) => 252, (5,0) => 0, (4,1) => 378, (5,1) => 336, (6,0) => 0},
--mb stands for Multigraded Betti numbers
"mb"=>new HashTable from {(7,0) => 0, (6,1) => A_0^41*A_1^23+2*A_0^40*A_1^24+4*A_0^39*A_1^25+6*A_0^38*A_1^26+9*A_0^37*A_1^27+11*A_0^36*A_1^28+14*A_0^35*A_1^29+16*A_0^34*A_1^30+18*A_0^33*A_1^31+18*A_0^32*A_1^32+18*A_0^31*A_1^33+16*A_0^30*A_1^34+14*A_0^29*A_1^35+11*A_0^28*A_1^36+9*A_0^27*A_1^37+6*A_0^26*A_1^38+4*A_0^25*A_1^39+2*A_0^24*A_1^40+A_0^23*A_1^41, (8,0) => 0, (7,1) => A_0^43*A_1^30+2*A_0^42*A_1^31+3*A_0^41*A_1^32+4*A_0^40*A_1^33+5*A_0^39*A_1^34+6*A_0^38*A_1^35+6*A_0^37*A_1^36+6*A_0^36*A_1^37+6*A_0^35*A_1^38+5*A_0^34*A_1^39+4*A_0^33*A_1^40+3*A_0^32*A_1^41+2*A_0^31*A_1^42+A_0^30*A_1^43, (8,1) => A_0^44*A_1^38+A_0^43*A_1^39+A_0^42*A_1^40+A_0^41*A_1^41+A_0^40*A_1^42+A_0^39*A_1^43+A_0^38*A_1^44, (0,0) => A_0+A_1, (0,1) => 0, (1,0) => A_0^9*A_1+A_0^8*A_1^2+A_0^7*A_1^3+A_0^6*A_1^4+A_0^5*A_1^5+A_0^4*A_1^6+A_0^3*A_1^7+A_0^2*A_1^8+A_0*A_1^9, (2,0) => 0, (1,1) => 0, (2,1) => A_0^23*A_1^5+A_0^22*A_1^6+2*A_0^21*A_1^7+3*A_0^20*A_1^8+4*A_0^19*A_1^9+5*A_0^18*A_1^10+7*A_0^17*A_1^11+7*A_0^16*A_1^12+8*A_0^15*A_1^13+8*A_0^14*A_1^14+8*A_0^13*A_1^15+7*A_0^12*A_1^16+7*A_0^11*A_1^17+5*A_0^10*A_1^18+4*A_0^9*A_1^19+3*A_0^8*A_1^20+2*A_0^7*A_1^21+A_0^6*A_1^22+A_0^5*A_1^23, (3,0) => 0, (3,1) => A_0^29*A_1^8+2*A_0^28*A_1^9+3*A_0^27*A_1^10+5*A_0^26*A_1^11+8*A_0^25*A_1^12+11*A_0^24*A_1^13+14*A_0^23*A_1^14+17*A_0^22*A_1^15+20*A_0^21*A_1^16+22*A_0^20*A_1^17+23*A_0^19*A_1^18+23*A_0^18*A_1^19+22*A_0^17*A_1^20+20*A_0^16*A_1^21+17*A_0^15*A_1^22+14*A_0^14*A_1^23+11*A_0^13*A_1^24+8*A_0^12*A_1^25+5*A_0^11*A_1^26+3*A_0^10*A_1^27+2*A_0^9*A_1^28+A_0^8*A_1^29, (4,0) => 0, (4,1) => A_0^34*A_1^12+2*A_0^33*A_1^13+4*A_0^32*A_1^14+6*A_0^31*A_1^15+10*A_0^30*A_1^16+14*A_0^29*A_1^17+19*A_0^28*A_1^18+23*A_0^27*A_1^19+28*A_0^26*A_1^20+31*A_0^25*A_1^21+34*A_0^24*A_1^22+34*A_0^23*A_1^23+34*A_0^22*A_1^24+31*A_0^21*A_1^25+28*A_0^20*A_1^26+23*A_0^19*A_1^27+19*A_0^18*A_1^28+14*A_0^17*A_1^29+10*A_0^16*A_1^30+6*A_0^15*A_1^31+4*A_0^14*A_1^32+2*A_0^13*A_1^33+A_0^12*A_1^34, (5,0) => 0, (6,0) => 0, (5,1) => A_0^38*A_1^17+2*A_0^37*A_1^18+4*A_0^36*A_1^19+7*A_0^35*A_1^20+10*A_0^34*A_1^21+14*A_0^33*A_1^22+19*A_0^32*A_1^23+23*A_0^31*A_1^24+27*A_0^30*A_1^25+30*A_0^29*A_1^26+31*A_0^28*A_1^27+31*A_0^27*A_1^28+30*A_0^26*A_1^29+27*A_0^25*A_1^30+23*A_0^24*A_1^31+19*A_0^23*A_1^32+14*A_0^22*A_1^33+10*A_0^21*A_1^34+7*A_0^20*A_1^35+4*A_0^19*A_1^36+2*A_0^18*A_1^37+A_0^17*A_1^38},
--sb represents the betti numbers as sums of Schur functors
"sb"=>new HashTable from {(7,0) => {}, (6,1) => {({41,23},1)}, (7,1) => {({43,30},1)}, (8,0) => {}, (8,1) => {({44,38},1)}, (0,0) => {({1,0},1)}, (0,1) => {}, (1,0) => {({9,1},1)}, (2,0) => {}, (1,1) => {}, (2,1) => {({23,5},1)}, (3,0) => {}, (4,0) => {}, (3,1) => {({29,8},1)}, (5,0) => {}, (4,1) => {({34,12},1)}, (5,1) => {({38,17},1)}, (6,0) => {}},
--dw encodes the dominant weights in each entry
"dw"=>new HashTable from {(7,0) => {}, (6,1) => {{41,23}}, (7,1) => {{43,30}}, (8,0) => {}, (8,1) => {{44,38}}, (0,0) => {{1,0}}, (0,1) => {}, (1,0) => {{9,1}}, (2,0) => {}, (1,1) => {}, (2,1) => {{23,5}}, (3,0) => {}, (4,0) => {}, (3,1) => {{29,8}}, (5,0) => {}, (4,1) => {{34,12}}, (5,1) => {{38,17}}, (6,0) => {}},
--lw encodes the lex leading weight in each entry
"lw"=>new HashTable from {(7,0) => {}, (6,1) => {41,23}, (7,1) => {43,30}, (8,0) => {}, (8,1) => {44,38}, (0,0) => {1,0}, (0,1) => {}, (1,0) => {9,1}, (2,0) => {}, (1,1) => {}, (2,1) => {23,5}, (3,0) => {}, (4,0) => {}, (3,1) => {29,8}, (5,0) => {}, (4,1) => {34,12}, (5,1) => {38,17}, (6,0) => {}},
--nr encodes the number of distinct representations in each entry
"nr"=>new HashTable from {(7,0) => 0, (6,1) => 1, (7,1) => 1, (8,0) => 0, (8,1) => 1, (0,0) => 1, (0,1) => 0, (1,0) => 1, (2,0) => 0, (1,1) => 0, (2,1) => 1, (3,0) => 0, (4,0) => 0, (3,1) => 1, (5,0) => 0, (4,1) => 1, (5,1) => 1, (6,0) => 0},
--nrm encodes the number of representations with multiplicity in each entry
"nrm"=>new HashTable from {(7,0) => 0, (6,1) => 1, (7,1) => 1, (8,0) => 0, (8,1) => 1, (0,0) => 1, (0,1) => 0, (1,0) => 1, (2,0) => 0, (1,1) => 0, (2,1) => 1, (3,0) => 0, (4,0) => 0, (3,1) => 1, (5,0) => 0, (4,1) => 1, (5,1) => 1, (6,0) => 0},
--er encodes the errors in the computed multigraded Hilbert series via our Schur method in each entry
"er"=>new HashTable from {(7,0) => 0, (6,1) => 180, (7,1) => 54, (8,0) => 0, (8,1) => 7, (0,0) => 2, (0,1) => 0, (1,0) => 9, (2,0) => 0, (1,1) => 0, (2,1) => 84, (3,0) => 0, (4,0) => 0, (3,1) => 252, (5,0) => 0, (4,1) => 378, (5,1) => 336, (6,0) => 0},
--bs encodes the Boij-Soederberg coefficients each entry
"bs"=>{362880/1},
}
