--This file computes Betti tables for P^1 for d = 8 and b = 0
A := degreesRing 2
new HashTable from {
--tb stands for Total Betti numbers
"tb"=>new HashTable from {(7,0) => 0, (6,1) => 48, (7,1) => 7, (0,0) => 1, (1,0) => 0, (0,1) => 0, (2,0) => 0, (1,1) => 28, (2,1) => 112, (3,0) => 0, (3,1) => 210, (4,0) => 0, (5,0) => 0, (4,1) => 224, (5,1) => 140, (6,0) => 0},
--mb stands for Multigraded Betti numbers
"mb"=>new HashTable from {(7,0) => 0, (6,1) => A_0^34*A_1^22+2*A_0^33*A_1^23+3*A_0^32*A_1^24+4*A_0^31*A_1^25+5*A_0^30*A_1^26+6*A_0^29*A_1^27+6*A_0^28*A_1^28+6*A_0^27*A_1^29+5*A_0^26*A_1^30+4*A_0^25*A_1^31+3*A_0^24*A_1^32+2*A_0^23*A_1^33+A_0^22*A_1^34, (7,1) => A_0^35*A_1^29+A_0^34*A_1^30+A_0^33*A_1^31+A_0^32*A_1^32+A_0^31*A_1^33+A_0^30*A_1^34+A_0^29*A_1^35, (0,0) => 1, (0,1) => 0, (1,0) => 0, (2,0) => 0, (1,1) => A_0^14*A_1^2+A_0^13*A_1^3+2*A_0^12*A_1^4+2*A_0^11*A_1^5+3*A_0^10*A_1^6+3*A_0^9*A_1^7+4*A_0^8*A_1^8+3*A_0^7*A_1^9+3*A_0^6*A_1^10+2*A_0^5*A_1^11+2*A_0^4*A_1^12+A_0^3*A_1^13+A_0^2*A_1^14, (2,1) => A_0^20*A_1^4+2*A_0^19*A_1^5+3*A_0^18*A_1^6+5*A_0^17*A_1^7+7*A_0^16*A_1^8+9*A_0^15*A_1^9+11*A_0^14*A_1^10+12*A_0^13*A_1^11+12*A_0^12*A_1^12+12*A_0^11*A_1^13+11*A_0^10*A_1^14+9*A_0^9*A_1^15+7*A_0^8*A_1^16+5*A_0^7*A_1^17+3*A_0^6*A_1^18+2*A_0^5*A_1^19+A_0^4*A_1^20, (3,0) => 0, (3,1) => A_0^25*A_1^7+2*A_0^24*A_1^8+4*A_0^23*A_1^9+6*A_0^22*A_1^10+10*A_0^21*A_1^11+13*A_0^20*A_1^12+17*A_0^19*A_1^13+19*A_0^18*A_1^14+22*A_0^17*A_1^15+22*A_0^16*A_1^16+22*A_0^15*A_1^17+19*A_0^14*A_1^18+17*A_0^13*A_1^19+13*A_0^12*A_1^20+10*A_0^11*A_1^21+6*A_0^10*A_1^22+4*A_0^9*A_1^23+2*A_0^8*A_1^24+A_0^7*A_1^25, (4,0) => 0, (4,1) => A_0^29*A_1^11+2*A_0^28*A_1^12+4*A_0^27*A_1^13+7*A_0^26*A_1^14+10*A_0^25*A_1^15+14*A_0^24*A_1^16+18*A_0^23*A_1^17+21*A_0^22*A_1^18+23*A_0^21*A_1^19+24*A_0^20*A_1^20+23*A_0^19*A_1^21+21*A_0^18*A_1^22+18*A_0^17*A_1^23+14*A_0^16*A_1^24+10*A_0^15*A_1^25+7*A_0^14*A_1^26+4*A_0^13*A_1^27+2*A_0^12*A_1^28+A_0^11*A_1^29, (5,0) => 0, (6,0) => 0, (5,1) => A_0^32*A_1^16+2*A_0^31*A_1^17+4*A_0^30*A_1^18+6*A_0^29*A_1^19+9*A_0^28*A_1^20+11*A_0^27*A_1^21+14*A_0^26*A_1^22+15*A_0^25*A_1^23+16*A_0^24*A_1^24+15*A_0^23*A_1^25+14*A_0^22*A_1^26+11*A_0^21*A_1^27+9*A_0^20*A_1^28+6*A_0^19*A_1^29+4*A_0^18*A_1^30+2*A_0^17*A_1^31+A_0^16*A_1^32},
--sb represents the betti numbers as sums of Schur functors
"sb"=>new HashTable from {(7,0) => {}, (6,1) => {({34,22},1)}, (7,1) => {({35,29},1)}, (0,0) => {({0,0},1)}, (1,0) => {}, (0,1) => {}, (2,0) => {}, (1,1) => {({14,2},1)}, (2,1) => {({20,4},1)}, (3,0) => {}, (3,1) => {({25,7},1)}, (4,0) => {}, (5,0) => {}, (4,1) => {({29,11},1)}, (5,1) => {({32,16},1)}, (6,0) => {}},
--dw encodes the dominant weights in each entry
"dw"=>new HashTable from {(7,0) => {}, (6,1) => {{34,22}}, (7,1) => {{35,29}}, (0,0) => {{0,0}}, (1,0) => {}, (0,1) => {}, (2,0) => {}, (1,1) => {{14,2}}, (2,1) => {{20,4}}, (3,0) => {}, (3,1) => {{25,7}}, (4,0) => {}, (5,0) => {}, (4,1) => {{29,11}}, (5,1) => {{32,16}}, (6,0) => {}},
--lw encodes the lex leading weight in each entry
"lw"=>new HashTable from {(7,0) => {}, (6,1) => {34,22}, (7,1) => {35,29}, (0,0) => {0,0}, (1,0) => {}, (0,1) => {}, (2,0) => {}, (1,1) => {14,2}, (2,1) => {20,4}, (3,0) => {}, (3,1) => {25,7}, (4,0) => {}, (5,0) => {}, (4,1) => {29,11}, (5,1) => {32,16}, (6,0) => {}},
--nr encodes the number of distinct representations in each entry
"nr"=>new HashTable from {(7,0) => 0, (6,1) => 1, (7,1) => 1, (0,0) => 1, (1,0) => 0, (0,1) => 0, (2,0) => 0, (1,1) => 1, (2,1) => 1, (3,0) => 0, (3,1) => 1, (4,0) => 0, (5,0) => 0, (4,1) => 1, (5,1) => 1, (6,0) => 0},
--nrm encodes the number of representations with multiplicity in each entry
"nrm"=>new HashTable from {(7,0) => 0, (6,1) => 1, (7,1) => 1, (0,0) => 1, (1,0) => 0, (0,1) => 0, (2,0) => 0, (1,1) => 1, (2,1) => 1, (3,0) => 0, (3,1) => 1, (4,0) => 0, (5,0) => 0, (4,1) => 1, (5,1) => 1, (6,0) => 0},
--er encodes the errors in the computed multigraded Hilbert series via our Schur method in each entry
"er"=>new HashTable from {(7,0) => 0, (6,1) => 48, (7,1) => 7, (0,0) => 1, (1,0) => 0, (0,1) => 0, (2,0) => 0, (1,1) => 28, (2,1) => 112, (3,0) => 0, (3,1) => 210, (4,0) => 0, (5,0) => 0, (4,1) => 224, (5,1) => 140, (6,0) => 0},
--bs encodes the Boij-Soederberg coefficients each entry
"bs"=>{40320/1},
}
