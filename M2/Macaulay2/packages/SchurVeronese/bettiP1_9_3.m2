--This file computes Betti tables for P^1 for d = 9 and b = 3
A := degreesRing 2
new HashTable from {
--tb stands for Total Betti numbers
"tb"=>new HashTable from {(7,0) => 0, (6,1) => 108, (7,1) => 36, (8,0) => 0, (8,1) => 5, (0,0) => 4, (0,1) => 0, (1,0) => 27, (2,0) => 72, (1,1) => 0, (2,1) => 0, (3,0) => 84, (4,0) => 0, (3,1) => 0, (5,0) => 0, (4,1) => 126, (5,1) => 168, (6,0) => 0},
--mb stands for Multigraded Betti numbers
"mb"=>new HashTable from {(7,0) => 0, (6,1) => A_0^41*A_1^25+2*A_0^40*A_1^26+4*A_0^39*A_1^27+5*A_0^38*A_1^28+7*A_0^37*A_1^29+8*A_0^36*A_1^30+10*A_0^35*A_1^31+11*A_0^34*A_1^32+12*A_0^33*A_1^33+11*A_0^32*A_1^34+10*A_0^31*A_1^35+8*A_0^30*A_1^36+7*A_0^29*A_1^37+5*A_0^28*A_1^38+4*A_0^27*A_1^39+2*A_0^26*A_1^40+A_0^25*A_1^41, (8,0) => 0, (7,1) => A_0^43*A_1^32+2*A_0^42*A_1^33+3*A_0^41*A_1^34+4*A_0^40*A_1^35+4*A_0^39*A_1^36+4*A_0^38*A_1^37+4*A_0^37*A_1^38+4*A_0^36*A_1^39+4*A_0^35*A_1^40+3*A_0^34*A_1^41+2*A_0^33*A_1^42+A_0^32*A_1^43, (8,1) => A_0^44*A_1^40+A_0^43*A_1^41+A_0^42*A_1^42+A_0^41*A_1^43+A_0^40*A_1^44, (0,0) => A_0^3+A_0^2*A_1+A_0*A_1^2+A_1^3, (0,1) => 0, (1,0) => A_0^11*A_1+2*A_0^10*A_1^2+3*A_0^9*A_1^3+3*A_0^8*A_1^4+3*A_0^7*A_1^5+3*A_0^6*A_1^6+3*A_0^5*A_1^7+3*A_0^4*A_1^8+3*A_0^3*A_1^9+2*A_0^2*A_1^10+A_0*A_1^11, (2,0) => A_0^18*A_1^3+2*A_0^17*A_1^4+3*A_0^16*A_1^5+4*A_0^15*A_1^6+5*A_0^14*A_1^7+6*A_0^13*A_1^8+7*A_0^12*A_1^9+8*A_0^11*A_1^10+8*A_0^10*A_1^11+7*A_0^9*A_1^12+6*A_0^8*A_1^13+5*A_0^7*A_1^14+4*A_0^6*A_1^15+3*A_0^5*A_1^16+2*A_0^4*A_1^17+A_0^3*A_1^18, (1,1) => 0, (2,1) => 0, (3,0) => A_0^24*A_1^6+A_0^23*A_1^7+2*A_0^22*A_1^8+3*A_0^21*A_1^9+4*A_0^20*A_1^10+5*A_0^19*A_1^11+7*A_0^18*A_1^12+7*A_0^17*A_1^13+8*A_0^16*A_1^14+8*A_0^15*A_1^15+8*A_0^14*A_1^16+7*A_0^13*A_1^17+7*A_0^12*A_1^18+5*A_0^11*A_1^19+4*A_0^10*A_1^20+3*A_0^9*A_1^21+2*A_0^8*A_1^22+A_0^7*A_1^23+A_0^6*A_1^24, (3,1) => 0, (4,0) => 0, (4,1) => A_0^34*A_1^14+A_0^33*A_1^15+2*A_0^32*A_1^16+3*A_0^31*A_1^17+5*A_0^30*A_1^18+6*A_0^29*A_1^19+8*A_0^28*A_1^20+9*A_0^27*A_1^21+11*A_0^26*A_1^22+11*A_0^25*A_1^23+12*A_0^24*A_1^24+11*A_0^23*A_1^25+11*A_0^22*A_1^26+9*A_0^21*A_1^27+8*A_0^20*A_1^28+6*A_0^19*A_1^29+5*A_0^18*A_1^30+3*A_0^17*A_1^31+2*A_0^16*A_1^32+A_0^15*A_1^33+A_0^14*A_1^34, (5,0) => 0, (6,0) => 0, (5,1) => A_0^38*A_1^19+2*A_0^37*A_1^20+3*A_0^36*A_1^21+5*A_0^35*A_1^22+7*A_0^34*A_1^23+9*A_0^33*A_1^24+12*A_0^32*A_1^25+14*A_0^31*A_1^26+15*A_0^30*A_1^27+16*A_0^29*A_1^28+16*A_0^28*A_1^29+15*A_0^27*A_1^30+14*A_0^26*A_1^31+12*A_0^25*A_1^32+9*A_0^24*A_1^33+7*A_0^23*A_1^34+5*A_0^22*A_1^35+3*A_0^21*A_1^36+2*A_0^20*A_1^37+A_0^19*A_1^38},
--sb represents the betti numbers as sums of Schur functors
"sb"=>new HashTable from {(7,0) => {}, (6,1) => {({41,25},1)}, (7,1) => {({43,32},1)}, (8,0) => {}, (8,1) => {({44,40},1)}, (0,0) => {({3,0},1)}, (0,1) => {}, (1,0) => {({11,1},1)}, (2,0) => {({18,3},1)}, (1,1) => {}, (2,1) => {}, (3,0) => {({24,6},1)}, (4,0) => {}, (3,1) => {}, (5,0) => {}, (4,1) => {({34,14},1)}, (5,1) => {({38,19},1)}, (6,0) => {}},
--dw encodes the dominant weights in each entry
"dw"=>new HashTable from {(7,0) => {}, (6,1) => {{41,25}}, (7,1) => {{43,32}}, (8,0) => {}, (8,1) => {{44,40}}, (0,0) => {{3,0}}, (0,1) => {}, (1,0) => {{11,1}}, (2,0) => {{18,3}}, (1,1) => {}, (2,1) => {}, (3,0) => {{24,6}}, (4,0) => {}, (3,1) => {}, (5,0) => {}, (4,1) => {{34,14}}, (5,1) => {{38,19}}, (6,0) => {}},
--lw encodes the lex leading weight in each entry
"lw"=>new HashTable from {(7,0) => {}, (6,1) => {41,25}, (7,1) => {43,32}, (8,0) => {}, (8,1) => {44,40}, (0,0) => {3,0}, (0,1) => {}, (1,0) => {11,1}, (2,0) => {18,3}, (1,1) => {}, (2,1) => {}, (3,0) => {24,6}, (4,0) => {}, (3,1) => {}, (5,0) => {}, (4,1) => {34,14}, (5,1) => {38,19}, (6,0) => {}},
--nr encodes the number of distinct representations in each entry
"nr"=>new HashTable from {(7,0) => 0, (6,1) => 1, (7,1) => 1, (8,0) => 0, (8,1) => 1, (0,0) => 1, (0,1) => 0, (1,0) => 1, (2,0) => 1, (1,1) => 0, (2,1) => 0, (3,0) => 1, (4,0) => 0, (3,1) => 0, (5,0) => 0, (4,1) => 1, (5,1) => 1, (6,0) => 0},
--nrm encodes the number of representations with multiplicity in each entry
"nrm"=>new HashTable from {(7,0) => 0, (6,1) => 1, (7,1) => 1, (8,0) => 0, (8,1) => 1, (0,0) => 1, (0,1) => 0, (1,0) => 1, (2,0) => 1, (1,1) => 0, (2,1) => 0, (3,0) => 1, (4,0) => 0, (3,1) => 0, (5,0) => 0, (4,1) => 1, (5,1) => 1, (6,0) => 0},
--er encodes the errors in the computed multigraded Hilbert series via our Schur method in each entry
"er"=>new HashTable from {(7,0) => 0, (6,1) => 108, (7,1) => 36, (8,0) => 0, (8,1) => 5, (0,0) => 4, (0,1) => 0, (1,0) => 27, (2,0) => 72, (1,1) => 0, (2,1) => 0, (3,0) => 84, (4,0) => 0, (3,1) => 0, (5,0) => 0, (4,1) => 126, (5,1) => 168, (6,0) => 0},
--bs encodes the Boij-Soederberg coefficients each entry
"bs"=>{362880/1},
}
