--This file computes Betti tables for P^1 for d = 9 and b = 0
A := degreesRing 2
new HashTable from {
--tb stands for Total Betti numbers
"tb"=>new HashTable from {(7,0) => 0, (6,1) => 216, (7,1) => 63, (8,0) => 0, (8,1) => 8, (0,0) => 1, (0,1) => 0, (1,0) => 0, (2,0) => 0, (1,1) => 36, (2,1) => 168, (3,0) => 0, (4,0) => 0, (3,1) => 378, (5,0) => 0, (4,1) => 504, (5,1) => 420, (6,0) => 0},
--mb stands for Multigraded Betti numbers
"mb"=>new HashTable from {(7,0) => 0, (6,1) => A_0^41*A_1^22+2*A_0^40*A_1^23+4*A_0^39*A_1^24+6*A_0^38*A_1^25+9*A_0^37*A_1^26+12*A_0^36*A_1^27+15*A_0^35*A_1^28+18*A_0^34*A_1^29+20*A_0^33*A_1^30+21*A_0^32*A_1^31+21*A_0^31*A_1^32+20*A_0^30*A_1^33+18*A_0^29*A_1^34+15*A_0^28*A_1^35+12*A_0^27*A_1^36+9*A_0^26*A_1^37+6*A_0^25*A_1^38+4*A_0^24*A_1^39+2*A_0^23*A_1^40+A_0^22*A_1^41, (8,0) => 0, (7,1) => A_0^43*A_1^29+2*A_0^42*A_1^30+3*A_0^41*A_1^31+4*A_0^40*A_1^32+5*A_0^39*A_1^33+6*A_0^38*A_1^34+7*A_0^37*A_1^35+7*A_0^36*A_1^36+7*A_0^35*A_1^37+6*A_0^34*A_1^38+5*A_0^33*A_1^39+4*A_0^32*A_1^40+3*A_0^31*A_1^41+2*A_0^30*A_1^42+A_0^29*A_1^43, (8,1) => A_0^44*A_1^37+A_0^43*A_1^38+A_0^42*A_1^39+A_0^41*A_1^40+A_0^40*A_1^41+A_0^39*A_1^42+A_0^38*A_1^43+A_0^37*A_1^44, (0,0) => 1, (0,1) => 0, (1,0) => 0, (2,0) => 0, (1,1) => A_0^16*A_1^2+A_0^15*A_1^3+2*A_0^14*A_1^4+2*A_0^13*A_1^5+3*A_0^12*A_1^6+3*A_0^11*A_1^7+4*A_0^10*A_1^8+4*A_0^9*A_1^9+4*A_0^8*A_1^10+3*A_0^7*A_1^11+3*A_0^6*A_1^12+2*A_0^5*A_1^13+2*A_0^4*A_1^14+A_0^3*A_1^15+A_0^2*A_1^16, (2,1) => A_0^23*A_1^4+2*A_0^22*A_1^5+3*A_0^21*A_1^6+5*A_0^20*A_1^7+7*A_0^19*A_1^8+9*A_0^18*A_1^9+12*A_0^17*A_1^10+14*A_0^16*A_1^11+15*A_0^15*A_1^12+16*A_0^14*A_1^13+16*A_0^13*A_1^14+15*A_0^12*A_1^15+14*A_0^11*A_1^16+12*A_0^10*A_1^17+9*A_0^9*A_1^18+7*A_0^8*A_1^19+5*A_0^7*A_1^20+3*A_0^6*A_1^21+2*A_0^5*A_1^22+A_0^4*A_1^23, (3,0) => 0, (3,1) => A_0^29*A_1^7+2*A_0^28*A_1^8+4*A_0^27*A_1^9+6*A_0^26*A_1^10+10*A_0^25*A_1^11+14*A_0^24*A_1^12+19*A_0^23*A_1^13+23*A_0^22*A_1^14+28*A_0^21*A_1^15+31*A_0^20*A_1^16+34*A_0^19*A_1^17+34*A_0^18*A_1^18+34*A_0^17*A_1^19+31*A_0^16*A_1^20+28*A_0^15*A_1^21+23*A_0^14*A_1^22+19*A_0^13*A_1^23+14*A_0^12*A_1^24+10*A_0^11*A_1^25+6*A_0^10*A_1^26+4*A_0^9*A_1^27+2*A_0^8*A_1^28+A_0^7*A_1^29, (4,0) => 0, (4,1) => A_0^34*A_1^11+2*A_0^33*A_1^12+4*A_0^32*A_1^13+7*A_0^31*A_1^14+11*A_0^30*A_1^15+16*A_0^29*A_1^16+22*A_0^28*A_1^17+28*A_0^27*A_1^18+34*A_0^26*A_1^19+39*A_0^25*A_1^20+43*A_0^24*A_1^21+45*A_0^23*A_1^22+45*A_0^22*A_1^23+43*A_0^21*A_1^24+39*A_0^20*A_1^25+34*A_0^19*A_1^26+28*A_0^18*A_1^27+22*A_0^17*A_1^28+16*A_0^16*A_1^29+11*A_0^15*A_1^30+7*A_0^14*A_1^31+4*A_0^13*A_1^32+2*A_0^12*A_1^33+A_0^11*A_1^34, (5,0) => 0, (6,0) => 0, (5,1) => A_0^38*A_1^16+2*A_0^37*A_1^17+4*A_0^36*A_1^18+7*A_0^35*A_1^19+11*A_0^34*A_1^20+15*A_0^33*A_1^21+21*A_0^32*A_1^22+26*A_0^31*A_1^23+31*A_0^30*A_1^24+35*A_0^29*A_1^25+38*A_0^28*A_1^26+38*A_0^27*A_1^27+38*A_0^26*A_1^28+35*A_0^25*A_1^29+31*A_0^24*A_1^30+26*A_0^23*A_1^31+21*A_0^22*A_1^32+15*A_0^21*A_1^33+11*A_0^20*A_1^34+7*A_0^19*A_1^35+4*A_0^18*A_1^36+2*A_0^17*A_1^37+A_0^16*A_1^38},
--sb represents the betti numbers as sums of Schur functors
"sb"=>new HashTable from {(7,0) => {}, (6,1) => {({41,22},1)}, (7,1) => {({43,29},1)}, (8,0) => {}, (8,1) => {({44,37},1)}, (0,0) => {({0,0},1)}, (0,1) => {}, (1,0) => {}, (2,0) => {}, (1,1) => {({16,2},1)}, (2,1) => {({23,4},1)}, (3,0) => {}, (4,0) => {}, (3,1) => {({29,7},1)}, (5,0) => {}, (4,1) => {({34,11},1)}, (5,1) => {({38,16},1)}, (6,0) => {}},
--dw encodes the dominant weights in each entry
"dw"=>new HashTable from {(7,0) => {}, (6,1) => {{41,22}}, (7,1) => {{43,29}}, (8,0) => {}, (8,1) => {{44,37}}, (0,0) => {{0,0}}, (0,1) => {}, (1,0) => {}, (2,0) => {}, (1,1) => {{16,2}}, (2,1) => {{23,4}}, (3,0) => {}, (4,0) => {}, (3,1) => {{29,7}}, (5,0) => {}, (4,1) => {{34,11}}, (5,1) => {{38,16}}, (6,0) => {}},
--lw encodes the lex leading weight in each entry
"lw"=>new HashTable from {(7,0) => {}, (6,1) => {41,22}, (7,1) => {43,29}, (8,0) => {}, (8,1) => {44,37}, (0,0) => {0,0}, (0,1) => {}, (1,0) => {}, (2,0) => {}, (1,1) => {16,2}, (2,1) => {23,4}, (3,0) => {}, (4,0) => {}, (3,1) => {29,7}, (5,0) => {}, (4,1) => {34,11}, (5,1) => {38,16}, (6,0) => {}},
--nr encodes the number of distinct representations in each entry
"nr"=>new HashTable from {(7,0) => 0, (6,1) => 1, (7,1) => 1, (8,0) => 0, (8,1) => 1, (0,0) => 1, (0,1) => 0, (1,0) => 0, (2,0) => 0, (1,1) => 1, (2,1) => 1, (3,0) => 0, (4,0) => 0, (3,1) => 1, (5,0) => 0, (4,1) => 1, (5,1) => 1, (6,0) => 0},
--nrm encodes the number of representations with multiplicity in each entry
"nrm"=>new HashTable from {(7,0) => 0, (6,1) => 1, (7,1) => 1, (8,0) => 0, (8,1) => 1, (0,0) => 1, (0,1) => 0, (1,0) => 0, (2,0) => 0, (1,1) => 1, (2,1) => 1, (3,0) => 0, (4,0) => 0, (3,1) => 1, (5,0) => 0, (4,1) => 1, (5,1) => 1, (6,0) => 0},
--er encodes the errors in the computed multigraded Hilbert series via our Schur method in each entry
"er"=>new HashTable from {(7,0) => 0, (6,1) => 216, (7,1) => 63, (8,0) => 0, (8,1) => 8, (0,0) => 1, (0,1) => 0, (1,0) => 0, (2,0) => 0, (1,1) => 36, (2,1) => 168, (3,0) => 0, (4,0) => 0, (3,1) => 378, (5,0) => 0, (4,1) => 504, (5,1) => 420, (6,0) => 0},
--bs encodes the Boij-Soederberg coefficients each entry
"bs"=>{362880/1},
}
