--This file computes Betti tables for P^1 for d = 10 and b = 7
A := degreesRing 2
new HashTable from {
--tb stands for Total Betti numbers
"tb"=>new HashTable from {(7,0) => 120, (6,1) => 0, (7,1) => 0, (8,0) => 0, (8,1) => 10, (9,0) => 0, (9,1) => 2, (0,0) => 8, (0,1) => 0, (1,0) => 70, (2,0) => 270, (1,1) => 0, (3,0) => 600, (2,1) => 0, (4,0) => 840, (3,1) => 0, (5,0) => 756, (4,1) => 0, (5,1) => 0, (6,0) => 420},
--mb stands for Multigraded Betti numbers
"mb"=>new HashTable from {(7,0) => A_0^49*A_1^28+A_0^48*A_1^29+2*A_0^47*A_1^30+3*A_0^46*A_1^31+4*A_0^45*A_1^32+5*A_0^44*A_1^33+7*A_0^43*A_1^34+8*A_0^42*A_1^35+9*A_0^41*A_1^36+10*A_0^40*A_1^37+10*A_0^39*A_1^38+10*A_0^38*A_1^39+10*A_0^37*A_1^40+9*A_0^36*A_1^41+8*A_0^35*A_1^42+7*A_0^34*A_1^43+5*A_0^33*A_1^44+4*A_0^32*A_1^45+3*A_0^31*A_1^46+2*A_0^30*A_1^47+A_0^29*A_1^48+A_0^28*A_1^49, (6,1) => 0, (8,0) => 0, (7,1) => 0, (9,0) => 0, (8,1) => A_0^53*A_1^44+A_0^52*A_1^45+A_0^51*A_1^46+A_0^50*A_1^47+A_0^49*A_1^48+A_0^48*A_1^49+A_0^47*A_1^50+A_0^46*A_1^51+A_0^45*A_1^52+A_0^44*A_1^53, (9,1) => A_0^54*A_1^53+A_0^53*A_1^54, (0,0) => A_0^7+A_0^6*A_1+A_0^5*A_1^2+A_0^4*A_1^3+A_0^3*A_1^4+A_0^2*A_1^5+A_0*A_1^6+A_1^7, (0,1) => 0, (1,0) => A_0^16*A_1+2*A_0^15*A_1^2+3*A_0^14*A_1^3+4*A_0^13*A_1^4+5*A_0^12*A_1^5+6*A_0^11*A_1^6+7*A_0^10*A_1^7+7*A_0^9*A_1^8+7*A_0^8*A_1^9+7*A_0^7*A_1^10+6*A_0^6*A_1^11+5*A_0^5*A_1^12+4*A_0^4*A_1^13+3*A_0^3*A_1^14+2*A_0^2*A_1^15+A_0*A_1^16, (2,0) => A_0^24*A_1^3+2*A_0^23*A_1^4+4*A_0^22*A_1^5+6*A_0^21*A_1^6+9*A_0^20*A_1^7+12*A_0^19*A_1^8+15*A_0^18*A_1^9+18*A_0^17*A_1^10+21*A_0^16*A_1^11+23*A_0^15*A_1^12+24*A_0^14*A_1^13+24*A_0^13*A_1^14+23*A_0^12*A_1^15+21*A_0^11*A_1^16+18*A_0^10*A_1^17+15*A_0^9*A_1^18+12*A_0^8*A_1^19+9*A_0^7*A_1^20+6*A_0^6*A_1^21+4*A_0^5*A_1^22+2*A_0^4*A_1^23+A_0^3*A_1^24, (1,1) => 0, (2,1) => 0, (3,0) => A_0^31*A_1^6+2*A_0^30*A_1^7+4*A_0^29*A_1^8+7*A_0^28*A_1^9+11*A_0^27*A_1^10+15*A_0^26*A_1^11+21*A_0^25*A_1^12+27*A_0^24*A_1^13+33*A_0^23*A_1^14+39*A_0^22*A_1^15+44*A_0^21*A_1^16+47*A_0^20*A_1^17+49*A_0^19*A_1^18+49*A_0^18*A_1^19+47*A_0^17*A_1^20+44*A_0^16*A_1^21+39*A_0^15*A_1^22+33*A_0^14*A_1^23+27*A_0^13*A_1^24+21*A_0^12*A_1^25+15*A_0^11*A_1^26+11*A_0^10*A_1^27+7*A_0^9*A_1^28+4*A_0^8*A_1^29+2*A_0^7*A_1^30+A_0^6*A_1^31, (3,1) => 0, (4,0) => A_0^37*A_1^10+2*A_0^36*A_1^11+4*A_0^35*A_1^12+7*A_0^34*A_1^13+11*A_0^33*A_1^14+16*A_0^32*A_1^15+23*A_0^31*A_1^16+30*A_0^30*A_1^17+38*A_0^29*A_1^18+46*A_0^28*A_1^19+53*A_0^27*A_1^20+59*A_0^26*A_1^21+64*A_0^25*A_1^22+66*A_0^24*A_1^23+66*A_0^23*A_1^24+64*A_0^22*A_1^25+59*A_0^21*A_1^26+53*A_0^20*A_1^27+46*A_0^19*A_1^28+38*A_0^18*A_1^29+30*A_0^17*A_1^30+23*A_0^16*A_1^31+16*A_0^15*A_1^32+11*A_0^14*A_1^33+7*A_0^13*A_1^34+4*A_0^12*A_1^35+2*A_0^11*A_1^36+A_0^10*A_1^37, (4,1) => 0, (5,0) => A_0^42*A_1^15+2*A_0^41*A_1^16+4*A_0^40*A_1^17+6*A_0^39*A_1^18+10*A_0^38*A_1^19+15*A_0^37*A_1^20+21*A_0^36*A_1^21+27*A_0^35*A_1^22+34*A_0^34*A_1^23+41*A_0^33*A_1^24+48*A_0^32*A_1^25+53*A_0^31*A_1^26+57*A_0^30*A_1^27+59*A_0^29*A_1^28+59*A_0^28*A_1^29+57*A_0^27*A_1^30+53*A_0^26*A_1^31+48*A_0^25*A_1^32+41*A_0^24*A_1^33+34*A_0^23*A_1^34+27*A_0^22*A_1^35+21*A_0^21*A_1^36+15*A_0^20*A_1^37+10*A_0^19*A_1^38+6*A_0^18*A_1^39+4*A_0^17*A_1^40+2*A_0^16*A_1^41+A_0^15*A_1^42, (6,0) => A_0^46*A_1^21+2*A_0^45*A_1^22+3*A_0^44*A_1^23+5*A_0^43*A_1^24+8*A_0^42*A_1^25+11*A_0^41*A_1^26+15*A_0^40*A_1^27+19*A_0^39*A_1^28+23*A_0^38*A_1^29+27*A_0^37*A_1^30+30*A_0^36*A_1^31+32*A_0^35*A_1^32+34*A_0^34*A_1^33+34*A_0^33*A_1^34+32*A_0^32*A_1^35+30*A_0^31*A_1^36+27*A_0^30*A_1^37+23*A_0^29*A_1^38+19*A_0^28*A_1^39+15*A_0^27*A_1^40+11*A_0^26*A_1^41+8*A_0^25*A_1^42+5*A_0^24*A_1^43+3*A_0^23*A_1^44+2*A_0^22*A_1^45+A_0^21*A_1^46, (5,1) => 0},
--sb represents the betti numbers as sums of Schur functors
"sb"=>new HashTable from {(7,0) => {({49,28},1)}, (6,1) => {}, (7,1) => {}, (8,0) => {}, (8,1) => {({53,44},1)}, (9,0) => {}, (9,1) => {({54,53},1)}, (0,0) => {({7,0},1)}, (0,1) => {}, (1,0) => {({16,1},1)}, (2,0) => {({24,3},1)}, (1,1) => {}, (3,0) => {({31,6},1)}, (2,1) => {}, (4,0) => {({37,10},1)}, (3,1) => {}, (5,0) => {({42,15},1)}, (4,1) => {}, (5,1) => {}, (6,0) => {({46,21},1)}},
--dw encodes the dominant weights in each entry
"dw"=>new HashTable from {(7,0) => {{49,28}}, (6,1) => {}, (7,1) => {}, (8,0) => {}, (8,1) => {{53,44}}, (9,0) => {}, (9,1) => {{54,53}}, (0,0) => {{7,0}}, (0,1) => {}, (1,0) => {{16,1}}, (2,0) => {{24,3}}, (1,1) => {}, (3,0) => {{31,6}}, (2,1) => {}, (4,0) => {{37,10}}, (3,1) => {}, (5,0) => {{42,15}}, (4,1) => {}, (5,1) => {}, (6,0) => {{46,21}}},
--lw encodes the lex leading weight in each entry
"lw"=>new HashTable from {(7,0) => {49,28}, (6,1) => {}, (7,1) => {}, (8,0) => {}, (8,1) => {53,44}, (9,0) => {}, (9,1) => {54,53}, (0,0) => {7,0}, (0,1) => {}, (1,0) => {16,1}, (2,0) => {24,3}, (1,1) => {}, (3,0) => {31,6}, (2,1) => {}, (4,0) => {37,10}, (3,1) => {}, (5,0) => {42,15}, (4,1) => {}, (5,1) => {}, (6,0) => {46,21}},
--nr encodes the number of distinct representations in each entry
"nr"=>new HashTable from {(7,0) => 1, (6,1) => 0, (7,1) => 0, (8,0) => 0, (8,1) => 1, (9,0) => 0, (9,1) => 1, (0,0) => 1, (0,1) => 0, (1,0) => 1, (2,0) => 1, (1,1) => 0, (3,0) => 1, (2,1) => 0, (4,0) => 1, (3,1) => 0, (5,0) => 1, (4,1) => 0, (5,1) => 0, (6,0) => 1},
--nrm encodes the number of representations with multiplicity in each entry
"nrm"=>new HashTable from {(7,0) => 1, (6,1) => 0, (7,1) => 0, (8,0) => 0, (8,1) => 1, (9,0) => 0, (9,1) => 1, (0,0) => 1, (0,1) => 0, (1,0) => 1, (2,0) => 1, (1,1) => 0, (3,0) => 1, (2,1) => 0, (4,0) => 1, (3,1) => 0, (5,0) => 1, (4,1) => 0, (5,1) => 0, (6,0) => 1},
--er encodes the errors in the computed multigraded Hilbert series via our Schur method in each entry
"er"=>new HashTable from {(7,0) => 120, (6,1) => 0, (7,1) => 0, (8,0) => 0, (8,1) => 10, (9,0) => 0, (9,1) => 2, (0,0) => 8, (0,1) => 0, (1,0) => 70, (2,0) => 270, (1,1) => 0, (3,0) => 600, (2,1) => 0, (4,0) => 840, (3,1) => 0, (5,0) => 756, (4,1) => 0, (5,1) => 0, (6,0) => 420},
--bs encodes the Boij-Soederberg coefficients each entry
"bs"=>{3628800/1},
}
