--This file computes Betti tables for P^1 for d = 8 and b = 6
A := degreesRing 2
new HashTable from {
--tb stands for Total Betti numbers
"tb"=>new HashTable from {(7,0) => 0, (6,1) => 0, (7,1) => 1, (0,0) => 7, (1,0) => 48, (0,1) => 0, (2,0) => 140, (1,1) => 0, (2,1) => 0, (3,0) => 224, (3,1) => 0, (4,0) => 210, (5,0) => 112, (4,1) => 0, (5,1) => 0, (6,0) => 28},
--mb stands for Multigraded Betti numbers
"mb"=>new HashTable from {(7,0) => 0, (6,1) => 0, (7,1) => A_0^35*A_1^35, (0,0) => A_0^6+A_0^5*A_1+A_0^4*A_1^2+A_0^3*A_1^3+A_0^2*A_1^4+A_0*A_1^5+A_1^6, (0,1) => 0, (1,0) => A_0^13*A_1+2*A_0^12*A_1^2+3*A_0^11*A_1^3+4*A_0^10*A_1^4+5*A_0^9*A_1^5+6*A_0^8*A_1^6+6*A_0^7*A_1^7+6*A_0^6*A_1^8+5*A_0^5*A_1^9+4*A_0^4*A_1^10+3*A_0^3*A_1^11+2*A_0^2*A_1^12+A_0*A_1^13, (2,0) => A_0^19*A_1^3+2*A_0^18*A_1^4+4*A_0^17*A_1^5+6*A_0^16*A_1^6+9*A_0^15*A_1^7+11*A_0^14*A_1^8+14*A_0^13*A_1^9+15*A_0^12*A_1^10+16*A_0^11*A_1^11+15*A_0^10*A_1^12+14*A_0^9*A_1^13+11*A_0^8*A_1^14+9*A_0^7*A_1^15+6*A_0^6*A_1^16+4*A_0^5*A_1^17+2*A_0^4*A_1^18+A_0^3*A_1^19, (1,1) => 0, (2,1) => 0, (3,0) => A_0^24*A_1^6+2*A_0^23*A_1^7+4*A_0^22*A_1^8+7*A_0^21*A_1^9+10*A_0^20*A_1^10+14*A_0^19*A_1^11+18*A_0^18*A_1^12+21*A_0^17*A_1^13+23*A_0^16*A_1^14+24*A_0^15*A_1^15+23*A_0^14*A_1^16+21*A_0^13*A_1^17+18*A_0^12*A_1^18+14*A_0^11*A_1^19+10*A_0^10*A_1^20+7*A_0^9*A_1^21+4*A_0^8*A_1^22+2*A_0^7*A_1^23+A_0^6*A_1^24, (3,1) => 0, (4,0) => A_0^28*A_1^10+2*A_0^27*A_1^11+4*A_0^26*A_1^12+6*A_0^25*A_1^13+10*A_0^24*A_1^14+13*A_0^23*A_1^15+17*A_0^22*A_1^16+19*A_0^21*A_1^17+22*A_0^20*A_1^18+22*A_0^19*A_1^19+22*A_0^18*A_1^20+19*A_0^17*A_1^21+17*A_0^16*A_1^22+13*A_0^15*A_1^23+10*A_0^14*A_1^24+6*A_0^13*A_1^25+4*A_0^12*A_1^26+2*A_0^11*A_1^27+A_0^10*A_1^28, (4,1) => 0, (5,0) => A_0^31*A_1^15+2*A_0^30*A_1^16+3*A_0^29*A_1^17+5*A_0^28*A_1^18+7*A_0^27*A_1^19+9*A_0^26*A_1^20+11*A_0^25*A_1^21+12*A_0^24*A_1^22+12*A_0^23*A_1^23+12*A_0^22*A_1^24+11*A_0^21*A_1^25+9*A_0^20*A_1^26+7*A_0^19*A_1^27+5*A_0^18*A_1^28+3*A_0^17*A_1^29+2*A_0^16*A_1^30+A_0^15*A_1^31, (6,0) => A_0^33*A_1^21+A_0^32*A_1^22+2*A_0^31*A_1^23+2*A_0^30*A_1^24+3*A_0^29*A_1^25+3*A_0^28*A_1^26+4*A_0^27*A_1^27+3*A_0^26*A_1^28+3*A_0^25*A_1^29+2*A_0^24*A_1^30+2*A_0^23*A_1^31+A_0^22*A_1^32+A_0^21*A_1^33, (5,1) => 0},
--sb represents the betti numbers as sums of Schur functors
"sb"=>new HashTable from {(7,0) => {}, (6,1) => {}, (7,1) => {({35,35},1)}, (0,0) => {({6,0},1)}, (1,0) => {({13,1},1)}, (0,1) => {}, (2,0) => {({19,3},1)}, (1,1) => {}, (2,1) => {}, (3,0) => {({24,6},1)}, (3,1) => {}, (4,0) => {({28,10},1)}, (5,0) => {({31,15},1)}, (4,1) => {}, (5,1) => {}, (6,0) => {({33,21},1)}},
--dw encodes the dominant weights in each entry
"dw"=>new HashTable from {(7,0) => {}, (6,1) => {}, (7,1) => {{35,35}}, (0,0) => {{6,0}}, (1,0) => {{13,1}}, (0,1) => {}, (2,0) => {{19,3}}, (1,1) => {}, (2,1) => {}, (3,0) => {{24,6}}, (3,1) => {}, (4,0) => {{28,10}}, (5,0) => {{31,15}}, (4,1) => {}, (5,1) => {}, (6,0) => {{33,21}}},
--lw encodes the lex leading weight in each entry
"lw"=>new HashTable from {(7,0) => {}, (6,1) => {}, (7,1) => {35,35}, (0,0) => {6,0}, (1,0) => {13,1}, (0,1) => {}, (2,0) => {19,3}, (1,1) => {}, (2,1) => {}, (3,0) => {24,6}, (3,1) => {}, (4,0) => {28,10}, (5,0) => {31,15}, (4,1) => {}, (5,1) => {}, (6,0) => {33,21}},
--nr encodes the number of distinct representations in each entry
"nr"=>new HashTable from {(7,0) => 0, (6,1) => 0, (7,1) => 1, (0,0) => 1, (1,0) => 1, (0,1) => 0, (2,0) => 1, (1,1) => 0, (2,1) => 0, (3,0) => 1, (3,1) => 0, (4,0) => 1, (5,0) => 1, (4,1) => 0, (5,1) => 0, (6,0) => 1},
--nrm encodes the number of representations with multiplicity in each entry
"nrm"=>new HashTable from {(7,0) => 0, (6,1) => 0, (7,1) => 1, (0,0) => 1, (1,0) => 1, (0,1) => 0, (2,0) => 1, (1,1) => 0, (2,1) => 0, (3,0) => 1, (3,1) => 0, (4,0) => 1, (5,0) => 1, (4,1) => 0, (5,1) => 0, (6,0) => 1},
--er encodes the errors in the computed multigraded Hilbert series via our Schur method in each entry
"er"=>new HashTable from {(7,0) => 0, (6,1) => 0, (7,1) => 1, (0,0) => 7, (1,0) => 48, (0,1) => 0, (2,0) => 140, (1,1) => 0, (2,1) => 0, (3,0) => 224, (3,1) => 0, (4,0) => 210, (5,0) => 112, (4,1) => 0, (5,1) => 0, (6,0) => 28},
--bs encodes the Boij-Soederberg coefficients each entry
"bs"=>{40320/1},
}
