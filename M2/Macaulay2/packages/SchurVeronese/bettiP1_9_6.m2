--This file computes Betti tables for P^1 for d = 9 and b = 6
A := degreesRing 2
new HashTable from {
--tb stands for Total Betti numbers
"tb"=>new HashTable from {(7,0) => 0, (6,1) => 0, (7,1) => 9, (8,0) => 0, (8,1) => 2, (0,0) => 7, (0,1) => 0, (1,0) => 54, (2,0) => 180, (1,1) => 0, (2,1) => 0, (3,0) => 336, (4,0) => 378, (3,1) => 0, (5,0) => 252, (4,1) => 0, (5,1) => 0, (6,0) => 84},
--mb stands for Multigraded Betti numbers
"mb"=>new HashTable from {(7,0) => 0, (6,1) => 0, (8,0) => 0, (7,1) => A_0^43*A_1^35+A_0^42*A_1^36+A_0^41*A_1^37+A_0^40*A_1^38+A_0^39*A_1^39+A_0^38*A_1^40+A_0^37*A_1^41+A_0^36*A_1^42+A_0^35*A_1^43, (8,1) => A_0^44*A_1^43+A_0^43*A_1^44, (0,0) => A_0^6+A_0^5*A_1+A_0^4*A_1^2+A_0^3*A_1^3+A_0^2*A_1^4+A_0*A_1^5+A_1^6, (0,1) => 0, (1,0) => A_0^14*A_1+2*A_0^13*A_1^2+3*A_0^12*A_1^3+4*A_0^11*A_1^4+5*A_0^10*A_1^5+6*A_0^9*A_1^6+6*A_0^8*A_1^7+6*A_0^7*A_1^8+6*A_0^6*A_1^9+5*A_0^5*A_1^10+4*A_0^4*A_1^11+3*A_0^3*A_1^12+2*A_0^2*A_1^13+A_0*A_1^14, (2,0) => A_0^21*A_1^3+2*A_0^20*A_1^4+4*A_0^19*A_1^5+6*A_0^18*A_1^6+9*A_0^17*A_1^7+11*A_0^16*A_1^8+14*A_0^15*A_1^9+16*A_0^14*A_1^10+18*A_0^13*A_1^11+18*A_0^12*A_1^12+18*A_0^11*A_1^13+16*A_0^10*A_1^14+14*A_0^9*A_1^15+11*A_0^8*A_1^16+9*A_0^7*A_1^17+6*A_0^6*A_1^18+4*A_0^5*A_1^19+2*A_0^4*A_1^20+A_0^3*A_1^21, (1,1) => 0, (2,1) => 0, (3,0) => A_0^27*A_1^6+2*A_0^26*A_1^7+4*A_0^25*A_1^8+7*A_0^24*A_1^9+10*A_0^23*A_1^10+14*A_0^22*A_1^11+19*A_0^21*A_1^12+23*A_0^20*A_1^13+27*A_0^19*A_1^14+30*A_0^18*A_1^15+31*A_0^17*A_1^16+31*A_0^16*A_1^17+30*A_0^15*A_1^18+27*A_0^14*A_1^19+23*A_0^13*A_1^20+19*A_0^12*A_1^21+14*A_0^11*A_1^22+10*A_0^10*A_1^23+7*A_0^9*A_1^24+4*A_0^8*A_1^25+2*A_0^7*A_1^26+A_0^6*A_1^27, (3,1) => 0, (4,0) => A_0^32*A_1^10+2*A_0^31*A_1^11+4*A_0^30*A_1^12+6*A_0^29*A_1^13+10*A_0^28*A_1^14+14*A_0^27*A_1^15+19*A_0^26*A_1^16+23*A_0^25*A_1^17+28*A_0^24*A_1^18+31*A_0^23*A_1^19+34*A_0^22*A_1^20+34*A_0^21*A_1^21+34*A_0^20*A_1^22+31*A_0^19*A_1^23+28*A_0^18*A_1^24+23*A_0^17*A_1^25+19*A_0^16*A_1^26+14*A_0^15*A_1^27+10*A_0^14*A_1^28+6*A_0^13*A_1^29+4*A_0^12*A_1^30+2*A_0^11*A_1^31+A_0^10*A_1^32, (4,1) => 0, (5,0) => A_0^36*A_1^15+2*A_0^35*A_1^16+3*A_0^34*A_1^17+5*A_0^33*A_1^18+8*A_0^32*A_1^19+11*A_0^31*A_1^20+14*A_0^30*A_1^21+17*A_0^29*A_1^22+20*A_0^28*A_1^23+22*A_0^27*A_1^24+23*A_0^26*A_1^25+23*A_0^25*A_1^26+22*A_0^24*A_1^27+20*A_0^23*A_1^28+17*A_0^22*A_1^29+14*A_0^21*A_1^30+11*A_0^20*A_1^31+8*A_0^19*A_1^32+5*A_0^18*A_1^33+3*A_0^17*A_1^34+2*A_0^16*A_1^35+A_0^15*A_1^36, (6,0) => A_0^39*A_1^21+A_0^38*A_1^22+2*A_0^37*A_1^23+3*A_0^36*A_1^24+4*A_0^35*A_1^25+5*A_0^34*A_1^26+7*A_0^33*A_1^27+7*A_0^32*A_1^28+8*A_0^31*A_1^29+8*A_0^30*A_1^30+8*A_0^29*A_1^31+7*A_0^28*A_1^32+7*A_0^27*A_1^33+5*A_0^26*A_1^34+4*A_0^25*A_1^35+3*A_0^24*A_1^36+2*A_0^23*A_1^37+A_0^22*A_1^38+A_0^21*A_1^39, (5,1) => 0},
--sb represents the betti numbers as sums of Schur functors
"sb"=>new HashTable from {(7,0) => {}, (6,1) => {}, (7,1) => {({43,35},1)}, (8,0) => {}, (8,1) => {({44,43},1)}, (0,0) => {({6,0},1)}, (0,1) => {}, (1,0) => {({14,1},1)}, (2,0) => {({21,3},1)}, (1,1) => {}, (2,1) => {}, (3,0) => {({27,6},1)}, (4,0) => {({32,10},1)}, (3,1) => {}, (5,0) => {({36,15},1)}, (4,1) => {}, (5,1) => {}, (6,0) => {({39,21},1)}},
--dw encodes the dominant weights in each entry
"dw"=>new HashTable from {(7,0) => {}, (6,1) => {}, (7,1) => {{43,35}}, (8,0) => {}, (8,1) => {{44,43}}, (0,0) => {{6,0}}, (0,1) => {}, (1,0) => {{14,1}}, (2,0) => {{21,3}}, (1,1) => {}, (2,1) => {}, (3,0) => {{27,6}}, (4,0) => {{32,10}}, (3,1) => {}, (5,0) => {{36,15}}, (4,1) => {}, (5,1) => {}, (6,0) => {{39,21}}},
--lw encodes the lex leading weight in each entry
"lw"=>new HashTable from {(7,0) => {}, (6,1) => {}, (7,1) => {43,35}, (8,0) => {}, (8,1) => {44,43}, (0,0) => {6,0}, (0,1) => {}, (1,0) => {14,1}, (2,0) => {21,3}, (1,1) => {}, (2,1) => {}, (3,0) => {27,6}, (4,0) => {32,10}, (3,1) => {}, (5,0) => {36,15}, (4,1) => {}, (5,1) => {}, (6,0) => {39,21}},
--nr encodes the number of distinct representations in each entry
"nr"=>new HashTable from {(7,0) => 0, (6,1) => 0, (7,1) => 1, (8,0) => 0, (8,1) => 1, (0,0) => 1, (0,1) => 0, (1,0) => 1, (2,0) => 1, (1,1) => 0, (2,1) => 0, (3,0) => 1, (4,0) => 1, (3,1) => 0, (5,0) => 1, (4,1) => 0, (5,1) => 0, (6,0) => 1},
--nrm encodes the number of representations with multiplicity in each entry
"nrm"=>new HashTable from {(7,0) => 0, (6,1) => 0, (7,1) => 1, (8,0) => 0, (8,1) => 1, (0,0) => 1, (0,1) => 0, (1,0) => 1, (2,0) => 1, (1,1) => 0, (2,1) => 0, (3,0) => 1, (4,0) => 1, (3,1) => 0, (5,0) => 1, (4,1) => 0, (5,1) => 0, (6,0) => 1},
--er encodes the errors in the computed multigraded Hilbert series via our Schur method in each entry
"er"=>new HashTable from {(7,0) => 0, (6,1) => 0, (7,1) => 9, (8,0) => 0, (8,1) => 2, (0,0) => 7, (0,1) => 0, (1,0) => 54, (2,0) => 180, (1,1) => 0, (2,1) => 0, (3,0) => 336, (4,0) => 378, (3,1) => 0, (5,0) => 252, (4,1) => 0, (5,1) => 0, (6,0) => 84},
--bs encodes the Boij-Soederberg coefficients each entry
"bs"=>{362880/1},
}
