--This file computes Betti tables for P^1 for d = 7 and b = 6
A := degreesRing 2
new HashTable from {
--tb stands for Total Betti numbers
"tb"=>new HashTable from {(6,1) => 0, (0,0) => 7, (1,0) => 42, (0,1) => 0, (1,1) => 0, (2,0) => 105, (2,1) => 0, (3,0) => 140, (3,1) => 0, (4,0) => 105, (4,1) => 0, (5,0) => 42, (5,1) => 0, (6,0) => 7},
--mb stands for Multigraded Betti numbers
"mb"=>new HashTable from {(6,1) => 0, (0,0) => A_0^6+A_0^5*A_1+A_0^4*A_1^2+A_0^3*A_1^3+A_0^2*A_1^4+A_0*A_1^5+A_1^6, (0,1) => 0, (1,0) => A_0^12*A_1+2*A_0^11*A_1^2+3*A_0^10*A_1^3+4*A_0^9*A_1^4+5*A_0^8*A_1^5+6*A_0^7*A_1^6+6*A_0^6*A_1^7+5*A_0^5*A_1^8+4*A_0^4*A_1^9+3*A_0^3*A_1^10+2*A_0^2*A_1^11+A_0*A_1^12, (2,0) => A_0^17*A_1^3+2*A_0^16*A_1^4+4*A_0^15*A_1^5+6*A_0^14*A_1^6+9*A_0^13*A_1^7+11*A_0^12*A_1^8+13*A_0^11*A_1^9+13*A_0^10*A_1^10+13*A_0^9*A_1^11+11*A_0^8*A_1^12+9*A_0^7*A_1^13+6*A_0^6*A_1^14+4*A_0^5*A_1^15+2*A_0^4*A_1^16+A_0^3*A_1^17, (1,1) => 0, (2,1) => 0, (3,0) => A_0^21*A_1^6+2*A_0^20*A_1^7+4*A_0^19*A_1^8+7*A_0^18*A_1^9+10*A_0^17*A_1^10+13*A_0^16*A_1^11+16*A_0^15*A_1^12+17*A_0^14*A_1^13+17*A_0^13*A_1^14+16*A_0^12*A_1^15+13*A_0^11*A_1^16+10*A_0^10*A_1^17+7*A_0^9*A_1^18+4*A_0^8*A_1^19+2*A_0^7*A_1^20+A_0^6*A_1^21, (3,1) => 0, (4,0) => A_0^24*A_1^10+2*A_0^23*A_1^11+4*A_0^22*A_1^12+6*A_0^21*A_1^13+9*A_0^20*A_1^14+11*A_0^19*A_1^15+13*A_0^18*A_1^16+13*A_0^17*A_1^17+13*A_0^16*A_1^18+11*A_0^15*A_1^19+9*A_0^14*A_1^20+6*A_0^13*A_1^21+4*A_0^12*A_1^22+2*A_0^11*A_1^23+A_0^10*A_1^24, (4,1) => 0, (5,0) => A_0^26*A_1^15+2*A_0^25*A_1^16+3*A_0^24*A_1^17+4*A_0^23*A_1^18+5*A_0^22*A_1^19+6*A_0^21*A_1^20+6*A_0^20*A_1^21+5*A_0^19*A_1^22+4*A_0^18*A_1^23+3*A_0^17*A_1^24+2*A_0^16*A_1^25+A_0^15*A_1^26, (6,0) => A_0^27*A_1^21+A_0^26*A_1^22+A_0^25*A_1^23+A_0^24*A_1^24+A_0^23*A_1^25+A_0^22*A_1^26+A_0^21*A_1^27, (5,1) => 0},
--sb represents the betti numbers as sums of Schur functors
"sb"=>new HashTable from {(6,1) => {}, (0,0) => {({6,0},1)}, (1,0) => {({12,1},1)}, (0,1) => {}, (1,1) => {}, (2,0) => {({17,3},1)}, (2,1) => {}, (3,0) => {({21,6},1)}, (3,1) => {}, (4,0) => {({24,10},1)}, (4,1) => {}, (5,0) => {({26,15},1)}, (5,1) => {}, (6,0) => {({27,21},1)}},
--dw encodes the dominant weights in each entry
"dw"=>new HashTable from {(6,1) => {}, (0,0) => {{6,0}}, (1,0) => {{12,1}}, (0,1) => {}, (1,1) => {}, (2,0) => {{17,3}}, (2,1) => {}, (3,0) => {{21,6}}, (3,1) => {}, (4,0) => {{24,10}}, (4,1) => {}, (5,0) => {{26,15}}, (5,1) => {}, (6,0) => {{27,21}}},
--lw encodes the lex leading weight in each entry
"lw"=>new HashTable from {(6,1) => {}, (0,0) => {6,0}, (1,0) => {12,1}, (0,1) => {}, (1,1) => {}, (2,0) => {17,3}, (2,1) => {}, (3,0) => {21,6}, (3,1) => {}, (4,0) => {24,10}, (4,1) => {}, (5,0) => {26,15}, (5,1) => {}, (6,0) => {27,21}},
--nr encodes the number of distinct representations in each entry
"nr"=>new HashTable from {(6,1) => 0, (0,0) => 1, (1,0) => 1, (0,1) => 0, (1,1) => 0, (2,0) => 1, (2,1) => 0, (3,0) => 1, (3,1) => 0, (4,0) => 1, (4,1) => 0, (5,0) => 1, (5,1) => 0, (6,0) => 1},
--nrm encodes the number of representations with multiplicity in each entry
"nrm"=>new HashTable from {(6,1) => 0, (0,0) => 1, (1,0) => 1, (0,1) => 0, (1,1) => 0, (2,0) => 1, (2,1) => 0, (3,0) => 1, (3,1) => 0, (4,0) => 1, (4,1) => 0, (5,0) => 1, (5,1) => 0, (6,0) => 1},
--er encodes the errors in the computed multigraded Hilbert series via our Schur method in each entry
"er"=>new HashTable from {(6,1) => 0, (0,0) => 7, (1,0) => 42, (0,1) => 0, (1,1) => 0, (2,0) => 105, (2,1) => 0, (3,0) => 140, (3,1) => 0, (4,0) => 105, (4,1) => 0, (5,0) => 42, (5,1) => 0, (6,0) => 7},
--bs encodes the Boij-Soederberg coefficients each entry
"bs"=>{5040/1},
}
