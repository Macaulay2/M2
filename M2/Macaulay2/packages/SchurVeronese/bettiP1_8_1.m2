--This file computes Betti tables for P^1 for d = 8 and b = 1
A := degreesRing 2
new HashTable from {
--tb stands for Total Betti numbers
"tb"=>new HashTable from {(7,0) => 0, (6,1) => 40, (7,1) => 6, (0,0) => 2, (1,0) => 8, (0,1) => 0, (2,0) => 0, (1,1) => 0, (2,1) => 56, (3,0) => 0, (3,1) => 140, (4,0) => 0, (5,0) => 0, (4,1) => 168, (5,1) => 112, (6,0) => 0},
--mb stands for Multigraded Betti numbers
"mb"=>new HashTable from {(7,0) => 0, (6,1) => A_0^34*A_1^23+2*A_0^33*A_1^24+3*A_0^32*A_1^25+4*A_0^31*A_1^26+5*A_0^30*A_1^27+5*A_0^29*A_1^28+5*A_0^28*A_1^29+5*A_0^27*A_1^30+4*A_0^26*A_1^31+3*A_0^25*A_1^32+2*A_0^24*A_1^33+A_0^23*A_1^34, (7,1) => A_0^35*A_1^30+A_0^34*A_1^31+A_0^33*A_1^32+A_0^32*A_1^33+A_0^31*A_1^34+A_0^30*A_1^35, (0,0) => A_0+A_1, (0,1) => 0, (1,0) => A_0^8*A_1+A_0^7*A_1^2+A_0^6*A_1^3+A_0^5*A_1^4+A_0^4*A_1^5+A_0^3*A_1^6+A_0^2*A_1^7+A_0*A_1^8, (2,0) => 0, (1,1) => 0, (2,1) => A_0^20*A_1^5+A_0^19*A_1^6+2*A_0^18*A_1^7+3*A_0^17*A_1^8+4*A_0^16*A_1^9+5*A_0^15*A_1^10+6*A_0^14*A_1^11+6*A_0^13*A_1^12+6*A_0^12*A_1^13+6*A_0^11*A_1^14+5*A_0^10*A_1^15+4*A_0^9*A_1^16+3*A_0^8*A_1^17+2*A_0^7*A_1^18+A_0^6*A_1^19+A_0^5*A_1^20, (3,0) => 0, (3,1) => A_0^25*A_1^8+2*A_0^24*A_1^9+3*A_0^23*A_1^10+5*A_0^22*A_1^11+8*A_0^21*A_1^12+10*A_0^20*A_1^13+12*A_0^19*A_1^14+14*A_0^18*A_1^15+15*A_0^17*A_1^16+15*A_0^16*A_1^17+14*A_0^15*A_1^18+12*A_0^14*A_1^19+10*A_0^13*A_1^20+8*A_0^12*A_1^21+5*A_0^11*A_1^22+3*A_0^10*A_1^23+2*A_0^9*A_1^24+A_0^8*A_1^25, (4,0) => 0, (4,1) => A_0^29*A_1^12+2*A_0^28*A_1^13+4*A_0^27*A_1^14+6*A_0^26*A_1^15+9*A_0^25*A_1^16+12*A_0^24*A_1^17+15*A_0^23*A_1^18+17*A_0^22*A_1^19+18*A_0^21*A_1^20+18*A_0^20*A_1^21+17*A_0^19*A_1^22+15*A_0^18*A_1^23+12*A_0^17*A_1^24+9*A_0^16*A_1^25+6*A_0^15*A_1^26+4*A_0^14*A_1^27+2*A_0^13*A_1^28+A_0^12*A_1^29, (5,0) => 0, (6,0) => 0, (5,1) => A_0^32*A_1^17+2*A_0^31*A_1^18+4*A_0^30*A_1^19+6*A_0^29*A_1^20+8*A_0^28*A_1^21+10*A_0^27*A_1^22+12*A_0^26*A_1^23+13*A_0^25*A_1^24+13*A_0^24*A_1^25+12*A_0^23*A_1^26+10*A_0^22*A_1^27+8*A_0^21*A_1^28+6*A_0^20*A_1^29+4*A_0^19*A_1^30+2*A_0^18*A_1^31+A_0^17*A_1^32},
--sb represents the betti numbers as sums of Schur functors
"sb"=>new HashTable from {(7,0) => {}, (6,1) => {({34,23},1)}, (7,1) => {({35,30},1)}, (0,0) => {({1,0},1)}, (1,0) => {({8,1},1)}, (0,1) => {}, (2,0) => {}, (1,1) => {}, (2,1) => {({20,5},1)}, (3,0) => {}, (3,1) => {({25,8},1)}, (4,0) => {}, (5,0) => {}, (4,1) => {({29,12},1)}, (5,1) => {({32,17},1)}, (6,0) => {}},
--dw encodes the dominant weights in each entry
"dw"=>new HashTable from {(7,0) => {}, (6,1) => {{34,23}}, (7,1) => {{35,30}}, (0,0) => {{1,0}}, (1,0) => {{8,1}}, (0,1) => {}, (2,0) => {}, (1,1) => {}, (2,1) => {{20,5}}, (3,0) => {}, (3,1) => {{25,8}}, (4,0) => {}, (5,0) => {}, (4,1) => {{29,12}}, (5,1) => {{32,17}}, (6,0) => {}},
--lw encodes the lex leading weight in each entry
"lw"=>new HashTable from {(7,0) => {}, (6,1) => {34,23}, (7,1) => {35,30}, (0,0) => {1,0}, (1,0) => {8,1}, (0,1) => {}, (2,0) => {}, (1,1) => {}, (2,1) => {20,5}, (3,0) => {}, (3,1) => {25,8}, (4,0) => {}, (5,0) => {}, (4,1) => {29,12}, (5,1) => {32,17}, (6,0) => {}},
--nr encodes the number of distinct representations in each entry
"nr"=>new HashTable from {(7,0) => 0, (6,1) => 1, (7,1) => 1, (0,0) => 1, (1,0) => 1, (0,1) => 0, (2,0) => 0, (1,1) => 0, (2,1) => 1, (3,0) => 0, (3,1) => 1, (4,0) => 0, (5,0) => 0, (4,1) => 1, (5,1) => 1, (6,0) => 0},
--nrm encodes the number of representations with multiplicity in each entry
"nrm"=>new HashTable from {(7,0) => 0, (6,1) => 1, (7,1) => 1, (0,0) => 1, (1,0) => 1, (0,1) => 0, (2,0) => 0, (1,1) => 0, (2,1) => 1, (3,0) => 0, (3,1) => 1, (4,0) => 0, (5,0) => 0, (4,1) => 1, (5,1) => 1, (6,0) => 0},
--er encodes the errors in the computed multigraded Hilbert series via our Schur method in each entry
"er"=>new HashTable from {(7,0) => 0, (6,1) => 40, (7,1) => 6, (0,0) => 2, (1,0) => 8, (0,1) => 0, (2,0) => 0, (1,1) => 0, (2,1) => 56, (3,0) => 0, (3,1) => 140, (4,0) => 0, (5,0) => 0, (4,1) => 168, (5,1) => 112, (6,0) => 0},
--bs encodes the Boij-Soederberg coefficients each entry
"bs"=>{40320/1},
}
