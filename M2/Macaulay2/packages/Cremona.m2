
newPackage(
       "Cremona",
	Version => "3.99", 
        Date => "June 21, 2017 (first version: April 10, 2016, included with Macaulay2 1.9)",
    	Authors => {{Name => "Giovanni StaglianÃ²", Email => "giovannistagliano@gmail.com" }},
    	Headline => "Some computations for rational maps between projective varieties",
        Configuration => { 
                 "SilenceMathMode" => false,     -- load this package using loadPackage(Cremona, Configuration => {"SilenceMathMode"=>true}) if you don't want to see messages from MathMode
                 "BlowUpStrategy" => "Eliminate" -- alternatively you can set "BlowUpStrategy"=>"Saturate" (see GraphIdeal method)
                         },
        DebuggingMode => false, 
        Reload => true
)

export{
   "ChernSchwartzMacPherson",
   "SegreClass",
   "graph",
   "composeRationalMaps",
   "degreeOfRationalMap",   
   "invertBirMap",
   "isBirational",
   "isDominant",
   "isInverseMap",
   "kernelComponent",
   "projectiveDegrees",
   "toMap",
   "MathMode", 
   "Dominant", 
   "OnlySublist",
   "approximateInverseMap",
   "CodimBsInv",
   "parametrize",
   "specialCremonaTransformation",
   "quadroQuadricCremonaTransformation",
   "RationalMap",
   "rationalMap"
};

if class (options Cremona).Configuration#"SilenceMathMode" =!= Boolean then error "expected configuration option SilenceMathMode to be a boolean";
MathVerb:=not (options Cremona).Configuration#"SilenceMathMode";
certificate:="MathMode: output certified!\n";

blowupstrategy:=(options Cremona).Configuration#"BlowUpStrategy";
if blowupstrategy =!= "Saturate" and blowupstrategy =!= "Eliminate" then error "expected configuration option BlowUpStrategy to be \"Saturate\" or \"Eliminate\"";

ChernSchwartzMacPherson = method(TypicalValue => RingElement, Options => {MathMode => false});
SegreClass = method(TypicalValue => RingElement, Options => {MathMode => false});
graph=method();
composeRationalMaps=method();
degreeOfRationalMap=method(TypicalValue => ZZ, Options => {MathMode => false});
invertBirMap=method(Options => {MathMode => false});
isBirational=method(TypicalValue => Boolean, Options => {MathMode => false});
isDominant=method(TypicalValue => Boolean, Options => {MathMode => false});
isInverseMap=method(TypicalValue => Boolean);
kernelComponent=method(TypicalValue => Ideal);
projectiveDegrees=method(TypicalValue => List, Options => {MathMode => false, OnlySublist => infinity});
toMap=method(TypicalValue => RingMap, Options => {Dominant => null});
approximateInverseMap=method(Options => {MathMode => false, CodimBsInv => null});

RationalMap = new Type of MutableHashTable;

parametrize = method(TypicalValue => RationalMap);
specialCremonaTransformation = method(TypicalValue=>RationalMap);
quadroQuadricCremonaTransformation = method(TypicalValue=>RationalMap);
rationalMap = method(TypicalValue => RationalMap, Options => {Dominant => null});

composeRationalMaps(RingMap,RingMap) := (phi,psi) -> (
   if source phi =!= target psi then error "rational maps not composable: incompatible target and source";
   linSys:=flatten entries toMatrix (phi*psi);
   fixComp := try gcd linSys else 1_(target phi);
   qr:=apply(linSys,g -> quotientRemainder(g,fixComp)); 
        if # select(qr,g -> last g != 0) > 0 then error "got wrong gcd";
   eta:=map(target phi,source psi,apply(qr,first));
   if toMatrix eta == 0 then error("rational maps not composable: their composition would be the zero map");
   eta
);

degreeOfRationalMap RingMap := o -> (phi) -> (
   checkRationalMap phi;
   if (isPolynomialRing target phi) and (not o.MathMode) then (
          p:=preimage(phi,randomLinearSubspace(target phi,0));   
          hP:=hilbertPolynomial(inverseImage(phi,p),Projective=>false);
          if degree hP > {0} then return 0 else return sub(hP,ZZ);
   );
     verb:=MathVerb; MathVerb=false; 
   pr0:=first projectiveDegrees(phi,OnlySublist=>0,MathMode=>o.MathMode);
     MathVerb=verb;
   if (pr0 == 0 or pr0 == 1) then (if o.MathMode and MathVerb then <<certificate; return pr0);
     MathVerb=false; isDom:=isDominant(phi,MathMode=>true); MathVerb=verb;
   if isDom then (if o.MathMode and MathVerb then <<certificate; return sub(pr0/degree(ideal source phi),ZZ));
   phi=toMap phi;
   if isPrime pr0 then (if o.MathMode and MathVerb then <<certificate; if dim kernelComponent(phi,1) > dim target phi then return 1 else return pr0);
   d0:=sub(pr0/(degree kernel phi),ZZ);  
   if o.MathMode and MathVerb then <<certificate;
   d0
);

invertBirMap (RingMap) := o -> (phi) -> (
   checkRationalMap phi;
   if not isPolynomialRing target phi then return invertBirMap(phi,null,MathMode=>o.MathMode);
   a:=ideal source phi;
   F:=toMatrix phi;
   G:=matrix{{(numgens target phi):0_(source phi)}}; 
   try G=invertBirationalMapRS(F,a);
   if not (min flatten degrees ideal G > 0 and compress G === G) then (
       verb:=MathVerb; MathVerb=false; isDom:=isDominant(phi,MathMode=>true); MathVerb=verb;
       if not isDom then error("trying to invert non-dominant map");
       return invertBirMap(phi,null,MathMode=>o.MathMode);
   );
   psi:=map(source phi,target phi,G);
   if not o.MathMode then return psi;
   if (isInverseMap(phi,psi) and isInverseMap(psi,phi)) then (if MathVerb then <<certificate; return psi) else (return invertBirMap(phi,null,MathMode=>o.MathMode));
);

invertBirMap (RingMap,Nothing) := o -> (phi,nothing) -> ( -- undocumented 
   checkRationalMap phi;
   psi:=map(source phi,target phi,invertBirationalMapViaParametrization phi);
   if o.MathMode then (
        if (isInverseMap(phi,psi) and isInverseMap(psi,phi)) then (if MathVerb then <<certificate) else error("do not able to obtain an inverse rational map");
   ); 
   psi
);

isBirational (RingMap) := o -> (phi) -> (
   checkRationalMap phi;
   X:=target phi; Y:=source phi;
   if dim X != dim Y then (if MathVerb and o.MathMode then <<certificate; return false);
   if o.MathMode then (
         verb:=MathVerb; MathVerb=false; isDom:=isDominant(phi,MathMode=>true); MathVerb=verb;
         if not isDom then (if MathVerb then <<certificate; return false);      
   );
-- if isPolynomialRing X then return degreeOfRationalMap(phi,MathMode=>o.MathMode) == 1;
   first projectiveDegrees(phi,OnlySublist=>0,MathMode=>o.MathMode) == degree Y 
);

isDominant (RingMap) := o -> (phi) -> (
   checkRationalMap phi;
      if o.MathMode then return isDominantMath phi;
   X:=target phi; Y:=source phi;
   n:=dim X -1; m:=dim Y -1; 
   if n < m then return false;
   for i from 1 to n-m do phi=genericRestriction phi;
   first projectiveDegrees(phi,OnlySublist=>0) != 0
);

isDominantMath = (phi) -> (
   -- phi:X--->Y
   X:=target phi; Y:=source phi;
   n:=dim X -1; m:=dim Y -1; 
   PN:=ambient X; PM:=ambient Y;
   N:=numgens PN -1; M:=numgens PM -1;
   if n < m then (if MathVerb then <<certificate; return false);
   -- if there exists Z subset Y (with dim Z = 0) s.t dim phi^(-1)(Z) = n-m, then phi is dominant
   Z:=ideal(Y) + randomLinearSubspace(PM,M-m);
   while (-1 + dim(Z) != 0) do Z=ideal(Y) + randomLinearSubspace(PM,M-m);
   Z=sub(Z,Y);
   if dim inverseImage(phi,Z,MathMode=>true) -1 == n-m then (if MathVerb then <<certificate; return true);
   if kernel(phi,SubringLimit=>1) != 0 then (if MathVerb then <<certificate; return false);
   return isDominantMath(phi);
);

isInverseMap(RingMap,RingMap) := (phi,psi) -> (
   checkRationalMap phi;
   checkRationalMap psi;
   if (source phi =!= target psi or target phi =!= source psi) then return false; 
   try phipsi:=toMatrix(phi*psi) else return false;
   x:=gens target phi; 
   i:=0; while x_i == 0 do i=i+1;
   (q,r):=quotientRemainder((flatten entries phipsi)_i,x_i);
   if r != 0 then return false; 
   if q == 0 then return false;
   phipsi - q*(vars target phi) == 0
);

kernelComponent(RingMap,ZZ) := (phi,d) -> (
   checkRationalMap0 phi;
   if d<0 then return ideal source phi;
   Pn:=ambient target phi; Pm:=ambient source phi;  
   Phi:=lift(toMatrix phi,Pn); 
   e:=max degrees ideal Phi; if #e==1 then e=first e;
   Z:=transpose gens image basis(d*e,ideal target phi); 
   mm:=if source phi === Pm then transpose gens (ideal vars Pm)^d else transpose lift(gens image basis(d,ideal vars source phi),Pm); 
   f:=numgens target mm -1; g:=numgens target Z -1;
   a:=local a; b:=local b; K:=coefficientRing Pm;
   AB:=K[a_0..a_f,b_0..b_g]; A:=matrix{{a_0..a_f}}; B:=matrix{{b_0..b_g}};
   x:=local x; y:=local y; Pn':=AB[x_0..x_(numgens Pn-1)]; Pm':=AB[y_0..y_(numgens Pm-1)]; 
   pol:=(map(Pn',Pm',sub(Phi,vars Pn'))) (A * sub(mm,vars Pm')) - (B * sub(Z,vars Pn')); 
   eqs:=trim ideal sub(last coefficients pol,AB);
   trim sub(ideal(submatrix(transpose mingens kernel transpose sub(last coefficients(gens eqs,Monomials=>(vars AB)),K),{0..f})*mm),source phi)
);

kernel(RingMap,ZZ) := o -> (phi,d) -> kernelComponent(phi,d); 

projectiveDegrees (RingMap) := o -> (phi) -> (
   checkRationalMap phi;
   if o.OnlySublist < 0 then return {};
   k:=dim ideal target phi -1;
   if o.MathMode then return projectiveDegreesMath(phi,min(k,o.OnlySublist));
   L:={projDegree(phi,0,k)};
   for i from 1 to min(k,o.OnlySublist) do (
      phi=genericRestriction phi;
      L={projDegree(phi,0,k-i)}|L
   );
   L
);

projectiveDegrees (RingMap,ZZ) := o -> (phi,i) -> (checkRationalMap phi; if o.MathMode===true then error("option MathMode not available for projectiveDegrees(RingMap,ZZ); you can use the option with projectiveDegrees(RingMap)"); k:=dim ideal target phi -1; if i<0 or i>k then error("integer out of range"); projDegree(phi,i,k)); -- undocumented

toMap Matrix := o -> (F)  -> ( 
   if class ring F === FractionField then try F = lift((lcm apply(flatten entries F,denominator))*F,ring numerator (1_(ring F)));
   checkLinearSystem0 F;
   K:=coefficientRing ring F; 
   N:=numgens source F-1; 
   if N == -1 then return map(ring F,K[]);   
   t:=local t; x:=local x; y:=local y; txy:=baseName first gens ambient ring F; if class txy === IndexedVariable then txy = first txy; txy=toString txy;
   PNl:=(K[t_0..t_N],K[x_0..x_N],K[y_0..y_N]);   
   PN:=PNl_0; if txy === "t" then PN=PNl_1; if txy === "x" then PN=PNl_2;
   if numgens ambient ring F -1 == N then PN=ambient ring F;
   phi:=map(ring F,PN,F);
      if class o.Dominant === ZZ then (
      return map(ring F,PN/(kernelComponent(phi,o.Dominant)),F);
      ); 
      if (o.Dominant === infinity or o.Dominant === true) then (
      return map(ring F,PN/(trim kernel phi),F);
      ); 
   return phi;
);
toMap List := o -> (F)  -> toMap(matrix{F},Dominant=>o.Dominant);
toMap Ideal := o -> (F)  -> toMap(gens F,Dominant=>o.Dominant);
toMap RingMap := o -> (phi)  -> (
      phi=phi * map(source phi,ambient source phi);
      if class o.Dominant === ZZ then (
      return map(target phi,(source phi)/(kernelComponent(phi,o.Dominant)),toMatrix phi);
      ); 
      if (o.Dominant === infinity or o.Dominant === true) then (
      return map(target phi,(source phi)/(trim kernel phi),toMatrix phi);
      ); 
      if class o.Dominant === Ideal then if ring o.Dominant === source phi then if (phi o.Dominant == 0 and isHomogeneous o.Dominant) then (
      return map(target phi,(source phi)/(o.Dominant),toMatrix phi);
      ); 
   return phi;
);

toMap (Ideal,ZZ) := o -> (I,v) -> (
   if not isHomogeneous I then error("the ideal must be homogeneous");
   linSys:=gens image basis(v,I);
   toMap(linSys,Dominant=>o.Dominant)
);

toMap (Ideal,ZZ,ZZ) := o -> (I,v,b) -> (
   if not isHomogeneous I then error("the ideal must be homogeneous");
   if not isPolynomialRing ring I then error("expected ideal in a polynomial ring");
   if b!=1 and b!=2 then error("expected 1 or 2 as third argument");
   if b==1 then return toMap(I,v,Dominant=>o.Dominant);
   linSys:=linearSystemOfHypersurfacesOfGivenDegreeThatAreSingularAlongAGivenSubscheme(I,v);
   toMap(linSys,Dominant=>o.Dominant)
);

linearSystemOfHypersurfacesOfGivenDegreeThatAreSingularAlongAGivenSubscheme = (I,v) -> (
   -- returns the linear system of hypersurfaces of degree v that are singular along V(I) subset PP^d
   K:=coefficientRing ring I; 
   d:=numgens ring I -1;
   x:=local x;
   PP:=K[x_0..x_d];
   I=saturate I;
   C:=ideal image basis(v-1,sub(I,vars PP));
   n:=numgens C -1;
   if n==-1 then return sub(matrix{{}},ring I);
   Basis:=gens image basis(v,sub(I,vars PP));
   N:=numgens source Basis -1;
   if N==-1 then return sub(matrix{{}},ring I);
   a:=local a; b:=local b;
   R:=K[b_(0,0)..b_(n,d), a_0..a_N, MonomialOrder=>Eliminate ((d+1)*(n+1))];
   R':=R[x_0..x_d];
   M:=sub(jacobian Basis,R')*sub(transpose matrix{{a_0..a_N}},R') - transpose((gens sub(C,R'))*sub(matrix for i to n list for j to d list b_(i,j),R'));
   f:=map parametrize sub(ideal selectInSubring(1,gens gb sub(trim ideal last coefficients M,R)),K[a_0..a_N]);
   PP':=PP[gens target f];
   linSys:=transpose sub(sub((coefficients (sub(matrix f,PP') * transpose sub(Basis,PP'))_(0,0))_1,PP),vars ring I);
   linSys
); 
 
approximateInverseMap (RingMap,ZZ) := o -> (phi,d) -> (
    -- input: a birational map phi:X --->Y 
    -- output: a map Y--->X in some sense related to the inverse of phi
    checkRationalMap phi;
    n:=numgens ambient target phi -1;
    c:=2;
    if o.CodimBsInv =!= null then (if (try (class o.CodimBsInv === ZZ and o.CodimBsInv >= 2 and o.CodimBsInv <= n+1) else false) then c=o.CodimBsInv else (<<"--warning: option CodimBsInv ignored"<<endl));
    phiRes:=local phiRes;
    B:=trim sum for i from 1 to ceiling((n+1)/(c-1)) list (
         phiRes=phi;
         for i0 from 1 to c-1 do phiRes=genericRestriction phiRes; 
         if d<=0 then kernel(phiRes,SubringLimit=>(c-1)) else kernelComponent(phiRes,d)  
       );
   if not(numgens B <= n+1 and min flatten degrees B == max flatten degrees B) then (<<"--rerun approximateInverseMap (found "|toString(numgens B)|" generators of degrees "|toString(flatten degrees B)|")\n"; return approximateInverseMap(phi,d,CodimBsInv=>o.CodimBsInv,MathMode=>o.MathMode));
   if numgens B < n+1 then B=B+ideal((n+1-numgens(B)) : 0_(ring B));
   psi:=if isPolynomialRing target phi then map(source phi,target phi,gens B) else toMap(map(source phi,ambient target phi,gens B),Dominant=>ideal(target phi));
   if o.MathMode then (
          if isPolynomialRing target phi then (
                 try psi=composeRationalMaps(psi,toMap((vars target phi)*(last coefficients matrix composeRationalMaps(phi,psi))^(-1)));
                 if isInverseMap(phi,psi) and isInverseMap(psi,phi) then (if MathVerb then <<certificate; return psi) else error("MathMode: approximateInverseMap returned "|toExternalString(psi)|" but this is not the inverse map");
          ) else (
                 if source psi =!= target phi then error("MathMode: approximateInverseMap returned "|toExternalString(psi)|" but this map has an incorrect target variety");
                 if source psi === target phi then if isInverseMap(phi,psi) and isInverseMap(psi,phi) then (if MathVerb then <<certificate; return psi) else error("MathMode: approximateInverseMap returned "|toExternalString(psi)|" but this is not the inverse map");
          );
   );
   return psi;
);

approximateInverseMap (RingMap) := o -> (phi) -> approximateInverseMap(phi,-1,CodimBsInv=>o.CodimBsInv,MathMode=>o.MathMode);

invertBirationalMapRS = (F,a)  -> ( 
   -- Notation as in the paper [Russo, Simis - On Birational Maps and Jacobian Matrices] 
   -- Computes the inverse map of a birational map via the Russo and Simis's algorithm
   -- input: 1) row matrix, representing a birational map P^n-->P^m 
   --        2) ideal, representing the image of the map 
   -- output: row matrix, representing the inverse map   
   n:=numgens ring F-1;
   x:=local x;
   R:=coefficientRing(ring F)[x_0..x_n];
   I:=sub(F,vars R);
   S:=ring a;
   phi:=syz I;
   local q;
   for j to numgens source phi-1 list 
      if max degrees ideal matrix phi_j == {1} then q=j+1;
   phi1:=submatrix(phi,{0..q-1});
   RtensorS:=tensor(R,S);
   phi1=sub(phi1,RtensorS);
   Y:=sub(vars S,RtensorS);
   theta:=transpose submatrix(jacobian ideal(Y*phi1),{0..n},);
   theta=sub(theta,S);
   S':=S/a; theta':=sub(theta,S');
   Z:=kernel theta';
   basisZ:=mingens Z; 
      if numgens source basisZ == 0 then error("it has not been possible to determine the inverse rational map");
   g:=sub(basisZ_0,S);
   Inv:=transpose matrix(g);
   Inv 
);

invertBirationalMapViaParametrization = (phi)  -> (
   Bl := GraphIdeal phi;
   n := numgens ambient target phi -1;
   Sub := map(source phi,ring Bl,matrix{{(n+1):0_(source phi)}}|(vars source phi));
   T:=transpose gens kernel transpose Sub submatrix(jacobian Bl,{0..n},);
   -- psi:=for i to numgens target T -1 list map(source phi,target phi,submatrix(T,{i},));
   -- toMatrix first psi
   submatrix(T,{0},)
);

projDegree = (phi,i,dimSubVar) -> (
   -- Notation as in [Harris J., Algebraic Geometry, A First Course], p. 240.
   -- phi:X \subset P^n ---> Y \subset P^m, 
   -- i integer, 0 <= i <= k, k=dim X=dimSubVar.
   ringX:=target phi;
   ringY:=source phi;
   m:=numgens ambient ringY -1;
   n:=numgens ambient ringX -1;
   k:=if dimSubVar >=0 then dimSubVar else dim ideal ringX -1;
   L:=sub(randomLinearSubspace(ambient ringY,m-k+i),ringY);
   Z:=inverseImage(phi,L); 
   if dim Z == i+1 then degree Z else 0
);

projectiveDegreesMath = (phi,oSublist) -> ( 
   Bl:=GraphIdeal phi;
   m:=numgens ambient source phi -1;
   n:=numgens ambient target phi -1;
   r:=dim target phi -1;
   mdeg:=multidegree Bl;
   T:=gens ring mdeg;
   s:=n+m-r;
       assert(s == first degree mdeg  and  heft(ring Bl) == {1,1});
   mons:=for i to r list T_0^(s-m+i) * T_1^(m-i);
   pdeg:=flatten entries sub(last coefficients(mdeg,Monomials=>mons),ZZ);
   if MathVerb then <<certificate;
   pdeg_{(r-oSublist)..r}
);
-- projectiveDegreesAluffi = (phi) -> (needs "CSM.m2"; if not isPolynomialRing target phi then error("the target of the ring map needs to be a polynomial ring"); last presegre(coefficientRing target phi,target phi,numgens target phi -1,ideal matrix phi));

GraphIdealSat=method(TypicalValue => Ideal);
GraphIdealSat (RingMap) := (phi) -> (
   Pn:=ambient target phi;
   K:=coefficientRing Pn;
   n:=numgens Pn -1;
   X:=ideal target phi;
   B:=ideal toMatrix phi;
   Pm:=ambient source phi;
   m:=numgens Pm - 1;
   Y:=ideal source phi;
   x:=local x; y:=local y;
   R:=K[x_0..x_n,y_0..y_m,Degrees=>{(n+1):{1,0},(m+1):{0,1}}];
   p1:=map(R,Pn,{x_0..x_n});
   E:=p1 lift(B,Pn);
   Z:=p1(X) + ideal(matrix{{y_0..y_m}} * p1(lift(syz(gens B),Pn)));
   --   Z:=p1(X) + minors(2,(gens E)||matrix{{y_0..y_m}});
   (ii,Tii):=(0,infinity); for i to m do if (B_i != 0 and # terms B_i<Tii) then (ii,Tii)=(i,# terms B_i);
   saturate(Z,ideal(E_ii))
);

GraphIdealElim = method(TypicalValue => Ideal);
GraphIdealElim (RingMap) := (phi) -> (
   -- see also p. 65 in [Computations in algebraic geometry with Macaulay 2 - Editors: D. Eisenbud, D. Grayson, M. Stillman, and B. Sturmfels]
   Pn:=ambient target phi;
   n:=numgens Pn -1;
   m:=numgens source phi -1;
   K:=coefficientRing Pn;
   t:=local t; x:=local x; y:=local y;
   R':=K[t,x_0..x_n,y_0..y_m,MonomialOrder=>Eliminate 1];
   pr:=map(R',Pn,{x_0..x_n});
   F:=ideal pr lift(toMatrix phi,Pn);
   J':=pr(ideal target phi) + ideal apply(m+1,j->y_j-t*F_j);
   R:=K[x_0..x_n,y_0..y_m,Degrees=>{(n+1):{1,0},(m+1):{0,1}}];
   J:=(map(R,R',0|vars R)) ideal selectInSubring(1,gens gb J');
   trim J
);

GraphIdeal = if blowupstrategy === "Saturate" then GraphIdealSat else GraphIdealElim;
                     
graph (RingMap) := (phi) -> (
  checkRationalMap phi;
  R:=(ambient target phi)**(ambient source phi); 
  R=newRing(R,Degrees=>{(numgens ambient target phi):{1,0},(numgens ambient source phi):{0,1}});
  bl:=sub(GraphIdeal phi,vars R);
  Z:=R/bl;
  p1:=map(Z,target phi,submatrix(vars R,{0..(numgens ambient target phi-1)}));
  p2:=map(Z,source phi,submatrix'(vars R,{0..(numgens ambient target phi-1)}));
  (p1,p2)
);

toMatrix = (phi) -> ( -- phi RingMap
   submatrix(matrix phi,{0..(numgens source phi -1)})
);

random1 = (R) -> (
   K:=coefficientRing R;
   if class K =!= FractionField then random(1,R) else sum for s to numgens R -1 list (sum for b to abs random(ZZ) list random(b,ring numerator 1_K)) * (gens R)_s
);

randomLinearSubspace = (R,i) -> (
   -- input: polynomial ring R, integer i
   -- output: ideal of a random i-dimensional linear subspace of Proj(R)
   n:=numgens R -1;
   if i == n then return ideal R;
   if i <=-1 then return sub(ideal 1,R);
   L:=trim ideal for j to n-1-i list random1(R);
   -- return if dim L - 1 == i then L else randomLinearSubspace(R,i);
   L
);

genericRestriction = (phi) -> (
   -- restriction of a rational map X \subset P^n ---> Y \subset P^m to a general hyperplane section of X 
   Pn:=ambient target phi;
   n:=numgens Pn -1;
   K:=coefficientRing Pn;
   x:=local x;
   H:=K[x_0..x_(n-1)];
   j:=map(H,Pn,random(toList(x_0..x_(n-1))|{random1 H}));
   j=map(H/j(ideal target phi),target phi,toMatrix j);
   phi':=j*phi;
   phi'
);

inverseImage = method(TypicalValue => Ideal, Options => {MathMode => false});
inverseImage (RingMap,Ideal) := o -> (phi,J) -> (
   if source phi =!= ring J then error "expected homogeneous ideal in the coordinate ring of the target variety";
   B:=ideal toMatrix phi;
   K:=coefficientRing ring B;
   if o.MathMode or class K === FractionField then return saturate(phi J,B);
   F:=ideal sum for i to numgens B -1 list random(K) * B_i;
   saturate(phi J,F)
);

SegreClass (Ideal) := o -> (I) -> (
   if not isHomogeneous I then error "expected a homogeneous ideal";
   if not ((isPolynomialRing ring I or isQuotientRing ring I) and isPolynomialRing ambient ring I and isHomogeneous ideal ring I) then error("expected ideal in a graded quotient ring or in a polynomial ring");   
   I = trim I;
   d1:=max flatten degrees I;
   phi:=toMap(I,d1);
   SegreClass(phi,MathMode=>o.MathMode)
);

SegreClass (RingMap) := o -> (phi) -> (
   checkRationalMap phi;
   I:=ideal toMatrix phi;
   d1:=max flatten degrees I;
   r:=dim I -1; n:=dim ring I -1;
   N:=numgens ambient ring I -1;
      verb:=MathVerb; MathVerb=false; 
   d:=projectiveDegrees(phi,MathMode=>o.MathMode);
      MathVerb=verb;
   H:=local H; R:=ZZ[H]/H^(N+1); h:=first gens R;
   if o.MathMode and MathVerb then <<certificate;
   sum(r+1,k->(-1)^(n-k-1)*sum(n-k+1,i->(-1)^i*binomial(n-k,i)*d1^(n-k-i)*d_i)*h^(N-k))
);

ChernSchwartzMacPherson (Ideal) := o -> (X) -> ( 
   Pn:=ring X;
   if not (isPolynomialRing Pn and isHomogeneous X) then error "expected homogeneous ideal in a polynomial ring";
   n:=numgens Pn -1;
   H:=local H;
   R:=ZZ[H]/H^(n+1); 
   H=first gens R;
   verb:=MathVerb; MathVerb=false;
   csm := (I) -> (
      if numgens I == 1 then (
           g:=projectiveDegrees(map(Pn,Pn,transpose jacobian I),MathMode=>o.MathMode);
           return (1+H)^(n+1)-sum(n+1,j->g_j*(-H)^j*(1+H)^(n-j));
      );
      I1:=ideal I_0; I2:=ideal submatrix'(gens I,{0});
      csm(I1) + csm(I2) - csm(I1*I2) 
   );
   csmX:=csm trim X;
   MathVerb=verb;
   if o.MathMode and MathVerb then <<certificate;
   csmX
);

ChernSchwartzMacPherson (RingMap) := o -> (phi) -> (
  checkRationalMap phi;
  ChernSchwartzMacPherson(lift(ideal toMatrix phi,ambient target phi),MathMode=>o.MathMode)
); 

checkRationalMap0 = (phi) -> ( -- phi RingMap
   if coefficientRing target phi =!= coefficientRing source phi then error "different coefficient rings in source and target are not permitted";
   if not isField coefficientRing target phi then error("the coefficient ring needs to be a field");
   if not ((isPolynomialRing source phi or isQuotientRing source phi) and (isPolynomialRing target phi or isQuotientRing target phi) and isPolynomialRing ambient source phi and isPolynomialRing ambient target phi and isHomogeneous ideal source phi and isHomogeneous ideal target phi) then error("source and target of the ring map need to be quotients of polynomial rings by homogeneous ideals");
   if not (isHomogeneous ideal toMatrix phi) then error("the map needs to be defined by homogeneous polynomials of the same degree");
   D:=degrees ideal compress toMatrix phi; if #D != 0 then if not (min D == max D) then error("the map needs to be defined by homogeneous polynomials of the same degree");
);

checkRationalMap = (phi) -> ( -- phi RingMap
   if not (degrees ambient source phi == toList((numgens ambient source phi):{1})) then error "expected standard grading on source ring map";
   if not (degrees ambient target phi == toList((numgens ambient target phi):{1})) then error "expected standard grading on target ring map";
   checkRationalMap0 phi;
);

checkMultihomogeneousRationalMap = (phi) -> ( -- phi RingMap
   if not (degrees ambient source phi == toList((numgens ambient source phi):{1})) then error "expected standard grading on source ring map";
   if not (flatten multigens ambient target phi == gens ambient target phi) then error ("given grading on target ring map is not permitted");
   checkRationalMap0 phi;
);

checkLinearSystem0 = (F) -> ( -- F row matrix
   if not isField coefficientRing ring F then error("the coefficient ring needs to be a field");
   if not ((isPolynomialRing ring F or isQuotientRing ring F) and isPolynomialRing ambient ring F and isHomogeneous ideal ring F) then error("the base ring must be a quotient of a polynomial ring by a homogeneous ideal");
   if not (numgens target F == 1) then error("expected a row matrix");
   if numgens source F == 0 then return;
   if not (isHomogeneous ideal F) then error("expected homogeneous elements of the same degree");
   D:=degrees ideal compress F; if #D != 0 then if not (min D == max D) then error("expected homogeneous elements of the same degree");
);

---------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------
---------------------------- RationalMap ----------------------------------------------
---------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------

MultihomogeneousRationalMap = new Type of MutableHashTable;

rationalMap (RingMap) := o -> (phi) -> ( 
   checkMultihomogeneousRationalMap phi;
   isStandardMap := degrees ambient target phi == toList((numgens ambient target phi):{1});
   if (not isStandardMap) and (o.Dominant =!= "notSimplify") then phi = simplifyMap phi;
   if (o.Dominant =!= null and o.Dominant =!= "notSimplify") then phi = toMap(phi,Dominant=>o.Dominant);
   if isStandardMap then return new RationalMap from {
           "map" => phi,
           "maps" => null,
           "isDominant" => if o.Dominant === true or o.Dominant === infinity then true else null,
           "idealImage" => if o.Dominant === true or o.Dominant === infinity then trim ideal(0_(source phi)) else null,
           "isBirational" => null,
           "inverseRationalMap" => null,
           "projectiveDegrees" => {},
           "degree" => null,
           "dimAmbientTarget" => numgens ambient target phi -1,
           "dimTarget" => max(dim target phi -1,-1),
           "dimAmbientSource" => numgens ambient source phi -1,
           "dimSource" => max(dim source phi -1,-1)
      };
   if not isStandardMap then return new MultihomogeneousRationalMap from {
           "map" => phi,
           "maps" => null,
           "isDominant" => if o.Dominant === true or o.Dominant === infinity then true else null,
           "idealImage" => if o.Dominant === true or o.Dominant === infinity then trim ideal(0_(source phi)) else null,
           "isBirational" => null,
           "projectiveDegrees" => {},
           "degree" => null,
           "dimAmbientTarget" => apply(multigens ambient target phi,n -> (#n)-1),
           "dimTarget" => max(dim target phi - (# heft ambient target phi),-1),
           "dimAmbientSource" => numgens ambient source phi -1,
           "dimSource" => max(dim source phi -1,-1),
           "graph" => null,
           "baseLocus" => null
      };
);
rationalMap (Matrix) := o -> (F) -> rationalMap(toMap(F,Dominant=>null),Dominant=>o.Dominant);
rationalMap (List) := o -> (F) -> rationalMap(toMap(F,Dominant=>null),Dominant=>o.Dominant);
rationalMap (Ideal) := o -> (I) -> rationalMap(toMap(I,Dominant=>null),Dominant=>o.Dominant);
rationalMap (Ideal,ZZ) := o -> (I,d) -> rationalMap(toMap(I,d,Dominant=>null),Dominant=>o.Dominant);
rationalMap (Ideal,ZZ,ZZ) := o -> (I,d,e) -> rationalMap(toMap(I,d,e,Dominant=>null),Dominant=>o.Dominant);
rationalMapInt = method(Options => {Dominant => null});
rationalMapInt (MutableHashTable) := o -> (Phi) -> ( 
     Psi := Phi * rationalMap(target Phi,ambient target Phi);
     if Phi#"projectiveDegrees" =!= {} then setKeyValue(Psi,"projectiveDegrees",Phi#"projectiveDegrees"); 
     if Phi#"degree" =!= null then setKeyValue(Psi,"degree",Phi#"degree"); 
     if Phi#"idealImage" =!= null then setKeyValue(Psi,"idealImage",trim(lift(image Phi,ambient source Phi#"map") + ideal(source Phi#"map")));   
     if o.Dominant === true or o.Dominant === infinity then (
            if Psi#"idealImage" === null then setKeyValue(Psi,"idealImage",trim(lift(image Phi,ambient source Phi#"map") + ideal(source Phi#"map")));
            setKeyValue(Psi,"map",map(target Psi#"map",(source Psi#"map")/(Psi#"idealImage"),toMatrix Psi#"map"));
            setKeyValue(Psi,"isDominant",true); 
     );
     if class o.Dominant === Ideal then if ring o.Dominant === source Psi#"map" then if ((Psi#"map") o.Dominant == 0 and isHomogeneous o.Dominant) then (
            setKeyValue(Psi,"map",map(target Psi#"map",(source Psi#"map")/(o.Dominant),toMatrix Psi#"map"));
     ); 
     if class o.Dominant === ZZ then (
            J := image(Psi,o.Dominant);
            setKeyValue(Psi,"map",map(target Psi#"map",(source Psi#"map")/J,toMatrix Psi#"map"));
     ); 
     return Psi;
);
rationalMap (RationalMap) := o -> (Phi) -> rationalMapInt(Phi,Dominant=>o.Dominant);
rationalMap (MultihomogeneousRationalMap) := o -> (Phi) -> rationalMapInt(Phi,Dominant=>o.Dominant);

rationalMap (Ring,Ring,Matrix) := o -> (R,S,F) -> (
     if not (isPolynomialRing ambient S) then error("the ambient rings must be polynomial rings");
     phi := map(R,ambient S,F);
     if not isHomogeneous ideal S then error "got quotient of polynomial ring by a non-homogeneous ideal";
     if phi(ideal S) != 0 then error "the map is not valid";
     rationalMap(map(R,S,F),Dominant=>o.Dominant)
);

rationalMap (Ring,Ring,List) := o -> (R,S,L) -> (
     rationalMap(R,S,matrix{L},Dominant=>o.Dominant)
);

rationalMap (Ring,Ring) := o -> (R,S) -> (
    if (numgens ambient R != numgens ambient S) then error "expected ambient rings to have the same dimension";
    Phi := rationalMap(R,S,vars ambient R,Dominant=>o.Dominant);
    if (isPolynomialRing R and isPolynomialRing S and class Phi === RationalMap) then (
         setKeyValue(Phi,"maps",{map Phi});
         setKeyValue(Phi,"isDominant",true);
         setKeyValue(Phi,"isBirational",true);
         setKeyValue(Phi,"projectiveDegrees",toList((numgens R):1));
         setKeyValue(Phi,"degree",1);
    );
    Phi
);

rationalMap (Ring) := o -> (R) -> rationalMap(R,R,Dominant=>o.Dominant);

simplifyMap = method()
simplifyMap (RingMap) := (phi) -> ( 
   I := multisaturate ideal target phi;
      try assert(isSubset(ideal target phi,I) and isHomogeneous I) else error "internal error occurred";
   if not isSubset(I,ideal target phi) then (
        R := (ambient target phi)/I;
        phi = map(R,source phi,sub(toMatrix phi,R));
   );
   return composeRationalMaps(map(target phi,target phi,vars ambient target phi),phi);
);

multihomogeneousRationalMap = method(TypicalValue => MultihomogeneousRationalMap)
multihomogeneousRationalMap (RationalMap) := (Phi) -> (
   new MultihomogeneousRationalMap from {
        "map" => Phi#"map",
        "maps" => Phi#"maps",
        "isDominant" => Phi#"isDominant",
        "idealImage" => Phi#"idealImage",
        "isBirational" => Phi#"isBirational",
        "projectiveDegrees" => Phi#"projectiveDegrees",
        "degree" => Phi#"degree",
        "dimAmbientTarget" => {Phi#"dimAmbientTarget"},
        "dimTarget" => Phi#"dimTarget",
        "dimAmbientSource" => Phi#"dimAmbientSource",
        "dimSource" => Phi#"dimSource",
        "graph" => null,
        "baseLocus" => null
   }
);
RationalMap ~ := (Phi) -> multihomogeneousRationalMap(Phi); 

setKeyValue = method(TypicalValue => Nothing)
setKeyValue (MutableHashTable,String,Thing) := (Phi,str,val) -> (
--  <<("--setting key \""|str|"\", for "|toString(net Phi)|", real modification: "|toString(Phi#str =!= val)|"\n");
    errorClass := () -> error("tried to set a wrong value on the key \""|str|"\"");
    errorChange := () -> error("tried to change the value for \""|str|"\" from "|toString(Phi#str)|" to "|toString(val));
    if str === "map" then (
         if class val =!= RingMap then errorClass();
         if target val =!= target Phi#"map" then errorChange();
         if ambient source val =!= ambient source Phi#"map" then errorChange();
         if source val =!= source Phi#"map" then (
             if not (isPolynomialRing source Phi#"map") then errorChange();
             if Phi#"isDominant" === false then Phi#"isDominant" = null;
             if Phi#"isBirational" === false then Phi#"isBirational" = null;
             Phi#"dimSource" = max(dim source val -1,-1);
             if Phi#"idealImage" =!= null then Phi#"idealImage" = trim sub(Phi#"idealImage",source val);     
             if Phi#"maps" =!= null then Phi#"maps" = apply(Phi#"maps",psi -> map(target Phi#"map",source val,toMatrix psi));
         );
         Phi#str = val;
         return;
    );
    if str === "maps" then (
         if class val =!= List then errorClass();
         if Phi#str === null then Phi#str = val else errorChange();
         return;
    );
    if str === "isDominant" then (
         if class val =!= Boolean then errorClass();
         if Phi#str === null then (Phi#str = val) else (if Phi#str =!= val then errorChange());
         if val === true then if Phi#"degree" === 1 then if Phi#"isBirational" =!= true then setKeyValue(Phi,"isBirational",true);
         if val === true then if Phi#"idealImage" === null then setKeyValue(Phi,"idealImage",trim ideal(0_(source Phi#"map")));
         if val === false then if Phi#"isBirational" =!= false then setKeyValue(Phi,"isBirational",false);
         return;
    );
    if str === "idealImage" then (
         if class val =!= Ideal then errorClass();
         if ring val =!= source Phi#"map" then errorClass();
         Phi#str = val;
         if Phi#"isDominant" === null then setKeyValue(Phi,"isDominant",val == 0);
         return;
    );
    if str === "isBirational" then (
         if class val =!= Boolean then errorClass();
         if Phi#str === null then (Phi#str = val) else (if Phi#str =!= val then errorChange());
         if val === true then (if Phi#"degree" =!= 1 then setKeyValue(Phi,"degree",1); if Phi#"isDominant" =!= true then setKeyValue(Phi,"isDominant",true));
         return;
    );
    if str === "inverseRationalMap" then (
         if class val =!= RationalMap then errorClass();
         if Phi#str === null then Phi#str = val else errorChange();
         return;
    );
    if str === "projectiveDegrees" then (
         if class val =!= List then errorClass();
         if # val =!= 1 + Phi#"dimTarget" then errorClass();
         if Phi#str === {} then (Phi#str = val) else (if Phi#str =!= val then errorChange());
         if class Phi =!= RationalMap then return;
         if Phi#"dimTarget" === Phi#"dimAmbientTarget" then if Phi#"dimSource" === Phi#"dimAmbientSource" then if (Phi#"dimTarget" === Phi#"dimSource" and Phi#"dimTarget" > 0) then (if Phi#"isDominant" =!= (last val > 0) then setKeyValue(Phi,"isDominant",last val > 0); if Phi#"degree" =!= (last val) then setKeyValue(Phi,"degree",last val));
         if Phi#"inverseRationalMap" =!= null then if (Phi#"inverseRationalMap")#"projectiveDegrees" =!= (reverse val) then setKeyValue(Phi#"inverseRationalMap","projectiveDegrees",reverse val);
         return;
    );    
    if str === "degree" then (
         if class val =!= ZZ then errorClass();
         if Phi#str === null then (Phi#str = val) else (if Phi#str =!= val then errorChange());
         if val === 1 then if Phi#"isDominant" === true then if Phi#"isBirational" =!= true then setKeyValue(Phi,"isBirational",true);
         return;
    );
    error("key not found");
);

expression RationalMap := (Phi) -> (
    if Phi#"dimTarget" < 0 or Phi#"dimSource" < 0 then return expression("map from " | expressionVar(Phi#"dimTarget" , Phi#"dimAmbientTarget") | " to " | expressionVar(Phi#"dimSource" , Phi#"dimAmbientSource"));
    d:= max flatten degrees ideal compress matrix Phi; type:="";
      if d === 1 then type = "linear "; if d === 2 then type = "quadratic "; if d === 3 then type = "cubic ";
    if (isPolynomialRing target Phi#"map" and isPolynomialRing source Phi#"map" and Phi#"isBirational" === true) then (
         if #(Phi#"projectiveDegrees")>=3 then (
              if unique(Phi#"projectiveDegrees") == {1} then return expression("projective transformation of PP^"|toString(Phi#"dimTarget")) else return expression("Cremona transformation of PP^"|toString(Phi#"dimTarget")|" of type "|toString(((Phi#"projectiveDegrees")_1,(Phi#"projectiveDegrees")_(#(Phi#"projectiveDegrees")-2))));
         );
         return expression(type|"Cremona transformation of PP^"|toString(Phi#"dimTarget"));
    );
    return expression(type|(if Phi#"isBirational" === true then "birational " else (if Phi#"isDominant" === true then "dominant rational " else "rational "))| "map from " | expressionVar(Phi#"dimTarget" , Phi#"dimAmbientTarget") | " to " | expressionVar(Phi#"dimSource" , Phi#"dimAmbientSource"));
);

expression MultihomogeneousRationalMap := (Phi) -> (
    if Phi#"dimTarget" < 0 or Phi#"dimSource" < 0 then return expression("map from " | expressionVar(Phi#"dimTarget" , Phi#"dimAmbientTarget") | " to " | expressionVar(Phi#"dimSource" , Phi#"dimAmbientSource"));
    return expression((if Phi#"isBirational" === true then "birational " else (if Phi#"isDominant" === true then "dominant rational " else "rational "))| "map from " | expressionVar(Phi#"dimTarget" , Phi#"dimAmbientTarget") | " to " | expressionVar(Phi#"dimSource" , Phi#"dimAmbientSource"));
);

net RationalMap := (Phi) -> net expression Phi;

net MultihomogeneousRationalMap := (Phi) -> net expression Phi;

describe RationalMap := (Phi) -> (
    descr:="rational map defined by forms of degree "|toString(max flatten degrees ideal compress toMatrix Phi#"map")|"\n";
    descr=descr|"source variety: "|expressionVar(ideal target Phi#"map",Phi#"dimTarget",Phi#"dimAmbientTarget")|"\n";
    descr=descr|"target variety: "|expressionVar(ideal source Phi#"map",Phi#"dimSource",Phi#"dimAmbientSource")|"\n";
    if Phi#"projectiveDegrees" =!= {} then (
        projdegs := reverse Phi#"projectiveDegrees"; -- [Harris, Exercise 19.2]
        descr=descr|"graph: "|toString(Phi#"dimTarget")|"-dimensional variety of degree "|toString(sum(Phi#"dimTarget" + 1,j -> binomial(Phi#"dimTarget",j) * projdegs_j))|" in PP^"|toString(Phi#"dimAmbientTarget")|" x PP^"|toString(Phi#"dimAmbientSource")|" subset PP^"|toString((Phi#"dimAmbientTarget" +1)*(Phi#"dimAmbientSource" +1) - 1)|"\n";
    );
    if Phi#"isDominant" =!= true and Phi#"idealImage" =!= null then descr=descr|"image: "|expressionVar(lift(Phi#"idealImage",ambient source Phi#"map") + ideal source Phi#"map")|"\n";
    if Phi#"isDominant" =!= null then descr=descr|"dominance: "|toString(Phi#"isDominant")|"\n";
    if Phi#"isBirational" =!= null then (
             descr=descr|"birationality: "|toString(Phi#"isBirational");
             if Phi#"inverseRationalMap" =!= null then descr=descr|" (the inverse map is known)";
             descr=descr|"\n";
    );
    if Phi#"isBirational" =!= true and Phi#"degree" =!= null then descr=descr|"degree of map: "|toString(Phi#"degree")|"\n";
    if Phi#"projectiveDegrees" =!= {} then descr=descr|"projective degrees: "|toString(Phi#"projectiveDegrees")|"\n";
    if Phi#"maps" =!= null then (
                 descr=descr|"number of minimal representatives: "|toString(# Phi#"maps");
                 if # Phi#"maps" >1 then descr=descr|", with degrees "|toString(toSequence apply(Phi#"maps",F-> max flatten degrees ideal compress toMatrix F));
                 descr=descr|"\n";
                 B:=ideal Phi; dimB:=max(dim B -1,-1);
                 descr=descr|"dimension base locus: "|toString(dimB)|"\n";
                 if dimB>=0 then descr=descr|"degree base locus: "|toString(degree B)|"\n";     
    );
    descr=descr|"coefficient ring: "|toExternalString(coefficientRing ambient target Phi#"map");
    net expression descr
);

describe MultihomogeneousRationalMap := (Phi) -> (
    d := unique degrees ideal compress matrix Phi; try assert(# d == 1) else error "internal error occurred";
    descr:="rational map defined by multiforms of degree "|toString(first d)|"\n";
    descr=descr|"source variety: "|expressionVar(ideal source Phi,Phi#"dimTarget",Phi#"dimAmbientTarget")|"\n";
    descr=descr|"target variety: "|expressionVar(ideal target Phi,Phi#"dimSource",Phi#"dimAmbientSource")|"\n"; 
    if Phi#"isDominant" =!= true and Phi#"idealImage" =!= null then descr=descr|"image: "|expressionVar(lift(Phi#"idealImage",ambient source Phi#"map") + ideal source Phi#"map")|"\n";
    if Phi#"isDominant" =!= null then descr=descr|"dominance: "|toString(Phi#"isDominant")|"\n";
    if Phi#"isBirational" =!= null then descr=descr|"birationality: "|toString(Phi#"isBirational")|"\n";
    if Phi#"isBirational" =!= true and Phi#"degree" =!= null then descr=descr|"degree of map: "|toString(Phi#"degree")|"\n";
    if Phi#"projectiveDegrees" =!= {} then descr=descr|"projective degrees: "|toString(Phi#"projectiveDegrees")|"\n";
    if Phi#"maps" =!= null then (
                 descr=descr|"number of minimal representatives: "|toString(# Phi#"maps");
                 if # Phi#"maps" >1 then descr=descr|", with degrees "|toString(toSequence apply(Phi#"maps",F-> max degrees ideal compress toMatrix F));
                 descr=descr|"\n";
    );
    if Phi#"baseLocus" =!= null then (
                 B:=Phi#"baseLocus"; dimB:=max(dim B - (# Phi#"dimAmbientTarget"),-1);
                 descr=descr|"dimension base locus: "|toString(dimB)|"\n";
    );
    descr=descr|"coefficient ring: "|toExternalString(coefficientRing ambient source Phi);
    net expression descr
);

toString RationalMap := (Phi) -> "rationalMap("|toExternalString(map Phi)|")";

toString MultihomogeneousRationalMap := (Phi) -> "rationalMap("|toExternalString(map Phi)|")";

expressionVar = method(TypicalValue => String)

expressionVar (ZZ,ZZ) := (Dim,DimAmbient) -> (
   if DimAmbient < 0 then return "empty scheme";
   if Dim < 0 then return ("empty subscheme of PP^"| toString(DimAmbient));
   if Dim === DimAmbient then return ("PP^" | toString(DimAmbient));
   if Dim === 0 then return ("one-point scheme in PP^"| toString(DimAmbient));
   if Dim === 1 then return ("curve in PP^"| toString(DimAmbient));
   if Dim === 2 then return ("surface in PP^"| toString(DimAmbient));
   if DimAmbient - Dim === 1 then return ("hypersurface in PP^"| toString(DimAmbient));
   if Dim === 3 then return ("threefold in PP^"| toString(DimAmbient));
   return(toString(Dim) | "-dimensional subvariety of "| "PP^" | toString(DimAmbient));
);

expressionVar (ZZ,List) := (Dim,DimAmbient) -> (
   if # DimAmbient <= 0 or min DimAmbient < 0 then return "empty scheme";
   str := "PP^"|toString(DimAmbient_0);
   for i from 1 to #DimAmbient-1 do str = str | " x PP^" | toString(DimAmbient_i);
   if Dim < 0 then return ("empty subscheme of "| str);
   if Dim === sum DimAmbient then return str;
   if Dim === 0 then return ("one-point scheme in "| str);
   if Dim === 1 then return ("curve in "| str);
   if Dim === 2 then return ("surface in "| str);
   if (sum DimAmbient) - Dim === 1 then return ("hypersurface in "| str);
   if Dim === 3 then return ("threefold in "| str);
   return(toString(Dim) | "-dimensional subvariety of "| str);
);

expressionVar (Ideal,ZZ,ZZ) := (I,k,n) -> ( -- assume V(I) absolutely irreducible, linearly normal, etc...
  I = trim I;  d:=degree I; degs := flatten degrees I; 
  try assert(isPolynomialRing ring I and isHomogeneous I and k == max(dim I -1,-1) and n == numgens ring I -1 and (k != 0 or d == 1)) else error "internal error occurred";
  if k <= 0 or k >= n then return expressionVar(k,n);
  dimSing := if (unique degs == {1}) or (select(degs,ee->ee>1)=={2}) or (max degs<=2 and n<=5) or (numgens I == 1 and d<=5 and n<=5) or (numgens I == n-k and n<=6) then max(dim(minors(n-k,jacobian I)+I)-1,-1) else null; -- for efficiency, the singular locus is calculated only in special cases
  singStr:=if dimSing =!= null and dimSing =!= -1 then "singular " else "";
  cutOut:=""; if #degs>1 then cutOut = if # unique degs == 1 then " cut out by "|toString(#degs)|" hypersurfaces of degree "|toString(first degs) else " cut out by "|toString(#degs)|" hypersurfaces of degrees "|toString(toSequence degs);
  if d == n-k+1 and d > 2 and min degs != 1 then (
      if dimSing === -1 then (
           if d == 4 and k == 2 and n == 5 and unique degs == {2} and #degs == 6 then (
             verb:=MathVerb; MathVerb=false; isD:=isDominant(toMap I,MathMode=>true); MathVerb=verb;
             if isD then return "Veronese surface in PP^5";
           );
           if k==1 then return ("rational normal curve of degree "|toString(d)|" in PP^"|toString(n));
           if k==2 then return ("smooth rational normal scroll surface of degree "|toString(d)|" in PP^"|toString(n));
           if k==d then return ("PP^1 x PP^"|toString(k-1)|" in PP^"|toString(n));
           if k>2 then return "smooth rational normal scroll of dimension "|toString(k)|" and degree "|toString(d)|" in PP^"|toString(n);
      ) else return(singStr|toString(k)|"-dimensional variety of minimal degree in PP^"|toString(n)|cutOut);
  );
  if k == 1 then (
         g:=genus(I);
         if d == 1 and g == 0 then return("line in PP^"|(toString n));
         if d == 2 and g == 0 then if dimSing === -1 then return("irreducible conic curve in PP^"|(toString n)) else return(singStr|"conic curve in PP^"|(toString n));
         if d == 3 then if dimSing === -1 then return("smooth cubic curve of genus "|toString(g)|" in PP^"|(toString n)|cutOut) else return(singStr|"cubic curve of arithmetic genus "|toString(g)|" in PP^"|(toString n)|cutOut);
         if dimSing === -1 then return("smooth curve of degree "|toString(d)|" and genus "|toString(g)|" in PP^"|(toString n)|cutOut) else return(singStr|"curve of degree "|toString(d)|" and arithmetic genus "|toString(g)|" in PP^"|(toString n)|cutOut);
  );
  if k == 2 then (
         if d == 1 then return("plane in PP^"|(toString n));
         if d == 2 then if dimSing === -1 then return("smooth quadric surface in PP^"|(toString n)) else return(singStr|"quadric surface in PP^"|(toString n));
         if d == 3 then if dimSing === -1 then return("smooth cubic surface in PP^"|(toString n)|cutOut) else return(singStr|"cubic surface in PP^"|(toString n)|cutOut);
         if dimSing === -1 then return("smooth surface of degree "|toString(d)|" in PP^"|(toString n)|cutOut) else return(singStr|"surface of degree "|toString(d)|" in PP^"|(toString n)|cutOut);
  );
  if numgens I == 1 then (
       assert(dimSing =!= null);
       if d == 1 then return("hyperplane in PP^"|(toString n));
       if d == 2 then if dimSing === -1 then return("smooth quadric hypersurface in PP^"|(toString n)) else return("quadric hypersurface of rank "|toString(n-dimSing)|" in PP^"|(toString n));
       if d == 3 then if dimSing === -1 then return("smooth cubic hypersurface in PP^"|(toString n)) else (if dimSing<k-3 then return("factorial cubic hypersurface in PP^"|(toString n)) else return("singular cubic hypersurface in PP^"|(toString n)));
       if dimSing === -1 then return("smooth hypersurface of degree "|toString(d)|" in PP^"|(toString n)) else (if dimSing<k-3 then return("factorial hypersurface of degree "|toString(d)|" in PP^"|(toString n)) else return("singular hypersurface of degree "|toString(d)|" in PP^"|(toString n)));
  );
  if numgens I == n-k then (
       if unique degs == {1} then return("linear "|toString(k)|"-dimensional subspace of PP^"|(toString n));
       if dimSing === -1 then return("smooth complete intersection of type "|toString(toSequence degs)|" in PP^"|(toString n));
       if dimSing =!= null then if dimSing<k-3 then return("factorial complete intersection of type "|toString(toSequence degs)|" in PP^"|(toString n)); 
       return(singStr|"complete intersection of type "|toString(toSequence degs)|" in PP^"|(toString n));
  );
  if dimSing === -1 then return("smooth "|toString(k)|"-dimensional variety of degree "|toString(d)|" in PP^"|(toString n)|cutOut) else return(singStr|toString(k)|"-dimensional variety of degree "|toString(d)|" in PP^"|(toString n)|cutOut);
);

expressionVar (Ideal,ZZ,List) := (I,k,n) -> ( 
  I = trim I;  degs := degrees I; 
  try assert(isPolynomialRing ring I and isHomogeneous I and k == max(dim I - (#n),-1) and (sum n) + (#n) == numgens ring I) else error "internal error occurred";
  if k <= 0 or k >= sum n then return expressionVar(k,n);
  if # degs == 1 then return(expressionVar(k,n)|" defined by a multiform of degree "|toString(first degs));
  cutOut:=""; if #degs>1 then cutOut = if # unique degs == 1 then " cut out by "|toString(#degs)|" hypersurfaces of degree "|toString(first degs) else " cut out by "|toString(#degs)|" hypersurfaces of degrees "|toString(toSequence degs); 
  return(expressionVar(k,n)|cutOut);
);

expressionVar (Ideal) := (I) -> (
   k := max(dim I - (# multigens ring I),-1);
   n := apply(multigens ring I,g->(#g -1));
   if #n == 1 then n = first n;
   expressionVar(I,k,n)
);

imageInt = method()
imageInt (MutableHashTable) := (Phi) -> (
   if Phi#"idealImage" === null then setKeyValue(Phi,"idealImage",trim kernel Phi#"map");
   return Phi#"idealImage";
);
imageInt (MutableHashTable,ZZ) := (Phi,d) -> (
   if Phi#"idealImage" === null then return kernelComponent(Phi#"map",d) else return ideal image basis(d,Phi#"idealImage");
);
imageInt (ZZ,MutableHashTable) := (d,Phi) -> imageInt(Phi,d);

image (RationalMap) := (Phi) -> imageInt(Phi);

image (RationalMap,ZZ) := (Phi,d) -> imageInt(Phi,d);

image (ZZ,RationalMap) := (d,Phi) -> imageInt(d,Phi);

image (MultihomogeneousRationalMap) := (Phi) -> imageInt(Phi);

image (MultihomogeneousRationalMap,ZZ) := (Phi,d) -> imageInt(Phi,d);

image (ZZ,MultihomogeneousRationalMap) := (d,Phi) -> imageInt(d,Phi);

map (RationalMap) := o -> (Phi) -> Phi#"map";

map MultihomogeneousRationalMap := o -> (Phi) -> Phi#"map";

toMap (RationalMap) := o -> (Phi) -> (
    maps Phi; 
    if o.Dominant === null then return Phi#"map" else return toMap(Phi#"map",Dominant=>o.Dominant);
);

toMap (MultihomogeneousRationalMap) := o -> (Phi) -> (
    maps Phi; 
    if o.Dominant === null then return Phi#"map" else return toMap(Phi#"map",Dominant=>o.Dominant);
);

matrix (RationalMap) := o -> (Phi) -> toMatrix Phi#"map";

matrix (MultihomogeneousRationalMap) := o -> (Phi) -> toMatrix map Phi;

coefficients (RationalMap) := o -> (Phi) ->  ( -- matrix M s.t M * (transpose gens((ideal vars R)^d)) == transpose F
    if o.Variables =!= null then error "option not available";
    R:=ambient target Phi#"map";
    F:=lift(matrix Phi,R);
    d:=max flatten degrees ideal compress F;
    mons:=if o.Monomials === null then gens((ideal vars R)^d) else o.Monomials;
    M:=transpose sub(last coefficients(F,Monomials=>mons),coefficientRing R);
    if class mons === List then mons = matrix{mons}; assert(M * (transpose mons) - transpose F == 0);
    M
);

entries (RationalMap) := (Phi) -> flatten entries matrix Phi;

entries (MultihomogeneousRationalMap) := (Phi) -> flatten entries matrix Phi;

source (RationalMap) := (Phi) -> target Phi#"map";

source (MultihomogeneousRationalMap) := (Phi) -> target Phi#"map";

target (RationalMap) := (Phi) -> source Phi#"map";

target (MultihomogeneousRationalMap) := (Phi) -> source Phi#"map";

directImageInt = method()

directImageInt (MutableHashTable,Ideal) := (Phi,I) -> (
    if not (ring I === target Phi#"map" and isHomogeneous I) then error "expected homogeneous ideal in the coordinate ring of the source variety";
    trim preimage(Phi#"map",I)
);

RationalMap SPACE Ideal := (Phi,I) -> directImageInt(Phi,I);

MultihomogeneousRationalMap SPACE Ideal := (Phi,I) -> directImageInt(Phi,I);

RationalMap _* := (Phi) -> Ideal := (I) -> Phi(I);

MultihomogeneousRationalMap _* := (Phi) -> Ideal := (I) -> Phi(I);

inverseImageStrongInt = method() 

inverseImageStrongInt (MutableHashTable,Ideal) := (Phi,I) -> (
   if (ring I =!= target Phi and ring I === ambient target Phi) then return inverseImageStrongInt(Phi,sub(I,target Phi)); 
   Z := intersect apply(maps Phi,F -> inverseImage(F,I,MathMode=>true));
   if #(heft ambient ring Z) > 1 then Z = multisaturate Z;
   return Z;
);

RationalMap ^** Ideal := (Phi,I) -> inverseImageStrongInt(Phi,I);

MultihomogeneousRationalMap ^** Ideal := (Phi,I) -> inverseImageStrongInt(Phi,I);

inverseImageWeakInt = method() 

inverseImageWeakInt (MutableHashTable,Ideal) := (Phi,I) -> (
   if (ring I =!= target Phi and ring I === ambient target Phi) then return inverseImageWeakInt(Phi,sub(I,target Phi)); 
   Z := inverseImage(map Phi,I,MathMode=>false);
   if #(heft ambient ring Z) > 1 then Z = multisaturate Z;
   return Z;
);

RationalMap ^* := (Phi) -> Ideal := (I) -> inverseImageWeakInt(Phi,I);

MultihomogeneousRationalMap ^* := (Phi) -> Ideal := (I) -> inverseImageWeakInt(Phi,I);

RationalMap * RationalMap := (Phi,Psi) -> composeRationalMaps(Phi,Psi);

MultihomogeneousRationalMap * MultihomogeneousRationalMap := (Phi,Psi) -> composeRationalMaps(Phi,Psi);

MultihomogeneousRationalMap * RationalMap := (Phi,Psi) -> composeRationalMaps(Phi,Psi);

RationalMap * MultihomogeneousRationalMap := (Phi,Psi) -> composeRationalMaps(Phi,Psi);

RationalMap ^ ZZ := (Phi,j) -> (
   if j == 0 then (
         if (target Phi#"map" === source Phi#"map") then return rationalMap(target Phi#"map") else error "expected non-zero integer";
   );
   if j < 0 then (
         verb:=MathVerb; MathVerb=false; 
         Psi:=invertBirMap(Phi,MathMode=>true);
         MathVerb=verb;
         return(Psi^(-j))
   );
   Psi2:=Phi; for i from 1 to j-1 do Psi2 = Psi2 * Phi; 
   return Psi2;
);

inverse (RationalMap) := (Phi) -> Phi^(-1);

RationalMap ! := (Phi) -> (
   verb:=MathVerb; MathVerb=false; 
     toMap Phi;
     try Phi^(-1);
     degrees Phi;
     degree Phi;
     isDominant(Phi,MathMode=>true);
     isBirational(Phi,MathMode=>true);
     image Phi;
   MathVerb=verb;
     return Phi;
);

MultihomogeneousRationalMap ! := (Phi) -> (  
   verb:=MathVerb; MathVerb=false; 
     image Phi;
     isDominant(Phi,MathMode=>true);
     ideal Phi;
     graph Phi;
   MathVerb=verb;
     return Phi;
);

restrictionMapInt = method()

restrictionMapInt (MutableHashTable,Ideal) := (Phi,J) -> ( -- restriction of Phi to V(J)
    Pn1Pn2Pn3 := ambient source Phi;
    if not ((ring J === source Phi or ring J === Pn1Pn2Pn3) and isHomogeneous J) then error "expected homogeneous ideal in the coordinate ring of the source variety";
    rationalMap (map(Pn1Pn2Pn3/trim(lift(J,Pn1Pn2Pn3) + ideal source Phi),source Phi,vars Pn1Pn2Pn3) * map Phi) 
);

restrictionMapInt (MutableHashTable,RingElement) := (Phi,F) -> restrictionMapInt(Phi,ideal(F));

restrictionMapInt (MutableHashTable,Ring) := (Phi,S) -> (
    if not (ambient S === ambient source Phi and isSubset(ideal source Phi,ideal S) and isHomogeneous ideal S) then error "expected homogeneous coordinate ring of a subvariety of the source variety";
    Psi := restrictionMapInt(Phi,ideal(S));
    rationalMap (map(S,source Psi,vars ambient S) * map Psi)
);

RationalMap | Ideal := (Phi,J) -> restrictionMapInt(Phi,J);

RationalMap | RingElement := (Phi,F) -> restrictionMapInt(Phi,F);

RationalMap | Ring := (Phi,S) -> restrictionMapInt(Phi,S);

MultihomogeneousRationalMap | Ideal := (Phi,J) -> restrictionMapInt(Phi,J);

MultihomogeneousRationalMap | RingElement := (Phi,F) -> restrictionMapInt(Phi,F);

MultihomogeneousRationalMap | Ring := (Phi,S) -> restrictionMapInt(Phi,S);

restrictionMapInt2 = method()

restrictionMapInt2 (MutableHashTable,Ideal) := (Phi,J) -> ( -- restriction of Phi to Phi^(-1)(V(J)) ---> V(J)
    Pn1Pn2Pn3 := ambient source Phi;
    Pm := ambient target Phi;
    J':= trim(lift(Phi^* J,Pn1Pn2Pn3) + ideal source Phi);
    J  = trim(lift(J,Pm) + ideal target Phi);
    rationalMap map(Pn1Pn2Pn3/J',Pm/J,lift(matrix Phi,Pn1Pn2Pn3))
);

restrictionMapInt2 (MutableHashTable,RingElement) := (Phi,F) -> restrictionMapInt2(Phi,ideal(F));

restrictionMapInt2 (MutableHashTable,Ring) := (Phi,S) -> (
    if not (ambient S === ambient target Phi and isSubset(ideal target Phi,ideal S) and isHomogeneous ideal S) then error "expected homogeneous coordinate ring of a subvariety of the target variety";
    Psi := restrictionMapInt2(Phi,ideal(S));
    Psi * rationalMap(target Psi,S)
);

RationalMap || Ideal := (Phi,J) -> restrictionMapInt2(Phi,J);

RationalMap || RingElement := (Phi,F) -> restrictionMapInt2(Phi,F);

RationalMap || Ring := (Phi,S) -> restrictionMapInt2(Phi,S);

MultihomogeneousRationalMap || Ideal := (Phi,J) -> restrictionMapInt2(Phi,J);

MultihomogeneousRationalMap || RingElement := (Phi,F) -> restrictionMapInt2(Phi,F);

MultihomogeneousRationalMap || Ring := (Phi,S) -> restrictionMapInt2(Phi,S);

compareRationalMapsInt = method()

compareRationalMapsInt (MutableHashTable,MutableHashTable) := (Phi,Psi) -> ( 
   if not areEqualMaps(Phi#"map",Psi#"map") then return false;
           if Phi#"isDominant" =!= Psi#"isDominant" then (
                    if Phi#"isDominant" =!= null and Psi#"isDominant" =!= null then error("found a contradiction");
                    if Phi#"isDominant" === null then setKeyValue(Phi,"isDominant",Psi#"isDominant");
                    if Psi#"isDominant" === null then setKeyValue(Psi,"isDominant",Phi#"isDominant");
           );
           if Phi#"isBirational" =!= Psi#"isBirational" then (
                    if Phi#"isBirational" =!= null and Psi#"isBirational" =!= null then error("found a contradiction");
                    if Phi#"isBirational" === null then setKeyValue(Phi,"isBirational",Psi#"isBirational");
                    if Psi#"isBirational" === null then setKeyValue(Psi,"isBirational",Phi#"isBirational");
           );
           if Phi#"projectiveDegrees" =!= Psi#"projectiveDegrees" then (
                    if Phi#"projectiveDegrees" =!= {} and Psi#"projectiveDegrees" =!= {} then error("found a contradiction");
                    if Phi#"projectiveDegrees" === {} then setKeyValue(Phi,"projectiveDegrees",Psi#"projectiveDegrees");
                    if Psi#"projectiveDegrees" === {} then setKeyValue(Psi,"projectiveDegrees",Phi#"projectiveDegrees");
           );
           if Phi#"degree" =!= Psi#"degree" then (
                    if Phi#"degree" =!= null and Psi#"degree" =!= null then error("found a contradiction");
                    if Phi#"degree" === null then setKeyValue(Phi,"degree",Psi#"degree");
                    if Psi#"degree" === null then setKeyValue(Psi,"degree",Phi#"degree");
           );
           if Phi#"idealImage" =!= null and Psi#"idealImage" =!= null then (if Phi#"idealImage" != Psi#"idealImage" then error("found a contradiction"));
           if Phi#"idealImage" === null and Psi#"idealImage" =!= null then setKeyValue(Phi,"idealImage",Psi#"idealImage");
           if Phi#"idealImage" =!= null and Psi#"idealImage" === null then setKeyValue(Psi,"idealImage",Phi#"idealImage");
           if Phi#"maps" =!= null and Psi#"maps" =!= null then (if #(Phi#"maps") =!= #(Psi#"maps") then error("found a contradiction"));
           if Phi#"maps" === null and Psi#"maps" =!= null then setKeyValue(Phi,"maps",Psi#"maps");
           if Phi#"maps" =!= null and Psi#"maps" === null then setKeyValue(Psi,"maps",Phi#"maps");
           if class Phi === RationalMap and class Psi === RationalMap then (
              if Phi#"inverseRationalMap" === null and Psi#"inverseRationalMap" =!= null then Phi#"inverseRationalMap" = Psi#"inverseRationalMap";
              if Phi#"inverseRationalMap" =!= null and Psi#"inverseRationalMap" === null then Psi#"inverseRationalMap" = Phi#"inverseRationalMap";
           );
           if class Phi === MultihomogeneousRationalMap and class Psi === MultihomogeneousRationalMap then (
              if Phi#"graph" === null and Psi#"graph" =!= null then Phi#"graph" = Psi#"graph";
              if Phi#"graph" =!= null and Psi#"graph" === null then Psi#"graph" = Phi#"graph";
              if Phi#"baseLocus" === null and Psi#"baseLocus" =!= null then Phi#"baseLocus" = Psi#"baseLocus";
              if Phi#"baseLocus" =!= null and Psi#"baseLocus" === null then Psi#"baseLocus" = Phi#"baseLocus";
           );
   return true;
);

RationalMap == RationalMap := (Phi,Psi) -> compareRationalMapsInt(Phi,Psi);

MultihomogeneousRationalMap == MultihomogeneousRationalMap := (Phi,Psi) -> compareRationalMapsInt(Phi,Psi); 

MultihomogeneousRationalMap == RationalMap := (Phi,Psi) -> compareRationalMapsInt(Phi,Psi);

RationalMap == MultihomogeneousRationalMap := (Phi,Psi) -> compareRationalMapsInt(Phi,Psi);

RationalMap == ZZ := (Phi,n) -> (
    if n == 1 then return compareRationalMapsInt(Phi,rationalMap(target Phi#"map")) else error "encountered integer other than 1 in comparison with a rational map";
);

ZZ == RationalMap := (n,Phi) -> Phi == n;

degreesInt = method()

degreesInt (MutableHashTable) := (Phi) -> (
   if Phi#"projectiveDegrees" =!= {} then return Phi#"projectiveDegrees";
   verb:=MathVerb; MathVerb=false; 
   d:=projectiveDegrees(Phi,MathMode=>true);
   MathVerb=verb;
   return d;
);

degrees (RationalMap) := (Phi) -> degreesInt(Phi);

degrees (MultihomogeneousRationalMap) := (Phi) -> degreesInt(Phi);

multidegree (RationalMap) := (Phi) -> degreesInt(Phi);

multidegree (MultihomogeneousRationalMap) := (Phi) -> degreesInt(Phi);

degreeInt = method()

degreeInt (MutableHashTable) := (Phi) -> (
   if Phi#"degree" =!= null then return Phi#"degree";
          verb:=MathVerb; MathVerb=false; 
   pr0:=first projectiveDegrees(Phi,OnlySublist=>0,MathMode=>true);
          MathVerb=verb;
   if Phi#"degree" =!= null then return Phi#"degree";
   if (pr0 == 0 or pr0 == 1) then (
           setKeyValue(Phi,"degree",pr0); 
           return Phi#"degree";
   );
   if isPrime pr0 then (
         f := rationalMap Phi;
         setKeyValue(Phi,"degree",if dim image(f,1) - 1 > f#"dimTarget" then 1 else pr0);
         return Phi#"degree";
   );
   d := degree (lift(image Phi,ambient target Phi) + ideal target Phi);
   setKeyValue(Phi,"degree",lift(pr0/d,ZZ));  
   return Phi#"degree";
);

degree (RationalMap) := (Phi) -> degreeInt(Phi);

degree (MultihomogeneousRationalMap) := (Phi) -> try return degreeInt(Phi) else error "not implemented yet: option MathMode=>true for degreeOfRationalMap(MultihomogeneousRationalMap)"; 

ideal (RationalMap) := (Phi) -> (
    trim sum apply(maps Phi,F -> ideal toMatrix F)
);
ideal (MultihomogeneousRationalMap) := (Phi) -> (
    if Phi#"baseLocus" === null then Phi#"baseLocus" = multisaturate sum apply(maps Phi,F -> ideal toMatrix F);
    return Phi#"baseLocus";
);

isDominant (RationalMap) := o -> (Phi) -> (
   if Phi#"isDominant" =!= null then return Phi#"isDominant";
   isD:=isDominant(Phi#"map",MathMode=>o.MathMode);
   if o.MathMode == false then return isD;
   setKeyValue(Phi,"isDominant",isD);
   return Phi#"isDominant";
);

isDominant (MultihomogeneousRationalMap) := o -> (Phi) -> ( -- to be improvement
   if Phi#"isDominant" =!= null then return Phi#"isDominant";
   if Phi#"dimTarget" < Phi#"dimSource" then (
          setKeyValue(Phi,"isDominant",false);
          if MathVerb and o.MathMode then <<certificate; 
          return Phi#"isDominant";
   ); 
   setKeyValue(Phi,"isDominant",image Phi == 0); 
   if o.MathMode and MathVerb then <<certificate;
   return Phi#"isDominant";
);

isBirationalInt = method(Options => {MathMode => false});

isBirationalInt (MutableHashTable) := o -> (Phi) -> (
   if Phi#"isBirational" =!= null then return Phi#"isBirational";
   if Phi#"dimTarget" != Phi#"dimSource" then (
          setKeyValue(Phi,"isBirational",false);
          if MathVerb and o.MathMode then <<certificate; 
          return Phi#"isBirational";
   );
   if o.MathMode then (
         verb:=MathVerb; MathVerb=false; isDom:=isDominant(Phi,MathMode=>true); MathVerb=verb;
         if not isDom then (if MathVerb then <<certificate; setKeyValue(Phi,"isBirational",false); return Phi#"isBirational");      
   );
   isB:=first projectiveDegrees(Phi,OnlySublist=>0,MathMode=>o.MathMode) == degree source Phi#"map";
   if o.MathMode then (setKeyValue(Phi,"isBirational",isB); return Phi#"isBirational") else return isB;
);

isBirational (RationalMap) := o -> (Phi) -> isBirationalInt(Phi,MathMode=>o.MathMode);

isBirational (MultihomogeneousRationalMap) := o -> (Phi) -> isBirationalInt(Phi,MathMode=>o.MathMode);

invertBirMap (RationalMap) := o -> (Phi) -> (
    if Phi#"inverseRationalMap" =!= null then return Phi#"inverseRationalMap";
    if Phi#"isBirational" === false then error "expected a birational map";
    Psi := new RationalMap from {
            "map" => invertBirMap(Phi#"map",MathMode=>o.MathMode),
            "maps" => null,
            "isDominant" => if o.MathMode then true else null,
            "idealImage" => if o.MathMode then trim ideal(0_(target Phi#"map")) else null,
            "isBirational" => if o.MathMode then true else null,
            "inverseRationalMap" => if o.MathMode then Phi else null,
            "projectiveDegrees" => if o.MathMode then reverse Phi#"projectiveDegrees" else {},
            "degree" => if o.MathMode then 1 else null,
            "dimAmbientTarget" => Phi#"dimAmbientSource",
            "dimTarget" => Phi#"dimSource",
            "dimAmbientSource" => Phi#"dimAmbientTarget",
            "dimSource" => Phi#"dimTarget"
           };
    if o.MathMode == true then (     
         if Phi#"isBirational" =!= true then setKeyValue(Phi,"isBirational",true);  
         if Phi#"isDominant" =!= true then setKeyValue(Phi,"isDominant",true); 
         if Phi#"degree" =!= 1 then setKeyValue(Phi,"degree",1);
         if Phi#"idealImage" === null then setKeyValue(Phi,"idealImage",trim ideal(0_(source Phi#"map")));        
         setKeyValue(Phi,"inverseRationalMap",Psi);
         return Phi#"inverseRationalMap";
    ) else return Psi;
);

approximateInverseMap (RationalMap,ZZ) := o -> (Phi,d) -> (
    if Phi#"inverseRationalMap" =!= null then return Phi#"inverseRationalMap";
    Psi := rationalMap approximateInverseMap(Phi#"map",d,CodimBsInv=>o.CodimBsInv,MathMode=>o.MathMode);
         if o.MathMode == false then return Psi;
    setKeyValue(Psi,"isBirational",true);
    if Phi#"projectiveDegrees" =!= {} then setKeyValue(Psi,"projectiveDegrees",reverse Phi#"projectiveDegrees"); 
    setKeyValue(Psi,"inverseRationalMap",Phi);
         if Phi#"isBirational" =!= true then setKeyValue(Phi,"isBirational",true);  
         if Phi#"isDominant" =!= true then setKeyValue(Phi,"isDominant",true); 
         if Phi#"degree" =!= 1 then setKeyValue(Phi,"degree",1);
         if Phi#"idealImage" === null then setKeyValue(Phi,"idealImage",trim ideal(0_(source Phi#"map")));        
         setKeyValue(Phi,"inverseRationalMap",Psi);       
    return Phi#"inverseRationalMap";
);

approximateInverseMap (RationalMap) := o -> (Phi) -> approximateInverseMap(Phi,-1,CodimBsInv=>o.CodimBsInv,MathMode=>o.MathMode);

isInverseMap (RationalMap,RationalMap) := (Phi,Psi) -> (
   if (source Phi =!= target Psi or target Phi =!= source Psi) then return false;
   if Phi#"inverseRationalMap" =!= null then return (Phi^(-1) == Psi);
   if Psi#"inverseRationalMap" =!= null then return (Phi == Psi^(-1));
   if (try( Phi * Psi == 1 and Psi * Phi == 1) else false) then(
        if Phi#"isBirational" =!= true then setKeyValue(Phi,"isBirational",true);  
        setKeyValue(Phi,"inverseRationalMap",Psi);
        if Psi#"isBirational" =!= true then setKeyValue(Psi,"isBirational",true);  
        setKeyValue(Psi,"inverseRationalMap",Phi);
        return true;
   ) else return false;
);

composeRationalMapsInt = method()

composeRationalMapsInt (MutableHashTable,MutableHashTable) := (Phi,Psi) -> (
    if target Phi === source Psi then (     
        Eta:=rationalMap(composeRationalMaps(map Phi,map Psi),Dominant=>"notSimplify");
        if Phi#"isDominant" === true then (
            if Psi#"isDominant" === true then setKeyValue(Eta,"isDominant",true);
            if Phi#"degree" =!= null and Psi#"degree" =!= null then setKeyValue(Eta,"degree",(Phi#"degree")*(Psi#"degree"));  
        );
        return Eta;
    );
    if ambient target Phi === ambient source Psi then try return composeRationalMapsInt(Phi,restrictionMapInt(Psi,target Phi));
    error "rational maps not composable: incompatible target and source";
);

composeRationalMaps (RationalMap,RationalMap) := (Phi,Psi) -> composeRationalMapsInt(Phi,Psi);

composeRationalMaps (MultihomogeneousRationalMap,MultihomogeneousRationalMap) := (Phi,Psi) -> composeRationalMapsInt(Phi,Psi);

composeRationalMaps (MultihomogeneousRationalMap,RationalMap) := (Phi,Psi) -> composeRationalMapsInt(Phi,Psi);

composeRationalMaps (RationalMap,MultihomogeneousRationalMap) := (Phi,Psi) -> composeRationalMapsInt(Phi,Psi);

areEqualMaps = method(TypicalValue => Boolean)
areEqualMaps (RingMap,RingMap) := (phi,psi) -> (
   if (target phi =!= target psi or source phi =!= source psi) then (
      areIso:=try ( ( sub(ideal target phi,vars ambient target psi) == ideal target psi ) and 
                    ( sub(ideal source phi,vars ambient source psi) == ideal source psi ) and 
                    ( minors(2,sub(toMatrix phi,vars ring toMatrix psi)||(toMatrix psi)) == 0 ) and 
                    ( sub(toMatrix phi,vars ring toMatrix psi) != 0 )
                  ) else false; 
      if areIso then error "expected maps with the same source and target; however the input maps are isomorphic" else error "expected maps with the same source and target";
   );
   minors(2,(toMatrix phi)||(toMatrix psi)) == 0 
);

maps = method(TypicalValue => List) -- Simis, Cremona Transformations and some Related Algebras, prop. 1.1

maps (RingMap) := (phi) -> (
   checkMultihomogeneousRationalMap phi;
   T:=entries transpose mingens kernel transpose syz toMatrix phi;
   Phi:=apply(T,t -> map(target phi,source phi,t));
   Phi
);

maps (RationalMap) := (Phi) -> mapsInt(Phi);

maps (MultihomogeneousRationalMap) := (Phi) -> mapsInt(Phi);

mapsInt = method()

mapsInt (MutableHashTable) := (Phi) -> (
   if Phi#"maps" === null then (
            if (isPolynomialRing source Phi) then (
                 if codim ideal matrix Phi > 1 then (
                       setKeyValue(Phi,"maps",{Phi#"map"});
                 ) else (
                       setKeyValue(Phi,"maps",{composeRationalMaps(map(source Phi,source Phi,vars source Phi),map Phi)});
                       setKeyValue(Phi,"map",first Phi#"maps");
                 );
            ) else (
                 setKeyValue(Phi,"maps",maps Phi#"map");
                 try apply(Phi#"maps",F -> checkMultihomogeneousRationalMap F) else error "internal error occurred";
                 setKeyValue(Phi,"map",first Phi#"maps");
            );
   );
   Phi#"maps"
);

projectiveDegrees (RationalMap) := o -> (Phi) -> (
    if o.OnlySublist < 0 then return {};
    ll:={(Phi#"dimTarget" - min(Phi#"dimTarget",o.OnlySublist)) .. Phi#"dimTarget"};
    if o.MathMode == false then (if Phi#"projectiveDegrees" === {} then return projectiveDegrees(Phi#"map",MathMode=>false,OnlySublist=>o.OnlySublist) else return (Phi#"projectiveDegrees")_ll);
    if Phi#"projectiveDegrees" === {} then setKeyValue(Phi,"projectiveDegrees",projectiveDegrees(Phi#"map",MathMode=>true,OnlySublist=>infinity));
    return (Phi#"projectiveDegrees")_ll;
);

projectiveDegrees (RationalMap,ZZ) := o -> (Phi,i) -> projectiveDegrees(map Phi,i,MathMode=>o.MathMode,OnlySublist=>o.OnlySublist); 

projectiveDegrees (MultihomogeneousRationalMap) := o -> (Phi) -> (
   if o.OnlySublist < 0 then return {};
   ll := {(Phi#"dimTarget" - min(Phi#"dimTarget",o.OnlySublist)) .. Phi#"dimTarget"};
   if Phi#"projectiveDegrees" =!= {} then return (Phi#"projectiveDegrees")_ll;
   if o.MathMode === true then error "not implemented yet: option MathMode=>true for projectiveDegrees(MultihomogeneousRationalMap)"; 
   apply(deepSplice ll,j -> projectiveDegrees(Phi,Phi#"dimTarget" - j))
);

projectiveDegrees (MultihomogeneousRationalMap,ZZ) := o -> (Phi,i) -> ( 
   if o.MathMode === true then error "not implemented yet: option MathMode=>true for projectiveDegrees(MultihomogeneousRationalMap,ZZ)"; 
   m := Phi#"dimAmbientSource"; 
   n := Phi#"dimAmbientTarget";  
   k := Phi#"dimTarget"; 
   if i < 0 or i > k then error("integer out of range"); 
   if #n =!= 2 and i =!= 0 then error "not implemented yet: projective degrees of a rational map with source a subvariety of a product of more than two projective spaces";
   L := sub(randomLinearSubspace(ambient target Phi,m-k+i),target Phi);
   Z := Phi^* L; 
   Z = trim(lift(Z,ambient source Phi) + ideal source Phi);
   (dimZ,degZ) := DimDegreeSegreEmbedding(Z,n);
   if dimZ == i then degZ else 0
);

degreeOfRationalMap (RationalMap) := o -> (Phi) -> (
   if o.MathMode == false then return degreeOfRationalMap(Phi#"map",MathMode=>false);
   d:=degree Phi;
   if MathVerb then <<certificate;
   return d;
);

degreeOfRationalMap (MultihomogeneousRationalMap) := o -> (Phi) -> (
   if Phi#"degree" =!= null then return Phi#"degree";
   if o.MathMode === true then error "not implemented yet: option MathMode=>true for degreeOfRationalMap(MultihomogeneousRationalMap)"; 
   pr0 := projectiveDegrees(Phi,0);
   if (pr0 == 0 or pr0 == 1) then return pr0;
   if isPrime pr0 then (
         f := rationalMap Phi;
         if dim image(f,1) - 1 > f#"dimTarget" then return 1 else return pr0;
   );
   d := degree (lift(image Phi,ambient target Phi) + ideal target Phi);
   try return lift(pr0/d,ZZ) else error "internal error occurred";
);

kernel (RationalMap) := o -> (Phi) -> ( -- undocumented
   if o.SubringLimit === infinity then return image(Phi) else return kernel(map Phi,SubringLimit=>o.SubringLimit);
);

kernel (MultihomogeneousRationalMap) := o -> (Phi) -> ( -- undocumented
   if o.SubringLimit === infinity then return image(Phi) else return kernel(map Phi,SubringLimit=>o.SubringLimit);
);

kernel (RationalMap,ZZ) := o -> (Phi,d) -> ( -- undocumented
   return image(Phi,d);   
);

kernel (MultihomogeneousRationalMap,ZZ) := o -> (Phi,d) -> ( -- undocumented
   return image(Phi,d);   
);

kernel (ZZ,RationalMap) := o -> (d,Phi) -> ( -- undocumented
   return image(d,Phi);   
);

kernel (ZZ,MultihomogeneousRationalMap) := o -> (d,Phi) -> ( -- undocumented
   return image(d,Phi);   
);

parametrize (Ideal) := (L) -> (
   if not (isPolynomialRing ring L) then error "expected homogeneous ideal in a polynomial ring";
   K:=coefficientRing ring L; t:=local t; local T;
   if not isField K then error "the coefficient ring needs to be a field";
   if dim L -1 < 0 then (T=K[t]/ideal(t); return rationalMap map(T,ring L,toList((numgens ring L):(first gens T))));
   if L == 0 then return rationalMap(ring L);
   if unique degrees L == {{1}} then (
       N:=mingens kernel transpose sub(last coefficients(gens L,Monomials=>gens ring L),K);
       T=K[t_0..t_(numgens source N -1)];
       return rationalMap map(T,ring L,(vars T)*transpose(N));
    );
    if degree L == 2 and codim L == 1 and numgens L == 1 and isHomogeneous L then (
        try(
            f:=rationalMap((rationalMap sub(gens randomKRationalPoint L,(ring L)/L))^(-1));
            assert(image f == L);
            return f;
           );
    );
    error "method not available for the given ideal";
);

parametrize (QuotientRing) := (R) -> (
   if not (isPolynomialRing(ambient R) and isHomogeneous(ideal R)) then error "expected coordinate ring of a projective variety";
   f:=rationalMap(parametrize ideal R,Dominant=>true);
   f * rationalMap(target f,R)
);

flatten (RationalMap) := (Phi) -> (
    Pn := ambient source Phi;
    X := source Phi;
    Pm := ambient target Phi;
    Y := target Phi;  
    f := parametrize ideal image basis(1,ideal X);
    f':= f||X; 
    g := inverse rationalMap(parametrize ideal image basis(1,ideal Y),Dominant=>1);
    g':= rationalMap(g|Y,Dominant=>true); 
    f' * Phi * g'
);

flatten (MultihomogeneousRationalMap) := (Phi) -> (
    g := inverse rationalMap(parametrize ideal image basis(1,ideal target Phi),Dominant=>1);
    g':= rationalMap(g|(target Phi),Dominant=>true); 
    Phi * g'
);

lift (RationalMap) := o -> (Phi) -> lift multihomogeneousRationalMap Phi;

lift (MultihomogeneousRationalMap) := o -> (Phi) -> (
   Psi := rationalMap Phi;
   if isPolynomialRing source Psi then return Psi;
   F := lift(matrix Psi,ambient source Psi) | gens(ideal source Psi);
   try return rationalMap(F) else error "cannot lift given rational map";
);

graph (RationalMap) := (Phi) -> graph multihomogeneousRationalMap Phi;

graph (MultihomogeneousRationalMap) := (Phi) -> (
  if Phi#"graph" =!= null then return Phi#"graph";
  phi := map Phi;
  R := (ambient target phi)**(ambient source phi); 
  degs := apply(degrees ambient target phi,d -> append(d,0)) | toList((numgens ambient source phi):append(toList(#(heft ambient target phi):0),1));
  R = newRing(R,Degrees=>degs);
  bl := sub(GraphIdeal phi,vars R);
     if not isHomogeneous bl then error "internal error occurred";
  -- bl = multisaturate bl; -- ??
  Z := R/bl;
  gg := multigens Z;
  p2 := rationalMap(map(Z,source phi,last gg),Dominant=>"notSimplify");
  if Phi#"isDominant" =!= null then setKeyValue(p2,"isDominant",Phi#"isDominant");
  if Phi#"degree" =!= null then setKeyValue(p2,"degree",Phi#"degree");
  if Phi#"isBirational" =!= null then setKeyValue(p2,"isBirational",Phi#"isBirational");
  if #gg == 2 then (
       p1 := rationalMap(map(Z,target phi,first gg),Dominant=>"notSimplify");
       setKeyValue(p1,"isDominant",true);
       setKeyValue(p1,"degree",1);
       setKeyValue(p1,"isBirational",true);
       Phi#"graph" = (p1,p2);
       return Phi#"graph";
  );
  Phi#"graph" = toSequence append(for i to #gg -2 list rationalMap(gg_i,Dominant=>"notSimplify"),p2);
  return Phi#"graph";
);

multigens = method()
multigens (PolynomialRing) := (R) -> (
   gR := gens R;
   apply(entries diagonalMatrix toList((# heft R):1), d -> select(gR, u -> degree u == d))
);
multigens (QuotientRing) := (R) -> (
   apply(multigens ambient R,U -> flatten entries sub(matrix{U},R))
);

multisaturate = method()
multisaturate (Ideal) := (I) -> (
  gg := multigens ring I;
  for i to #gg -1 do I = saturate(I,ideal(gg_i));
  return I;
);

DimDegreeSegreEmbedding = method(); 
DimDegreeSegreEmbedding (Ideal,List) := (W,li) -> ( -- W multisaturated ideal in P^n1 x P^n2 x ..., li = {n1,n2,...}
   r := (dim W) - (# li);
   if r <= -1 then return (-1,0);
   if (#li =!= 2 and r =!= 0) then error "not implemented yet";
   mdeg := multidegree W;
   T := gens ring mdeg;
         assert((sum li) - r == first degree mdeg and #T == #li and heft(ring W) == toList(#li : 1));
   if #li == 2 then (
       mons := matrix{for i to r list T_0^((li_0)-r+i) * T_1^((li_1)-i)};
       d := reverse flatten entries sub(last coefficients(mdeg,Monomials=>mons),ZZ);
       return (r,sum(r+1,j -> binomial(r,j) * d_j)); -- [Harris, Exercise 19.2]
   );
   if r == 0 then (
       mon := product apply(#li,i -> T_i^(li_i));
       d0 := coefficient(mon,mdeg);
         assert(d0*mon == mdeg and class d0 === ZZ);
      return (r,d0);
   );
);

---------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------
------------------------ end RationalMap ----------------------------------------------
---------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------

---------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------
----------------------------- Examples ------------------------------------------------
---------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------

Examples = (K,jj) -> (
   x:=local x; C:=local C; P:=local P; D:=local D; T:=local T;  
   P_3=K[x_0..x_3]; P_4=K[x_0..x_4]; P_5=K[x_0..x_5]; P_6=K[x_0..x_6]; P_8=K[x_0..x_8]; 
   x=gens P_3;
   C_1=ideal(75329115807229131381158016*x_1^3-11967753644395438365055888*x_0^2*x_2-119442963704742049489074188*x_0*x_1*x_2+56435766310910568301246296*x_1^2*x_2-26928504245283719033026288*x_0*x_2^2-4229778836483737520847864*x_1*x_2^2-4183840450066532437152264*x_2^3-86117700671359196742788480*x_0^2*x_3-437408375558255356567471992*x_0*x_1*x_3+53941222005731976701435972*x_1^2*x_3-160511127373808149226512616*x_0*x_2*x_3-4084385603101313391682136*x_1*x_2*x_3-6847878146568024538314216*x_2^2*x_3-230883509474766725692841540*x_0*x_3^2-14949565595581908439849915*x_1*x_3^2-20703156179231046480119606*x_2*x_3^2-11968831356327657119946060*x_3^3,
   6277426317269094281763168*x_0*x_1^2-4638441886765459595663120*x_0^2*x_2+5229854103163117630186292*x_0*x_1*x_2-1759410825773888765557800*x_1^2*x_2+33525701134134230333200*x_0*x_2^2-503727834604996431161760*x_1*x_2^2+136459177946738817529800*x_2^3+4007818254766611705072800*x_0^2*x_3+27525038333235389620496928*x_0*x_1*x_3-5339961072096876280178900*x_1^2*x_3+9220090761779278584013160*x_0*x_2*x_3-3514708477272347612574100*x_1*x_2*x_3-464708402277505252592040*x_2^2*x_3+15550614038246695911501620*x_0*x_3^2-1349407651964273799504545*x_1*x_3^2+300582583776873696370190*x_2*x_3^2+757533002141936043287100*x_3^3,
   523118859772424523480264*x_0^2*x_1+2495994000190693293530120*x_0^2*x_2+1147666188416756649230716*x_0*x_1*x_2-255547335424049058426120*x_1^2*x_2+340059974024659433806310*x_0*x_2^2-181399390821728433531240*x_1*x_2^2-58573226786504787947730*x_2^3+129809627997540789939760*x_0^2*x_3-1687197874538499604376438*x_0*x_1*x_3+442634943501041288493020*x_1^2*x_3-581730707928315939631820*x_0*x_2*x_3+348962581221086992747420*x_1*x_2*x_3+42076455906742699081185*x_2^2*x_3-1862078571868955770483120*x_0*x_3^2+108958448720167891575995*x_1*x_3^2-80443940800241939761010*x_2*x_3^2-95685404861183380855800*x_3^3,
   2092475439089698093921056*x_0^3-48270594354035751075086184*x_0^2*x_2-30430049026264584620183400*x_0*x_1*x_2+7466256996292957193281440*x_1^2*x_2-7843343199212466501533922*x_0*x_2^2+4034778205719043250499780*x_1*x_2^2+1019598677783236290353670*x_2^3-3384448856967564903117608*x_0^2*x_3+4460467963233958416948480*x_0*x_1*x_3-3548093355370411652938560*x_1^2*x_3+1103647907747740848767512*x_0*x_2*x_3-4344906420574595886570840*x_1*x_2*x_3-655517447833025712873855*x_2^2*x_3+20875257213655822144225252*x_0*x_3^2-1101745348236837254383200*x_1*x_3^2+1095161684154834810212040*x_2*x_3^2+1100050085212216419255420*x_3^3);
   D_1={1, 3, 3, 1};
   T_1="Cubo-cubic Cremona transformation of P^3,      dim(B)=1, deg(B)=6, g(B)=3 ";
   x=gens P_4;
   C_2=ideal(94160*x_2^2-94160*x_1*x_3+32412*x_0*x_4+5141*x_1*x_4+20425*x_2*x_4+6922*x_3*x_4+135000*x_4^2,
   23540*x_1*x_2-23540*x_0*x_3+14332*x_0*x_4+17801*x_1*x_4+97255*x_2*x_4+11962*x_3*x_4+77160*x_4^2,
   1177*x_1^2-1177*x_0*x_2+168*x_0*x_4+299*x_1*x_4+10*x_2*x_4-26*x_3*x_4-150*x_4^2,
   381489240*x_0*x_1-614240990*x_0*x_2-439480030*x_0*x_3-4215755060*x_1*x_3-553754960*x_2*x_3-24481600*x_3^2+1931359964*x_0*x_4+2275530877*x_1*x_4-170734390*x_2*x_4+500405414*x_3*x_4+8531477820*x_4^2,
   1124075386080*x_0^2-4209074661590*x_0*x_2-14506927030030*x_0*x_3-21632355916340*x_1*x_3-2699300701520*x_2*x_3-116147387200*x_3^2+21896801562428*x_0*x_4+10292662439029*x_1*x_4+51101455755170*x_2*x_4+8751733227158*x_3*x_4+81624907346940*x_4^2);
   D_2={1, 2, 4, 3, 1};
   T_2="quadro-cubic Cremona transformation of P^4,    dim(B)=1, deg(B)=5, g(B)=1 ";
   x=gens P_4;
   C_3=ideal(46219784506597189805673048840*x_1^2*x_2-2567765805922066100315169380*x_0*x_2^2-113809181136222719733250050*x_0^2*x_3+123146046656175770372793240*x_0*x_1*x_3+350223654908127628697670090*x_1^2*x_3-16038188058539219338521405*x_0*x_2*x_3-107873181687809625341494770*x_1*x_2*x_3+3361800604814326261259568*x_2^2*x_3+9890968947271114389570*x_0*x_3^2-824057937748529344748970*x_1*x_3^2+80715497579312855674365*x_2*x_3^2+491795739614019240504*x_3^3+1361044513043957948950*x_0^2*x_4-1528517063004861361410*x_0*x_1*x_4-4167662787524528460000*x_1^2*x_4+192987073317016900000*x_0*x_2*x_4+1282141965503122189830*x_1*x_2*x_4-41336422256653576157*x_2^2*x_4-320957670494269260*x_0*x_3*x_4+19759277719573505550*x_1*x_3*x_4-1930869150829473960*x_2*x_3*x_4-17644014849164688*x_3^2*x_4+2436258717770*x_0*x_4^2-118488756397680*x_1*x_4^2+11550374410000*x_2*x_4^2+211004853552*x_3*x_4^2-841136*x_4^3,
   46219784506597189805673048840*x_1^3-2567765805922066100315169380*x_0*x_1*x_2-259278979734873989274975*x_0^2*x_3-51906937161180806318357280*x_0*x_1*x_3-80660666755286677160305650*x_1^2*x_3+2428272606479923453284825*x_0*x_2*x_3+6740504137457923353437385*x_1*x_2*x_3-346581172660638845646108*x_2^2*x_3+32696852424812757526680*x_0*x_3^2+87187559571171841522410*x_1*x_3^2-8317222826421127123575*x_2*x_3^2-50701539168684371754*x_3^3+623089578014688381520*x_0*x_1*x_4+931156075985963235030*x_1^2*x_4-27620206434759149435*x_0*x_2*x_4-81742353117386150000*x_1*x_2*x_4+4144765814714823732*x_2^2*x_4-767961377297678760*x_0*x_3*x_4-2068275856194453150*x_1*x_3*x_4+199072171065642630*x_2*x_3*x_4+1818990498159828*x_3^2*x_4+4505337665710*x_0*x_4^2+12274884017620*x_1*x_4^2-1190773272500*x_2*x_4^2-21753315612*x_3*x_4^2+86716*x_4^3,
   51990758725081203380959560*x_0*x_1^2-2888375484726733521164420*x_0^2*x_2-58715545176246605632965*x_0^2*x_3-44117571527873783107920*x_0*x_1*x_3-66957811979842604225646*x_1^2*x_3+11483744177043071978247*x_0*x_2*x_3-6861540124825699916673*x_1*x_2*x_3-15986953856757177252*x_2^2*x_3+117251096384613782376*x_0*x_3^2+4841748455769972126*x_1*x_3^2-377016478698755133*x_2*x_3^2-2336923900522206*x_3^3+700888164245993680*x_0^2*x_4+488180382632506800*x_0*x_1*x_4+836957930955865434*x_1^2*x_4-138446316506231413*x_0*x_2*x_4+83921017620772584*x_1*x_2*x_4-2828639033952408*x_0*x_3*x_4-84323068938234*x_1*x_3*x_4+9130410678690*x_2*x_3*x_4+83905645932*x_3^2*x_4+17064121466*x_0*x_4^2+291625020*x_1*x_4^2-54927500*x_2*x_4^2-1003428*x_3*x_4^2+4*x_4^3,
   6190878118264571693700870029371746958923400*x_0^2*x_1-386258198842497770470072457150796336802540*x_0^2*x_2-3009547731660846207146818846978304445651840*x_0*x_1*x_2+214328480092114258936992445177119834285220*x_0*x_2^2+183791338796383195242027011326673292904356*x_1*x_2^2-18852976329379092242235915188828553842544*x_2^3-4027142988894510633545975285926369564455*x_0^2*x_3-31561660636895073780403867819357154605800*x_0*x_1*x_3-8264674220246177243689478585775451735962*x_1^2*x_3+4772792252851647325050335433433096633569*x_0*x_2*x_3+5701169067508691433656478845192543041989*x_1*x_2*x_3-705015747836002598432134419579638493720*x_2^2*x_3+28267661557216663057796073018541497432*x_0*x_3^2+36201126732576827380160355193037260410*x_1*x_3^2-8819897682072891733289027745826340583*x_2*x_3^2-36950254595508652079735624873751450*x_3^3+46716171570361567482980674697844160*x_0^2*x_4+384723882865381060023019270687106840*x_0*x_1*x_4+98837276459251811713719113906832798*x_1^2*x_4-57001850204444095044157232888683951*x_0*x_2*x_4-69886811843347542301635782769737832*x_1*x_2*x_4+8544185051215520459656625373758680*x_2^2*x_4-676474930583192655788629902419736*x_0*x_3*x_4-879298874818488121634909512417422*x_1*x_3*x_4+213282472035713328904804912709766*x_2*x_3*x_4+1339348843990594188627785682948*x_3^2*x_4+4045679884084152539783548142*x_0*x_4^2+5340337318843752041855791828*x_1*x_4^2-1289149196020855292929509972*x_2*x_4^2-16181029317013575543095004*x_3*x_4^2+65155764990392668588*x_4^3,
   52241680784846541572850343616516107117545031996384602667000*x_0^3-29056548295475026877860296734472513463153250173823317396860*x_0^2*x_2+4034011860378448208959987075905245895637892957901888472440*x_0*x_1*x_2+3582075343310278672892362140021521537012036168811741842160*x_0*x_2^2-1121874402597206955303097976999340876839812056947714649036*x_1*x_2^2-178666352581577914435487709131580058157094198791172736176*x_2^3-290148872013439926420162522916056124403910485599765631445*x_0^2*x_3+26466508771846257598621779239940312751786739585893236960*x_0*x_1*x_3-75462954046874367617826849348471333951129818415039474888*x_1^2*x_3+80404017867289927180058934678070583259238411193831886816*x_0*x_2*x_3-30956660815463395920480413758484175585779793519090434889*x_1*x_2*x_3-4653224539260084420015066736669399419275847672961785288*x_2^2*x_3+400761643412225389856754845656703253926132230368107898*x_0*x_3^2-141645167263499624317772163968844665078039636880643080*x_1*x_3^2-34935149710583553164513007108826578749765927692703022*x_2*x_3^2-53874287633047042811312227918676809364380180070634*x_3^3+3533782586924887297828175621917306348466891508843390*x_0^2*x_4-344459684235729628509562149306393844279056052970730*x_0*x_1*x_4+936663547206244045754426467795723132859807460471942*x_1^2*x_4-985866196435762332862069792498778681870755420908219*x_0*x_2*x_4+378202107865215812430656451803472813180715016564142*x_1*x_2*x_4+57304016772646529186181059431979187509376135461787*x_2^2*x_4-9812403752302214986911875958002984773504575126804*x_0*x_3*x_4+3506251127042297809591765246861142686282426525272*x_1*x_3*x_4+867651851804744920461568389664591702889279569014*x_2*x_3*x_4+2053341019929259004065350404909367925839084660*x_3^2*x_4+60064151341520826157212719853156461161521888*x_0*x_4^2-21708154761602719108989781371519350805312108*x_1*x_4^2-5385494816713855160048096734640239391678148*x_2*x_4^2-26051084268173636852988062966162828016828*x_3*x_4^2+110034475065520765101392674607486668*x_4^3);
   D_3={1, 3, 4, 2, 1};
   T_3="Cubo-quadric Cremona transformation of P^4,    dim(B)=2, deg(B)=5, g(B)=1 ";
   x=gens P_4;
   C_4=ideal(1046027171235989227435862345303675488819459200*x_1^4+19475647722205134148807816838558657307173481600*x_0^3*x_2+14014415897437562008014441855018988729747446300*x_0^2*x_1*x_2-12689281026309891831724249077210284947017295440*x_0*x_1^2*x_2-2950161018619928763441386478835748270310900000*x_1^3*x_2+30577952605950659882208707054547854989351605450*x_0^2*x_2^2-1286932152409890878404995022090531856012865300*x_0*x_1*x_2^2-11231388698792292374575633129562552779313705040*x_1^2*x_2^2+3471024640018275159521327449503991007162192580*x_0*x_2^3-6119050346657388675585233761763169658955453760*x_1*x_2^3-2831982775061709034699105824173391580904032560*x_2^4+14478944161589390127862325231582651254224207360*x_0^3*x_3-50919455306164560120383901656888709181491954480*x_0^2*x_1*x_3-18973983153517852220492219432758395671580325800*x_0*x_1^2*x_3+18911456737387836703193385057963750442188568320*x_1^3*x_3+33798300827833102740044662578365879603434900200*x_0^2*x_2*x_3+7439791025014051540648732268020184521020136230*x_0*x_1*x_2*x_3+9590293555246786124599847767945897245587132720*x_1^2*x_2*x_3+34573200101322765810482659856295975932327022098*x_0*x_2^2*x_3+15928342449813863884023885065158230980968203600*x_1*x_2^2*x_3-7465398102364314564017787517451417754838761352*x_2^3*x_3+40915695350616937434797694097334614654654028160*x_0^2*x_3^2-41801941504937480690443278863306578968737859600*x_0*x_1*x_3^2-22737436692990025603934780941542734635147013280*x_1^2*x_3^2+30787979581504691294063116421782052207885465205*x_0*x_2*x_3^2+20256974809849745522714994100374736679985923416*x_1*x_2*x_3^2-3053031547040042126662762291085413017173107460*x_2^2*x_3^2-9195645194203768459193431542351619299594734460*x_0*x_3^3-20034017068489888536213851701939448425427364960*x_1*x_3^3-996961873805941600143788012646220078238749560*x_2*x_3^3-4807366496882689956122422330577091289048384800*x_3^4+137044191375103726908052639667141473335383481600*x_0^3*x_4-289550594543039593277690785678399926171021516000*x_0^2*x_1*x_4-112574120196918882539346058015913905194929974800*x_0*x_1^2*x_4+76885356055135838634286559297332152947312976000*x_1^3*x_4+127461272092720688622543183495216198568809842600*x_0^2*x_2*x_4+72904377170924597137528353594697168055817792140*x_0*x_1*x_2*x_4+94170165448414907713535824127623546402933294080*x_1^2*x_2*x_4+56015422669518499428322810783038726922260487330*x_0*x_2^2*x_4+73580719150765156235785578363583163668201338560*x_1*x_2^2*x_4+351632528513656431175406611350529331420958680*x_2^3*x_4+260774509130329344636068366418843971280990857280*x_0^2*x_3*x_4-277561296647173856988145519155461191171350580980*x_0*x_1*x_3*x_4-176157365747461734846569513604150408988786711680*x_1^2*x_3*x_4+59012680401122214143627888905510835346441384425*x_0*x_2*x_3*x_4+90651844642558769359738257907125516563344801640*x_1*x_2*x_3*x_4-614961769742953581949437453018573233524813784*x_2^2*x_3*x_4-57137268080689812048324527013939574055167647528*x_0*x_3^2*x_4-119942535944578208155440356074224632582755724160*x_1*x_3^2*x_4-6648502428181880705681468437058153643322186460*x_2*x_3^2*x_4-24696155992260274603700661684371288282413914000*x_3^3*x_4+215096984635997508903287536421918808826747162800*x_0^2*x_4^2-288959661381970753060632566330448986870143385400*x_0*x_1*x_4^2-186606958864623665644750275281184298883801416800*x_1^2*x_4^2+60692349827984576481766646944890420883319378330*x_0*x_2*x_4^2+65878809392457187801720293281742651351589292840*x_1*x_2*x_4^2-1785420882025357755997685460488203135790616100*x_2^2*x_4^2+100758426323785499033066576684586234107320983880*x_0*x_3*x_4^2+30242626202138390878016260932352161229992248400*x_1*x_3*x_4^2+2125055199535488701495733952328285049449791460*x_2*x_3*x_4^2+20097717144194314982794635014197041699515828736*x_3^2*x_4^2+56955317937786445187349962795780841298468807600*x_0*x_4^3+43521845483252436615254084748288371922008584000*x_1*x_4^3-9812193548125989626533790044374452354988110000*x_2*x_4^3+11703751381979424091595381871991393344215745760*x_3*x_4^3-5619799989909730224847155454076399242041427200*x_4^4,
   3735811325842818669413794090370269602926640*x_0*x_1^3-5924564928981621917493731143916416328448000*x_0^3*x_2-14789835997313127135948283459601764447199808*x_0^2*x_1*x_2-7682772482146102253085584730302635838783940*x_0*x_1^2*x_2-1083205603083598963687758525270862195994400*x_1^3*x_2+6779830489065946520603079404901631248734880*x_0^2*x_2^2+1612680615754516763273599075363296772190892*x_0*x_1*x_2^2-2700599527092560795226268166504727769863600*x_1^2*x_2^2+6579295131812573712354419438437703306131608*x_0*x_2^3-378702757602926777379876586008770875917600*x_1*x_2^3-876361620504885503032708022036621495618640*x_2^4+6580009552614197183131211378465722571707200*x_0^3*x_3+21297912540437738036819034374563181760414600*x_0^2*x_1*x_3-11433679823900601809109125529267047413936896*x_0*x_1^2*x_3+6305939953589123724978941478291202223402400*x_1^3*x_3+72141284986752895605165008346519709226036973*x_0^2*x_2*x_3+18500011004862239537067259580083376361098370*x_0*x_1*x_2*x_3+5684206067935010807803009179044450120427480*x_1^2*x_2*x_3+53066704743482841850872538708425898650226596*x_0*x_2^2*x_3+22988820229930674928999861303195293343177600*x_1*x_2^2*x_3+303143354952282790293699989901952685192952*x_2^3*x_3+2511285360263046737386685954934806662202628*x_0^2*x_3^2-102057729324531795870857214938627301823131480*x_0*x_1*x_3^2-54064910852922220737294971510000901593498160*x_1^2*x_3^2+51025384309259950966588781044116702835692408*x_0*x_2*x_3^2+12445051720015586113596259787183970003915652*x_1*x_2*x_3^2+2311789288735639596364587551181611784284340*x_2^2*x_3^2+64031574122042649289060829390960784047377056*x_0*x_3^3+17452496166022879659253341520237347623283120*x_1*x_3^3-973796902390250605073133141751559604340176*x_2*x_3^3+8854131885531148504743432589135757210947200*x_3^4-42557578886797885267247574161630717975538240*x_0^3*x_4+130778004717978446318395537290257231171338380*x_0^2*x_1*x_4-77307056281628370538778886553834487266426560*x_0*x_1^2*x_4+56245855299960955391495065586944100768870400*x_1^3*x_4+100960696475952177057922342389820713401953311*x_0^2*x_2*x_4-154749750290281982122885872899698527897858464*x_0*x_1*x_2*x_4-16563382507752683407017714851344496545982400*x_1^2*x_2*x_4+23678323247973692241845101100666594933266092*x_0*x_2^2*x_4-7577266443847554434348977943215488559138760*x_1*x_2^2*x_4-17516992187046874954462673165888440410525960*x_2^3*x_4+100589492073976089695694235974009832465078896*x_0^2*x_3*x_4-516255604620601571400442940849069855041343120*x_0*x_1*x_3*x_4-292266963979763264494206086135284672824696720*x_1^2*x_3*x_4+374911647922253496854192083554220868374905405*x_0*x_2*x_3*x_4+111299283667079116638819816454301677894346060*x_1*x_2*x_3*x_4-50261446508995605660185692328539169799864804*x_2^2*x_3*x_4+504268940215918265971122265306674392849263140*x_0*x_3^2*x_4+166467754952437073831634792237745239952363584*x_1*x_3^2*x_4-9212374184270070304902748810310383365201564*x_2*x_3^2*x_4+60345560801963720730295829132066492045144208*x_3^3*x_4-113073731666201193016830351110027745365532120*x_0^2*x_4^2+56224559931040421631185633432951440330906780*x_0*x_1*x_4^2+95280005284837740448108143859010904613600*x_1^2*x_4^2+108718420905006919750292030225934886344808803*x_0*x_2*x_4^2-14387678021812957626478743292880646827029680*x_1*x_2*x_4^2-27148075939781255502221600021224877750687280*x_2^2*x_4^2+226959710885668152172701409260014627791768032*x_0*x_3*x_4^2+135287306467185248991070953715231391220981040*x_1*x_3*x_4^2-37843180848745461871375427502142075467533544*x_2*x_3*x_4^2+13242577706072035649236195644880667854527216*x_3^2*x_4^2-8503608563863120376748529527058800070105560*x_0*x_4^3+653990596712674751585660583807044610735600*x_1*x_4^3+1419684499925647122900936082643495654005860*x_2*x_4^3-17873581431581665036921824619391141243340960*x_3*x_4^3+2263484648705887458303525257957910971954400*x_4^4,
   5603716988764228004120691135555404404389960*x_0^2*x_1^2+3133219707295161255651719494774077277777920*x_0^3*x_2-13403104595692111645161114885680590663961886*x_0^2*x_1*x_2-6891324676766818291334660559571758914073360*x_0*x_1^2*x_2+298009715828459748080122803307299059750400*x_1^3*x_2+3826285468283011428824708361524853088579140*x_0^2*x_2^2-12542373428222277162784461025861680905433936*x_0*x_1*x_2^2+2128862122285262074839263310276672653288640*x_1^2*x_2^2-82238070717203562564583492616373110439048*x_0*x_2^3+3595997598863939661906794608374978478105440*x_1*x_2^3+1371553088138617644123121639877442344472480*x_2^4+8741679535273475280085387117095758793174720*x_0^3*x_3-24266757551758102966375292832679994982803760*x_0^2*x_1*x_3+21307018194282701653053740732906341673287248*x_0*x_1^2*x_3-3208911589135395530229165014863810987420800*x_1^3*x_3+44611803741071149069241617228383936802326471*x_0^2*x_2*x_3+25962117192146775749518597833126289469263260*x_0*x_1*x_2*x_3-1909448299010919814996271844463088732909440*x_1^2*x_2*x_3+54262289285128970402524625346193314870881048*x_0*x_2^2*x_3+16465608430119343152795713825058571175429680*x_1*x_2^2*x_3+10649699483684857612656618596497385238715136*x_2^3*x_3+19051470635325688921871643714409698710268876*x_0^2*x_3^2-65574549260782120592941619731411851945264480*x_0*x_1*x_3^2-30423775758309841074051497472671927759286720*x_1^2*x_3^2+40103219672726077718458190762392493533104306*x_0*x_2*x_3^2-10636695955522728863546353333030215187904656*x_1*x_2*x_3^2+5819694832999254062944577237632323765414712*x_2^2*x_3^2+17915824530041345565637205179577860181892072*x_0*x_3^3+12391195614557826492760995479480355319698240*x_1*x_3^3+8840938542517460012571138262361473240883088*x_2*x_3^3+13795116114613160308296589183035583374859200*x_3^4+45683472601594306974627307243645500059021760*x_0^3*x_4-190978561988330963417924459964494629417245660*x_0^2*x_1*x_4+142434375790351109079853988678353570674672000*x_0*x_1^2*x_4-8169271055067386448353799169539431633308800*x_1^3*x_4+97994442968422711989676202972776918195914377*x_0^2*x_2*x_4+43806032550514054915408867827180669140031816*x_0*x_1*x_2*x_4-47552044870905557000176242787081265048280160*x_1^2*x_2*x_4-151671858674273956480620096192163509929504*x_0*x_2^2*x_4-69909794556092428906650397349625906665541840*x_1*x_2^2*x_4-28666568317177251479227233064598919175773280*x_2^3*x_4+142322722132027486106087670045944770141231392*x_0^2*x_3*x_4-355294729977625152735097682164092437898803240*x_0*x_1*x_3*x_4-77139214615831472349090058684668875053393920*x_1^2*x_3*x_4+162520546764520187254063888745173780356224090*x_0*x_2*x_3*x_4-90709800187891917931683518950652248024797040*x_1*x_2*x_3*x_4-27865164565509291802507201777559816962375664*x_2^2*x_3*x_4+159797224437386393657276160973533886537484400*x_0*x_3^2*x_4+143832649459310611670827010120870255820085248*x_1*x_3^2*x_4+45481097196361243630252761054709944015778792*x_2*x_3^2*x_4+103219745665011780910308543235436815423660896*x_3^3*x_4+80238160805038504378177478256300787861276440*x_0^2*x_4^2-240602385107931604261296262622327694595671440*x_0*x_1*x_4^2+109514650017670088721399300619649563948552000*x_1^2*x_4^2+30603451252819217074730023609176718839624788*x_0*x_2*x_4^2+63774503827316000819162745964809350867119600*x_1*x_2*x_4^2-54385598018815888111532472172825322627653000*x_2^2*x_4^2+99770922316837033916468432292608066788798864*x_0*x_3*x_4^2-45763039216434482613541654135526981023821920*x_1*x_3*x_4^2-31263751045332530931577111050028014901647784*x_2*x_3*x_4^2+23875220134317003210573372815539228493975232*x_3^2*x_4^2+31435007356768318277411666009160493074529120*x_0*x_4^3+5731343147447511581511121216261438030984000*x_1*x_4^3-35548734735234637627696985014284387990356240*x_2*x_4^3-14447576522986871719138010858987525084671040*x_3*x_4^3-5220108829079340939117286083486723785846400*x_4^4,
   29419514191012197021633628461665873123047290*x_0^3*x_1-58298701454279770746642786212456891039804460*x_0^3*x_2-22427744312707344638996235572520462738628452*x_0^2*x_1*x_2-14282122122544413810380298440565350995043040*x_0*x_1^2*x_2+1141963640467735676316624671310401090421600*x_1^3*x_2-13932162416544573602508858190927519263836010*x_0^2*x_2^2+17742645751559817347630430280987013395836948*x_0*x_1*x_2^2+1538189535211283919586438361652584727668880*x_1^2*x_2^2+17392795480077646720785138574009158004980204*x_0*x_2^3+646288365413944240317850357191690235966080*x_1*x_2^3-1963748083639462666753525199772897875623440*x_2^4-37489477251471869760159007511650778546595060*x_0^3*x_3+163847374481440519446908062834124335536567120*x_0^2*x_1*x_3-56458025433722903410003457620793777379529104*x_0*x_1^2*x_3-207827306442736856852344255711765950388800*x_1^3*x_3+81744060427772598618835367122931567675030442*x_0^2*x_2*x_3+13042451436904457605523854928576794959893850*x_0*x_1*x_2*x_3+6962024206727030000524147365813605326685200*x_1^2*x_2*x_3+68270638749785316254903270279508121671015838*x_0*x_2^2*x_3+35364725993567258067666305785150986017779760*x_1*x_2^2*x_3-10029578506781250365850203556393218038415288*x_2^3*x_3-66708642734122297222234241510492006431765128*x_0^2*x_3^2-120716601997586982202036851119689228338731460*x_0*x_1*x_3^2-85433616584476826074950850687104651086806560*x_1^2*x_3^2+156220159975073260440568751491387734338701959*x_0*x_2*x_3^2+71438139423824557292154496256162370612306328*x_1*x_2*x_3^2-5493936499757680595420615390872940828834572*x_2^2*x_3^2+218608286312785266467068660900966853474966964*x_0*x_3^3+72018191816649727852259628991840229809815360*x_1*x_3^3-12835917132765320310630934671449325990060360*x_2*x_3^3+12290017489538424260467136192463254997252960*x_3^4-503665978556167384257043561534431591032854110*x_0^3*x_4+1013796668727099042719673465533696684512983420*x_0^2*x_1*x_4-216942652973990425249317656506394218171568880*x_0*x_1^2*x_4+28483484256231827828473957820191408647187200*x_1^3*x_4+23310521109419519868235863823218779808981274*x_0^2*x_2*x_4-412919510192183254961491315841217227626975908*x_0*x_1*x_2*x_4-141499837417020558159409483680900098169547520*x_1^2*x_2*x_4+70659406360627748031955777429694274582342062*x_0*x_2^2*x_4-43356945093214790073469717968398354042316480*x_1*x_2^2*x_4-20122904009875298570004651919823907395515160*x_2^3*x_4-282297444953802312803375332240891066261783716*x_0^2*x_3*x_4-47063576659892578183857238520367582119574472*x_0*x_1*x_3*x_4-361644223759020476811733297499620979967692160*x_1^2*x_3*x_4+1044212493950554393959380152447130572880509819*x_0*x_2*x_3*x_4+370742544112833187411116470770310074910330200*x_1*x_2*x_3*x_4-135870213981659198474141567016930383223673768*x_2^2*x_3*x_4+1643036558529887397095024399638445206868196960*x_0*x_3^2*x_4+599165046269655288633515724607928343694838736*x_1*x_3^2*x_4-108403503818879383628363610084531962873891668*x_2*x_3^2*x_4+74765671930911556442191042491637982489663472*x_3^3*x_4-841176561214524378406160277079110307168591320*x_0^2*x_4^2+891821637192545872095143674930620279484596200*x_0*x_1*x_4^2+48965755849753045553620426346521355761851200*x_1^2*x_4^2+300261727619266387245282512716285900015704406*x_0*x_2*x_4^2-205543594725766444812096993681974768650838200*x_1*x_2*x_4^2-2253152904871711305648877179038374321700300*x_2^2*x_4^2+496047917734913491528258780436958598056072872*x_0*x_3*x_4^2+471400757804703065330702651327022232946261600*x_1*x_3*x_4^2-79605746887633423428378182355299536582913588*x_2*x_3*x_4^2-28378402170563166404876047280192875120890528*x_3^2*x_4^2-143598314481808819513836940511864230837888000*x_0*x_4^3-46252705706269456612144690364484734052916000*x_1*x_4^3+78231098830502032432894788362420416112924720*x_2*x_4^3-49117822700647112126478520082851799538218080*x_3*x_4^3+23629889327188879086166400184552863220494400*x_4^4,
   19769913536360196398537798326239466738687778880*x_0^4+60401159577626839536229920146602164101689027665*x_0^3*x_2-19194823699036360088751492567415979122212514392*x_0^2*x_1*x_2-12739883451556314883788064527036766069940556480*x_0*x_1^2*x_2+1244644040992806721336654406387221717434004800*x_1^3*x_2+9454779894063342364876005152496034067971639974*x_0^2*x_2^2-36369587394205505735867872879454246414400554232*x_0*x_1*x_2^2+5291758274674605840215661100712060272625352480*x_1^2*x_2^2-12001411811633184849374278963987978212655470432*x_0*x_2^3+7186751951541764211399032467151094705037130400*x_1*x_2^3+3829114503269938264107225544371873544027632960*x_2^4-2628995329944417112287267882827261618551348380*x_0^3*x_3-93754746363225333955440190125315793127264248800*x_0^2*x_1*x_3+47864962151661154292142198654300522850707083136*x_0*x_1^2*x_3-6716003426199593961441493942815811752775084800*x_1^3*x_3+62232410349848643249892363695674941663194645192*x_0^2*x_2*x_3+26846732927755243303530676288785177347220502308*x_0*x_1*x_2*x_3-9379384392108609965172749274206038897615611680*x_1^2*x_2*x_3+47500387938511237050154821981240787781020830148*x_0*x_2^2*x_3+10456894255545714347886183474152547967507422080*x_1*x_2^2*x_3+24365307137078968449260615932857980201095329712*x_2^3*x_3+13857387859427507055269495505334954062994119552*x_0^2*x_3^2-17395942915518574741193395340333115366638759280*x_0*x_1*x_3^2-16190354843465352186341531853168428778996927360*x_1^2*x_3^2+51014699350443929548001020885887263073441636054*x_0*x_2*x_3^2-38869925296714085184829125135556907027579695712*x_1*x_2*x_3^2+10505749941635052578164143348806386958688380888*x_2^2*x_3^2+98916994895953164056278749370345191625500778584*x_0*x_3^3+61037421241292400207915326469464404649643682560*x_1*x_3^3+10069471461285406815067176935805231164029930800*x_2*x_3^3+31279026120585064555128431396355320944073636160*x_3^4-19620729257902661431698096688320821316100252620*x_0^3*x_4-516918631974591723657674394774923707163735070960*x_0^2*x_1*x_4+272151144357122869651701275650938900822709129920*x_0*x_1^2*x_4-39616666542106187449188090815834223970131494400*x_1^3*x_4+369629549364283057460808371349342279992341918414*x_0^2*x_2*x_4+328122568136652232945690935514242333862618469712*x_0*x_1*x_2*x_4-90585746877370731263073708809660658998335392320*x_1^2*x_2*x_4+76307153490444730086073833346417107022184793020*x_0*x_2^2*x_4-133705027341953515623370161543118730226531383520*x_1*x_2^2*x_4-65921635578604893318057824820318490897396392080*x_2^3*x_4+336068689296253859232662999621134251004788163560*x_0^2*x_3*x_4-56593723846296373715288512521165751806774239392*x_0*x_1*x_3*x_4-35823449455514672089380475889478326300382001920*x_1^2*x_3*x_4+669161211576579287568854820775819027283735564314*x_0*x_2*x_3*x_4-114775388865164797222851340722427051407888259040*x_1*x_2*x_3*x_4-93594406324452364717416259810259208846575713888*x_2^2*x_3*x_4+790382339714220792806365977111406068071332499280*x_0*x_3^2*x_4+456638001285769361744313782422885398860811127296*x_1*x_3^2*x_4+48476446606354752233085653637986608132353087752*x_2*x_3^2*x_4+211748242664492192204552171576756560395139297632*x_3^3*x_4+68625624955313643374024598873511669826564125920*x_0^2*x_4^2-544880274218263792254564425556220233518210310880*x_0*x_1*x_4^2+81587379491548553032308665935021842522407148800*x_1^2*x_4^2+246934689521504876130724983684328206521809789696*x_0*x_2*x_4^2+158655410571909793297747749115912848509315352560*x_1*x_2*x_4^2-117646786394016451427104881664136544091607858840*x_2^2*x_4^2+411152836163128282621373634387876390069128158640*x_0*x_3*x_4^2+14025315821701127622914910149185229233825731200*x_1*x_3*x_4^2-76273536655894675572853480683644106616325029928*x_2*x_3*x_4^2+45475761662881666253739585350836014751760214912*x_3^2*x_4^2+80488214410079371940008160830548336845660911520*x_0*x_4^3+50992136297855112667962522519396909597551820800*x_1*x_4^3-58167136678127876929045289661236724760562129680*x_2*x_4^3-28551984676080293230641075240626031640532808640*x_3*x_4^3-8697616099874531504045036966136901769492256000*x_4^4);
   D_4={1, 4, 6, 4, 1};
   T_4="quarto-quartic Cremona transformation of P^4,  dim(B)=2, deg(B)=10, g(B)=11 ";
   x=gens P_5;
   C_5=ideal(x_4^2-x_3*x_5,
   x_2*x_4-x_1*x_5,
   x_2*x_3-x_1*x_4,
   x_2^2-x_0*x_5,
   x_1*x_2-x_0*x_4,
   x_1^2-x_0*x_3);
   D_5={1, 2, 4, 4, 2, 1};
   T_5="quadro-quadric Cremona transformation of P^5,  dim(B)=2, deg(B)=4, g(B)=0 ";
   x=gens P_6;
   C_6=ideal(x_3*x_4-x_5*x_6,
   x_1*x_4-x_2*x_5,
   x_2*x_3-x_1*x_6,
   x_0*x_3-x_1*x_3+x_0*x_4-x_2*x_6,
   x_0*x_2-x_3^2-x_5*x_6,
   x_0*x_1-x_1^2-x_2^2+x_3*x_5+x_4*x_5,
   x_0^2-x_1^2-x_2^2+2*x_3*x_5+x_4*x_5-x_3*x_6);
   D_6={1, 2, 4, 8, 9, 4, 1};
   T_6="quadro-quartic Cremona transformation of P^6,  dim(B)=2, deg(B)=7, g(B)=1 ";
   x=gens P_6;
   C_7=ideal(x_2*x_4-x_1*x_5,
   13489460209222425341982030692941673807449876253955696069141191089230546292081715267088788208136471333490004205130656800*x_0*x_4-52143864440382658560978850866339619037355204112981576403651587061994670745028376601480993245300702140696820630089051000*x_1*x_4-252927378922920475162163075492656383889685179761669301296397332923072742976532161257914778902558837502937578846199815*x_4^2+67298064193312003019945626438196630474413809704524707332797866133978413214613530785030252455484233718105378019151866080*x_0*x_5-271559748591659099944584474952688373975209273752570179669335389416424985913843738345887870137316167084451960358418072428*x_1*x_5-80140141749672063479007898907919899311053015977021318237075067725370395975424340342068199915006753583606038155436210804*x_2*x_5-1273447216469146147346635787028305952767399029189564109245127540267641908557502658743455404358995507031925878462049669*x_4*x_5-46892493151348856725947133791035842094834568370740409661686701674856034082853949196087751169579672457671059607426492*x_5^2+2705560740740722951669401945003847085087559447971181478992145148815263335686938833359932138663292014834540*x_3*x_6-15163419303510775319484005776255155213401806439649329153239961297134749645890993164368278507643987960825165*x_4*x_6-95183474005120550172479101921005020863395046587814220798930976295092269656146574964039491719007605908339860*x_5*x_6,
   x_2*x_3-x_0*x_5,
   13489460209222425341982030692941673807449876253955696069141191089230546292081715267088788208136471333490004205130656800*x_1*x_3-52143864440382658560978850866339619037355204112981576403651587061994670745028376601480993245300702140696820630089051000*x_1*x_4-252927378922920475162163075492656383889685179761669301296397332923072742976532161257914778902558837502937578846199815*x_4^2+67298064193312003019945626438196630474413809704524707332797866133978413214613530785030252455484233718105378019151866080*x_0*x_5-271559748591659099944584474952688373975209273752570179669335389416424985913843738345887870137316167084451960358418072428*x_1*x_5-80140141749672063479007898907919899311053015977021318237075067725370395975424340342068199915006753583606038155436210804*x_2*x_5-1273447216469146147346635787028305952767399029189564109245127540267641908557502658743455404358995507031925878462049669*x_4*x_5-46892493151348856725947133791035842094834568370740409661686701674856034082853949196087751169579672457671059607426492*x_5^2+2705560740740722951669401945003847085087559447971181478992145148815263335686938833359932138663292014834540*x_3*x_6-15163419303510775319484005776255155213401806439649329153239961297134749645890993164368278507643987960825165*x_4*x_6-95183474005120550172479101921005020863395046587814220798930976295092269656146574964039491719007605908339860*x_5*x_6,
   17985946945629900455976040923922231743266501671940928092188254785640728389442287022785050944181961777986672273507542400*x_0*x_3-267340268223005828568163446371272973851231536860986941833768597294958478602138004409759586612337630790357537823735651330*x_1*x_4-337236505230560633549550767323541845186246906348892401728529777230763657302042881677219705203411783337250105128266420*x_3*x_4-1303596611009566464024471271658490475933880102824539410091289676549866768625709415037024831132517553517420515752226275*x_4^2+253184099299136389287161167127084716307955528057816859259278318793155929624253852442508423172020206566436385964039580400*x_0*x_5-1155149889926648658906072756844276606599688014182384933341382080045762275287694347914374439824779539754428055995300127328*x_1*x_5-340775818566883443411432192972939759163963706612792138113351525322645673184227850861235318425093644940277757299415533404*x_2*x_5-15478017126061454296873721749492175162853462972967795673556733674062214377998608698850894424888166423266720803936240*x_3*x_5-5322786419404104411539075109869504979981742298616373527314763465745900769731166282855759127461555557434463087471700439*x_4*x_5-197978812907951769888052890579939813777102126421895272609347181831472544226552106538346478202943642414232551850328532*x_5^2-20217892404681033759312007701673540284535741919532438870986615062846332861187990885824371343525317281100220*x_3*x_6-90472982407063106321701843149400574119934464487327242349703182998941133487828855511057531431462748271692735*x_4*x_6-403177070460516602429852844243013662719992236326662872101273094172838663326819267524545974783000731178180060*x_5*x_6,
   13489460209222425341982030692941673807449876253955696069141191089230546292081715267088788208136471333490004205130656800*x_0*x_1-52143864440382658560978850866339619037355204112981576403651587061994670745028376601480993245300702140696820630089051000*x_1^2+67298064193312003019945626438196630474413809704524707332797866133978413214613530785030252455484233718105378019151866080*x_0*x_2-271559748591659099944584474952688373975209273752570179669335389416424985913843738345887870137316167084451960358418072428*x_1*x_2-80140141749672063479007898907919899311053015977021318237075067725370395975424340342068199915006753583606038155436210804*x_2^2-252927378922920475162163075492656383889685179761669301296397332923072742976532161257914778902558837502937578846199815*x_1*x_4-1273447216469146147346635787028305952767399029189564109245127540267641908557502658743455404358995507031925878462049669*x_1*x_5-46892493151348856725947133791035842094834568370740409661686701674856034082853949196087751169579672457671059607426492*x_2*x_5+2705560740740722951669401945003847085087559447971181478992145148815263335686938833359932138663292014834540*x_0*x_6-15163419303510775319484005776255155213401806439649329153239961297134749645890993164368278507643987960825165*x_1*x_6-95183474005120550172479101921005020863395046587814220798930976295092269656146574964039491719007605908339860*x_2*x_6,
   719437877825196018239041636956889269730660066877637123687530191425629135577691480911402037767278471119466890940301696000*x_0^2-10693610728920233142726537854850918954049261474439477673350743891798339144085520176390383464493505231614301512949426053200*x_1^2+10127363971965455571486446685083388652318221122312674370371132751726237184970154097700336926880808262657455438561583216000*x_0*x_2-46205995597065946356242910273771064263987520567295397333655283201830491011507773916574977592991181590177122239812005093120*x_1*x_2-13631032742675337736457287718917590366558548264511685524534061012905826927369114034449412737003745797611110291976621336160*x_2^2-104287728880765317121957701732679238074710408225963152807303174123989341490056753202961986490601404281393641260178102000*x_1*x_4-252927378922920475162163075492656383889685179761669301296397332923072742976532161257914778902558837502937578846199815*x_4^2+66678943508269544848070677568216943467899671185605995505855596787015924639493586437076216678488707061174709186994416480*x_0*x_5-484471205367823276406147479347468573174478965697225120761925928046261016703090389660118235235778389381830483857286089988*x_1*x_5-88059294265990134274530014531117491862137101033897129141448954998629297744486424603602059043124499280175340229449352084*x_2*x_5-1273447216469146147346635787028305952767399029189564109245127540267641908557502658743455404358995507031925878462049669*x_4*x_5-46892493151348856725947133791035842094834568370740409661686701674856034082853949196087751169579672457671059607426492*x_5^2-808715696187241350372480308066941611381429676781297554839464602513853314447519635432974853741012691244008800*x_0*x_6-3618919296282524252868073725976022964797378579493089693988127319957645339513154220442301257258509930867709400*x_1*x_6-16127082818420664097194113769720546508799689453066514884050923766913546533072770700981838991320029247127202400*x_2*x_6+2705560740740722951669401945003847085087559447971181478992145148815263335686938833359932138663292014834540*x_3*x_6-15163419303510775319484005776255155213401806439649329153239961297134749645890993164368278507643987960825165*x_4*x_6-95183474005120550172479101921005020863395046587814220798930976295092269656146574964039491719007605908339860*x_5*x_6);
   D_7={1, 2, 4, 8, 8, 4, 1};
   T_7="quadro-quartic Cremona transformation of P^6,  dim(B)=2, deg(B)=8, g(B)=3 ";
   x=gens P_5;
   C_8=ideal(22836090911769266723935953150996908692644805794042414051397387892985751032000*x_1^5+1070671567272614491804191487324775526396132538090719252019484188280841615264000*x_0^4*x_2+4633390023433212406492835453290399311943079807707262067926365232116948417276800*x_0^3*x_1*x_2+3823978049182905057842706917022301137093534762717939372327218609290800970063200*x_0^2*x_1^2*x_2+1771624874216998441534211123928129350515969698673660079519396444678827464374400*x_0*x_1^3*x_2+530630949434793221344602350165413518385632874053382237063188299266502106424800*x_1^4*x_2+3341673532051053372770708084668497797268137312305284095298852826078659592982400*x_0^3*x_2^2-2953284263134722989457516323492411977374894872203539448253838327414000137621760*x_0^2*x_1*x_2^2-2681507484974891920130914894876267816157382679362926888791079267480425677454800*x_0*x_1^2*x_2^2+9721220173298319969952019499919901066831528499343675624073381534528655813600*x_1^3*x_2^2-4046206986460557928858866683363247540419623239907298914111211124068676054876480*x_0^2*x_2^3+1465797125968854552006809481446595561296052404093711851080770839508841382357440*x_0*x_1*x_2^3+1371824250954505394136522033556807776869837645269845333024145127846384927102640*x_1^2*x_2^3+144971710418759761733608256475898127656436885431325089854142315554989239181760*x_0*x_2^4-213095249037698407503362722675813503218604899249581093384537111929622244687040*x_1*x_2^4+152235340600923895352000159166064168416549205747242739495033261457378738680320*x_2^5-181458229497570206970082604305493479699475003622132119596001781402753513360000*x_0^4*x_3-2427929998729995200772259732817160373793869250877653615177205047089062113541600*x_0^3*x_1*x_3+1225780835519839841103705655560525562118083480441126213398083393768158287699600*x_0^2*x_1^2*x_3+4502256132997441560713423080413125873666038858163703715144928503134013845300000*x_0*x_1^3*x_3+1450571559004456876027473504975865938978196238442464180794721238274625092522200*x_1^4*x_3-18111896029578509671129786594364282486664577702382803393491661434640653820800*x_0^3*x_2*x_3+3546746534434624610079851061171865492100545616333153767069585588338591096811920*x_0^2*x_1*x_2*x_3+12141256138647634746479735379266979059502674256902314687481168032463455653317100*x_0*x_1^2*x_2*x_3+3339540741784945636116612843362055295998213857703533001015551841365392770115920*x_1^3*x_2*x_3+2586555624740629678826705385320931960259197040631003948615720947340853818054160*x_0^2*x_2^2*x_3+9876096206856959568396312807702537142504914115318001884874694808801028092971840*x_0*x_1*x_2^2*x_3+1010015336902859685863261411843316823641949494132211279689778039178582957058540*x_1^2*x_2^2*x_3+4891480963063618553688446078270408636015764027434048686505889692166194285870720*x_0*x_2^3*x_3-1621999222245773793744614866330998942610916582794963497167590640803415459946480*x_1*x_2^3*x_3-1383604517553185631837068165991836133300090822778920675140437500775006212416688*x_2^4*x_3-4857945289423303642097816658275290962547334673302357366210034645267260877160800*x_0^3*x_3^2-1296075587336835858685195042942478391044009897107252405336868599498537430424960*x_0^2*x_1*x_3^2+10272325162265899384560915667664728484643380819349395104398311273806678382131560*x_0*x_1^2*x_3^2+2391140074613974646281990327783282543880001395120565619965498375737163310474200*x_1^3*x_3^2-8540780854851511935897615693695670145974177452100343070512888452683283734294640*x_0^2*x_2*x_3^2+14542334236795868246281491083537049575059957974600317274688209465175407871526712*x_0*x_1*x_2*x_3^2-1039528595993091740060221530368609181119956749766278319932583699983395589498480*x_1^2*x_2*x_3^2+8419911049346010062649457020261803696189757568827489691024603869883123570430580*x_0*x_2^2*x_3^2-4583120106239727393780716690124320839573726560453083480087603861248217718057492*x_1*x_2^2*x_3^2-2597449518952936623310928718960120324621238716882918007009792717728699348365508*x_2^3*x_3^2+2233528983214108103480127365765723633434124146004356709437714271279985103587900*x_0^2*x_3^3+11062577021757436188015715639200319241841509427972793944975825278630652920913450*x_0*x_1*x_3^3-1726677873327664076759084083123503387629330659203805053481713376432365868947600*x_1^2*x_3^3+3697803125764640890278793089095913098078232734460085010147477412869189236199970*x_0*x_2*x_3^3-8946174987384312556378737385687841020349951936855719180642219942332825848387115*x_1*x_2*x_3^3-3154680052642895685405218358858540902910834076097370019589012071706662994857290*x_2^2*x_3^3+5302610945759062462910834071204981904878177411059701472387780000550674025999500*x_0*x_3^4-3148659038896323132296165052268420572548732110366184285831745308509108616622000*x_1*x_3^4-693314183302025843901785859191337962004733067355423209131936779983842009315050*x_2*x_3^4+1272167483095581253236130102983920398376647019059871915765624741738329710060000*x_3^5-3564897451791057424238064450166239105191838391310147937191901526671486885206400*x_0^4*x_4+3616046816394812833709592324268343624371958461504285611970146088934197629222960*x_0^3*x_1*x_4+103221355210854414075553384733306398024041835880219835764120575673447516078160*x_0^2*x_1^2*x_4-6246987895073318949554816587527709749855057352622913759530570555846569027452120*x_0*x_1^3*x_4-1819972128348522948633261937242290153307809300229992773481608766372629291138200*x_1^4*x_4-4213282474365043916848168056990493927424968573161193775963478927556451892506880*x_0^3*x_2*x_4-15157784853576722674343792617876442116918655270693172756444823593384980649559824*x_0^2*x_1*x_2*x_4-34517630465596120274424264131326587067583178785366187525222553926137721016326600*x_0*x_1^2*x_2*x_4-7584324505488060882357258400659880680240917010515293911746963312632310961255360*x_1^3*x_2*x_4+603299346877694866863908305100545156240591247028968035974093343144556745209280*x_0^2*x_2^2*x_4-24238496063518733193424971780214206235561633531484724553656464884627103240161776*x_0*x_1*x_2^2*x_4+5590325736376388098364404127757546416534687606924042485753721286030622506581196*x_1^2*x_2^2*x_4-15626747393479847480458123044785056734734918059657620191701045589903214376963824*x_0*x_2^3*x_4+11545661014011727601471324680158557281000228092592960787050475620514823366733248*x_1*x_2^3*x_4+3810318177106017224254320540194090930992976312337216862113484869960150508934400*x_2^4*x_4+11797775904923962426783056207211003260622008814320654576838185624680118146662800*x_0^3*x_3*x_4+2050133478178322630414000544496711541054685526230391542004956636642493294882560*x_0^2*x_1*x_3*x_4-15933163279428405267994125395465333075769974149221319721397276593335278549841560*x_0*x_1^2*x_3*x_4+1801024295234914846078483190019568676957972523545849442342516018926636308847760*x_1^3*x_3*x_4+10305563825263179940127873713874238165308064253253466260221362619749122671729080*x_0^2*x_2*x_3*x_4-48668500511560603719536487147381714240255365330869678814377716761139773935516236*x_0*x_1*x_2*x_3*x_4+19622297420778467208360117472607314656589288333275904593997447325045187209745936*x_1^2*x_2*x_3*x_4-5122901140303884298938885545213833507086024285443861349718502317911727756198704*x_0*x_2^2*x_3*x_4+40730943116059847748651146594109913660498655453666933785338637390468469998185000*x_1*x_2^2*x_3*x_4+14991015271241825728040882656906238189680048200482024018282026185119664905669340*x_2^3*x_3*x_4-6231733739964139657531817085645372674814203102829719385237149442509365515787500*x_0^2*x_3^2*x_4-16833467149266731129843925370031266526317799302542055675017024642580548535158780*x_0*x_1*x_3^2*x_4+20009767169930856002709833204185222515749159855307459851648883572073143334887280*x_1^2*x_3^2*x_4-44664870326956167735689462603172734796284670147129787975241672050412037814434270*x_0*x_2*x_3^2*x_4+49674464574862385715714184339548083021514447010901957184079229065408821895588176*x_1*x_2*x_3^2*x_4+16847246176321577518065158344287928989439801786749188181382407661219867856670930*x_2^2*x_3^2*x_4+1226638226967952659752187059611107837004097952939038657512632230317158063104550*x_0*x_3^3*x_4+29976053996429736945968231951816274417425235391219016147798285688485527521248550*x_1*x_3^3*x_4+6916782018883522290934743472344710702459986168634888836252004549626723047934935*x_2*x_3^3*x_4+8489736118447138092469876154133075048834992002312922100898294893004613449744500*x_3^4*x_4-7920205625176823119642354632160303459707303041618442162613641022047361492137600*x_0^3*x_4^2+21973238800932180313677443570359702157221715857162143144573489184110467162344080*x_0^2*x_1*x_4^2+10554423810528569147716789297745302512554192043685728373229313878070071616232440*x_0*x_1^2*x_4^2-265637885608898219710590595180393990466907403245998889564206528429556955253400*x_1^3*x_4^2-6996824051260191541231816990647556794854173377053874693204885204641871715343520*x_0^2*x_2*x_4^2-40376274630557058338649063342159799846962396122708321315618349917555953664770440*x_0*x_1*x_2*x_4^2-24645972262299940640536503250423957460564340874645191469521709895029128768387960*x_1^2*x_2*x_4^2+890467878158050575572577488229704095616347593467719022800155950171992739297760*x_0*x_2^2*x_4^2-36797829656018870567586864078830333575497200473411542629640073546681213232569260*x_1*x_2^2*x_4^2-26657684746559521018598840611972100526126527654445436329272590286121231901812912*x_2^3*x_4^2+18833607003756000503418244930021887010451970637898713255798015499913522065922000*x_0^2*x_3*x_4^2-3317346264094982357273429461633766971476288896168448098884650789630856773924480*x_0*x_1*x_3*x_4^2-5793751175587090417728775850582887090670851874931887322878591986155206470223040*x_1^2*x_3*x_4^2+20969073828173476720160819423481268493087219970933351116649594096113254136642520*x_0*x_2*x_3*x_4^2-70100320589196813722232596169581052523518689570319090899592971658748338673631460*x_1*x_2*x_3*x_4^2-16223572366263006120782723617766270352598119603204155913994516291897941928110372*x_2^2*x_3*x_4^2-23391354277963092663623822401973577937653028551838215782312337683214672769195200*x_0*x_3^2*x_4^2-3905280416206639671197067428659207235783621775073224876612343329653056825128600*x_1*x_3^2*x_4^2-61562672875485891804070167986553644557924873560860773463904884176331042583544770*x_2*x_3^2*x_4^2-4947762356768650523296885547802790891734788165484022948704948972168757778848950*x_3^3*x_4^2+9262188946823898049895774806278231927523183544617591576896285077651056479763200*x_0^2*x_4^3+27484153534559714987827711695607207311542324791895776206196313406026856413562000*x_0*x_1*x_4^3+2990489679236414154647576209710291802355419513678080961766951336962125402574800*x_1^2*x_4^3+93402591093598307391154342591045573709543417193593066396809595803766904984338880*x_0*x_2*x_4^3+22545798744841514025215278134039776104260015259142324518356090623480863189866600*x_1*x_2*x_4^3+56836272210667511785667291741764488943921679629894409052670955248081608201615360*x_2^2*x_4^3-578740268436646721184062906334342497175281522942058615493163957616479402733000*x_0*x_3*x_4^3-27206976917368956692500678633865025235807264585234430906154734387302990033275600*x_1*x_3*x_4^3+83502639708046923915779736766670898610589111821022230880669052165341309869003380*x_2*x_3*x_4^3-43332540648707830661646764545124468640203043425322026315967828254990884485933300*x_3^2*x_4^3-13006490671248703320039403515260650886895462865269492838090491536813200186080000*x_0*x_4^4-24149763198147438320416327278438360756470568075793977906063651604991131752204000*x_1*x_4^4+55493236631070667437776770830293878726717552559604523116597670770628314338282400*x_2*x_4^4-61920883385280816159815228612931189774854231626518715364618388027918006831081000*x_3*x_4^4-27310499800775755094299360290269794967856419928736245353802780703529862741144000*x_4^5+694804054264215760562745054329638675903548129694903369033680427298834250547200*x_0^4*x_5-710013970216001439706035761860825994982180199921799141818210610701519584532800*x_0^3*x_1*x_5-2503056882302785285044431617133894460232997645775578033207396569141195951152480*x_0^2*x_1^2*x_5-1393023351712124889713001362789922256515664043786013021793197586173602522268000*x_0*x_1^3*x_5-648400160712157719076550567956440063373645924517269564993490829831968088314400*x_1^4*x_5-8195697635360755783674221049493494640082469637597512581639067657655112606910720*x_0^3*x_2*x_5-13837969825132656160972836210494634173020301291502851741082900541634944969151232*x_0^2*x_1*x_2*x_5-8237555544896086633401462945300913829649275414368186408409518684070015478214800*x_0*x_1^2*x_2*x_5-3655429983120043260483335456316678755812511071294626368719076181348073135223520*x_1^3*x_2*x_5-409510481337912535729963103817232531933843527377771692949848794070417442315520*x_0^2*x_2^2*x_5+466902483481182554254607953062531582360422605003527509189332911248846682765312*x_0*x_1*x_2^2*x_5-1389542959489669939491486755980899118942873734930501475201831369081887582731472*x_1^2*x_2^2*x_5-1457276312115927935428813996410694865538979762572784526320235646979755224206464*x_0*x_2^3*x_5-1641984295897262641701075265269370465471643565492409014741949623600760394399232*x_1*x_2^3*x_5+304987086260266454506125419621482992742000525363579473391750369813685414526720*x_2^4*x_5-4274301688391152310722545878875439868376316128057470517224080187944378071896960*x_0^3*x_3*x_5-8346878301771379612834919572869591997732144707284290128579331492548408714230112*x_0^2*x_1*x_3*x_5+3149226995757040956207448897032691047309063324174394538096861056311278656661844*x_0*x_1^2*x_3*x_5-1672397477976100760307909751033691856835738645403611087826819692051491875713920*x_1^3*x_3*x_5-11731826538218447652396802021453918792221707647613566533311461338520575271504320*x_0^2*x_2*x_3*x_5+3148157171951120794336772500693688678723536133922982959521489443021910467755552*x_0*x_1*x_2*x_3*x_5-12448328073035185252822417140833405246782683723434872160135476488341840749444656*x_1^2*x_2*x_3*x_5-7743157447240285030653732932784388037973274790082145263980415859490730792771984*x_0*x_2^2*x_3*x_5-16642548889892870513302177522682234891640678616277827011501611001612264752794008*x_1*x_2^2*x_3*x_5-3209801762055887412804943985076021075506330287751992359030645941212083844950096*x_2^3*x_3*x_5+1625699240257654580628443874377917657856236480872917301450429315143905465002240*x_0^2*x_3^2*x_5+24474455620302831572950407275515032267602355171162457925933923433514831124483140*x_0*x_1*x_3^2*x_5-4379330568825839218370761757374945794234476451221907152770917961099523905360560*x_1^2*x_3^2*x_5+10909726436300429663138451811551737118739410097386130487187472033879520999190780*x_0*x_2*x_3^2*x_5-16157235746797915961944133539581007021829220617418060063894086712596334851126166*x_1*x_2*x_3^2*x_5+2610601180143422571417821646215512990781419330770256212957641936008089378641376*x_2^2*x_3^2*x_5+12934631344636249168442125644439207489981263451436089106663599195838980477176450*x_0*x_3^3*x_5-7892511722171808148183173312388390872740203605639933990859852831139876990297265*x_1*x_3^3*x_5+1745820368533662941761952866588564531211365664616791708336055971058183071915790*x_2*x_3^3*x_5-799259188359284837268051319218474177170851868654905991920737101133422612089950*x_3^4*x_5+6185550679112283044395618165358594748749177831020721021138939559700351664172480*x_0^3*x_4*x_5+6367829853099317019449040546051888534654691744898182360395967079053225297826736*x_0^2*x_1*x_4*x_5-26620068884204216219811585760426051228832149244441802083647581761045940117331632*x_0*x_1^2*x_4*x_5-3470689561821348890569631289018604965725333273747890570905072447963877370231040*x_1^3*x_4*x_5+70784577503176310267343725524656302025674360968184145903284489392723699048683120*x_0^2*x_2*x_4*x_5-17616670561521917767629097045544431641830263980324193020320538964451586502911136*x_0*x_1*x_2*x_4*x_5+35319073933306558268668802539538177049172985158474686314630626002132149314473324*x_1^2*x_2*x_4*x_5-4353170847872989868212357862744224605035115443998119080538463532728699429836000*x_0*x_2^2*x_4*x_5+46312695885079494077084515343365931317934732483338361941567603567084899463769904*x_1*x_2^2*x_4*x_5-4861192891769270006795122477172547930425304553803796934104451461159271875019616*x_2^3*x_4*x_5+19014745674745940886731984447895095957688935469897745555590430622469377373416880*x_0^2*x_3*x_4*x_5-70946031661603422486428605030350645680418205442082563200075483471642545921034520*x_0*x_1*x_3*x_4*x_5+12001869498870958019550440412462627210893013769952841324954081715134044500065600*x_1^2*x_3*x_4*x_5-103356213458814836878525659818230798729789314041472716567899364897896474526056080*x_0*x_2*x_3*x_4*x_5+67089474802250006544587710486300476551251141305030620996050442856015035917496350*x_1*x_2*x_3*x_4*x_5-6299337378448689342147526011568428294485631254690000044050544611494737396416564*x_2^2*x_3*x_4*x_5-58827900598641251945770741353340186528246376681514924273977756332378062136339170*x_0*x_3^2*x_4*x_5+54056532037518749882302792032033536042309451467079274720414672544482795000664300*x_1*x_3^2*x_4*x_5+23705625851199632144838151007444771940861867308503168232828875131227498392636800*x_2*x_3^2*x_4*x_5+18089055865257862478804596126487249252958369341311588386092636188370109606573225*x_3^3*x_4*x_5+4215947779048111040592348277898647079342487018255931311368391357039442058520000*x_0^2*x_4^2*x_5-28485936743350929139015059967195347426195148333675223067539925815154911102952240*x_0*x_1*x_4^2*x_5-30558760300899270109757306443377107338528432751553800327942677904036467199946000*x_1^2*x_4^2*x_5+188329160639411729013145308136640852522694692383621998231699977479866643810015680*x_0*x_2*x_4^2*x_5-90667579530260674286365234943456981469300097222192996576901550150335628730449180*x_1*x_2*x_4^2*x_5-65406370485369541294494774333578004480836772460219028160317586235826585793806784*x_2^2*x_4^2*x_5+6258438930717673987130454772064993111647727541783522560306337730668982694346660*x_0*x_3*x_4^2*x_5-78104564065587395806428181682811453275993687220790475194717575854975584448348880*x_1*x_3*x_4^2*x_5-121603003018882085326466665109087677257277687261286049785617088440839471806286270*x_2*x_3*x_4^2*x_5-41171987495426176672537177854991498434994843689426886511898260248296792763441950*x_3^2*x_4^2*x_5+41242624790189829927558096076054315145927885404232527773216128032874790396187200*x_0*x_4^3*x_5-41335340510626667632302525643699027877152841225207270595351735550181958508099200*x_1*x_4^3*x_5+229688195861544463264469216853383704244242964761878856043230673754210385958686800*x_2*x_4^3*x_5+19614878854400585256668161705391266619929966531492573036519953716042696787843000*x_3*x_4^3*x_5-50175721266148480498870225835531959885607453122663773226547370707179673345284800*x_4^4*x_5+2553184895810592450363821403140178118025868041682381816026180685894899906572800*x_0^3*x_5^2+2436720729528450986477447971195319415821176634043050578623931373970099315078720*x_0^2*x_1*x_5^2+1443365256750398041301864826630299172834780990953323573038397651826795785496640*x_0*x_1^2*x_5^2+280752984127507299435822018946668228047177110072710576862880690947799040617280*x_1^3*x_5^2+16292773140048101140400074344568234204519769458142136619795327455663566582264640*x_0^2*x_2*x_5^2+8530319079583259887967568231352295306611859957933337171295820263690876319769984*x_0*x_1*x_2*x_5^2+4359455638559407498456119551673195571063900585509458026204974537888369737133408*x_1^2*x_2*x_5^2+6952413472459371771716587680274284376509781954762679211315307297756261081191360*x_0*x_2^2*x_5^2+6614641585595956757567025847381473959825056756852198236356462720930741739683520*x_1*x_2^2*x_5^2-47620091967160828178343065295886302660763191195839059253066505639797842646400*x_2^3*x_5^2-3042004985536596653384295280222203034038732598173318003081693796649023795728000*x_0^2*x_3*x_5^2+4392646709267420776256651374715204293650177461295330963265834617760719391563504*x_0*x_1*x_3*x_5^2-5800150982042731970027176177028893031205484446584853605074638856218900669506652*x_1^2*x_3*x_5^2-14864744659822675095790454877266210398477320267334925299664118755739094727058480*x_0*x_2*x_3*x_5^2-13685096785896475692299059772298412407033028001671578404608097735921046322597968*x_1*x_2*x_3*x_5^2+7603703463224544421669275593255663185228279301683123351360074060848835170420400*x_2^2*x_3*x_5^2-6798895985771159898173151336717725953995208355404650130985591060285777071986000*x_0*x_3^2*x_5^2-15421879422838740197461624975650248355948070352696562973170249977011325389736334*x_1*x_3^2*x_5^2+2768973083637842720739738962742991436248296968917177151031646109105508471548700*x_2*x_3^2*x_5^2-9688689362556957531931505255423750315336061384149914572095670277999309313560620*x_3^3*x_5^2+52794430851631124622049250782786309695880472602756635906024162991788629781629760*x_0^2*x_4*x_5^2-8412579085819501063959936734854068510773129073082279398803773165931302775122560*x_0*x_1*x_4*x_5^2+11654997336686130079846701870182855325059752485978576289716270539129021808852312*x_1^2*x_4*x_5^2+35107803859091188024939208290953234162914210938504069593523622582367038623140240*x_0*x_2*x_4*x_5^2+37404994942158431768681309641304901743828856394321654477865652127729802244460656*x_1*x_2*x_4*x_5^2-29606573433232165450097887462655690783061294683904256718550167615797696513613472*x_2^2*x_4*x_5^2-88709978745517004835930722198883429318430037743680312169279232220494124933098040*x_0*x_3*x_4*x_5^2+28941201978901574137307421471771644717546250006904063181765368139646427225998402*x_1*x_3*x_4*x_5^2+36096616009506314143805799934283228687711577863748761076632254419188436559584648*x_2*x_3*x_4*x_5^2+18540644254666680311045219532198236955347373358729706726874032945813844395221230*x_3^2*x_4*x_5^2+87089445250882082391344476218669486447589301106996810825505097813420431924605600*x_0*x_4^2*x_5^2-78622082570610412127741500351635081159321415666845318345435297566898665850586920*x_1*x_4^2*x_5^2-94551357692670127992494723605946644672748104818056584234330855824199161638799984*x_2*x_4^2*x_5^2-57945833227939549792747588888991302336455276799822601429637388689038645706774510*x_3*x_4^2*x_5^2+98096105823860640251834561678151914444371305990540879515297060070760215864117360*x_4^3*x_5^2+1919373637300665553864360431156077096757526551597435180796250240769661332019200*x_0^2*x_5^3+622533740773343332562092323763953111876824298567419052164467851629975978176320*x_0*x_1*x_5^3+970310711307322635785787341744496402325027674371250287918044857470400443969664*x_1^2*x_5^3-8079023411673885100407280799695328803542044351213417429226299830701844741006080*x_0*x_2*x_5^3-292506264335520111157187964177228341351056918963855084475303277723710603147712*x_1*x_2*x_5^3-3213400357898263048686785904634126131541156350241781249117426503672448657175360*x_2^2*x_5^3-8062549647371528747612632402682389517183402069292375387938971310247906197437920*x_0*x_3*x_5^3-3067173530296757492154422202100719258327661988539931743572397636107126184897032*x_1*x_3*x_5^3+11013855944924937101826083684050943304067113781313047178633891668593751125860400*x_2*x_3*x_5^3-6468667202495880206995159218163433478421638809929872071381572657298303362726200*x_3^2*x_5^3-17075321339899680036171727372937429249550326482320458479803464652366849104585280*x_0*x_4*x_5^3+12837352636420080417043022539187526179281757305311279982078633251785924280632256*x_1*x_4*x_5^3-1818467524432520811083184106493705453753947661281452067680040181554399774828800*x_2*x_4*x_5^3+58773651743381068671816350172379712676466594881676217221099032563743700213116800*x_3*x_4*x_5^3-21020869706747180394284209600426300666051802989912826776346053937882150676641760*x_4^2*x_5^3-1313463381267069888489021961027809194231539359810270907719164095238410852339200*x_0*x_5^4+1492871974127126691099184817911646685049683285992699935546529931179398821443520*x_1*x_5^4+865593454312315204922584089243720233084434000429049644029873791911703065398720*x_2*x_5^4+3038789264481355196592125944265528191466428469296933254233918232705904080878880*x_3*x_5^4+23387814269506025133633253945056799140315710697459479407138823114517122296804800*x_4*x_5^4+1518023994717021846487338252644483629168914959483744604059553430716226714291200*x_5^5,
   108743290056044127256837872147604327107832408543059114530463751871360719200*x_0*x_1^4+727161405925967602910204614574203262024902610818264808649532183472635276800*x_0^4*x_2-1000453752505110322850472455036284501352353685844188507118855960073981461600*x_0^3*x_1*x_2-850875031535976497766681164093802771734160345233236700049881084695510240800*x_0^2*x_1^2*x_2+346507002883957108038469283995366931787357224219138745202340235929703143280*x_0*x_1^3*x_2-18067591407418373208195136462568630779161351719727949002249742465542132000*x_1^4*x_2+1532630185044519633177687359208774439830236430793836691944965201444827543680*x_0^3*x_2^2+5674644277769502165823340809571853876841787690815084247863044167773943173440*x_0^2*x_1*x_2^2+4800700734004259925923902708188593043091871861044712021071413329193488757120*x_0*x_1^2*x_2^2+207813036503432533189054644253604314467341894308527973954155246699317709600*x_1^3*x_2^2+814381876840666614817089450126579991545621113153025173169757597680128137728*x_0^2*x_2^3-1341210385559109130172336121532787299678175745989597608788156861809277453600*x_0*x_1*x_2^3-1163185485822585588656718046446536679191416005864438484667387313349348398840*x_1^2*x_2^3-1745285540089625061648055603190468338023364059381128074475215305886405495776*x_0*x_2^4-315904970374337726715494781824989436143042581435684821602036519713810517920*x_1*x_2^4-168890972560023887054027588819268483411504632682213164853937798474864884480*x_2^5-1490677207799734181986048859432038226646853099917136547472022952298129801600*x_0^4*x_3+2102385095205798694142545958097798655349637198933355447664167284209699979240*x_0^3*x_1*x_3+3246198802426322444538632033701743004429775929219118939667396612986203751160*x_0^2*x_1^2*x_3-116484267347626530701277709636264122176052140199891072539367112787736508980*x_0*x_1^3*x_3-68147270090627231233277687012682184845215663216258687770592555009894616000*x_1^4*x_3-4008761068113688800320070741861677422415179597087124493230203603969667393280*x_0^3*x_2*x_3+301363857792718346014775679755728174223007323817497085992652976832463709584*x_0^2*x_1*x_2*x_3-2152467773674215003281698876612018708409962677151427735279747523208743403488*x_0*x_1^2*x_2*x_3+554987875937898549839316007048903062067098948859105909044452563533504272100*x_1^3*x_2*x_3+1600720258671641329461015320348297049748457802915503478761785080166554218352*x_0^2*x_2^2*x_3-1450526279168360768167584844742848097763569658158138771611735380136518463848*x_0*x_1*x_2^2*x_3+880431413505136847600248598662213349703577679462363475934538837419312214970*x_1^2*x_2^2*x_3+805930965755126897013460921417312165666461337494615199185475231265267468424*x_0*x_2^3*x_3+3149345862035429002609279393669938396791454034050252380248938059315866654920*x_1*x_2^3*x_3+2432444083534498882790203123615577922720696389320666328083238157420460914168*x_2^4*x_3+4008500978435410128270814046669155562767993750879181795751344207039801583000*x_0^3*x_3^2+8519936425750946609526349952617822393943831808739301878887074771975899195200*x_0^2*x_1*x_3^2-2593008907075876079233030251652717735614805612195441366253294975622014384400*x_0*x_1^2*x_3^2-513989628937632457616672296257264094553467580872702070771861904574771679700*x_1^3*x_3^2+5336366132329140299598268736120061020375035341704993102077714288869491029860*x_0^2*x_2*x_3^2-10058800148612756402231468463246887735867463401046511699780129296485563566960*x_0*x_1*x_2*x_3^2+770480319574620973354271856270256868153729789444334149149919633112451172550*x_1^2*x_2*x_3^2-10458336188922930724050780189079943295838231923556341472009467412072871345880*x_0*x_2^2*x_3^2+1813167986590617669234540522414991932062767590775980223315675930956446337372*x_1*x_2^2*x_3^2+1105749342076493148097055441296429321210229984108593023120400006691537882574*x_2^3*x_3^2+2585091777399595291148955396911430161515738929007799877534566094690825030750*x_0^2*x_3^3-3738776004533359030827808661513174484252162776307288097814975487813819033525*x_0*x_1*x_3^3-196317661348610951851285097804030828649111570953233339328428500880918400700*x_1^2*x_3^3+2113402438770081968632846925810153254187934644215542567721652934903962568600*x_0*x_2*x_3^3+4996244601309833453795428395563274804485724576961650203879062536578010496290*x_1*x_2*x_3^3+3659534966165056341979043908445578782287967832369339543489629358652300896920*x_2^2*x_3^3-866466961606046046268897277695974582787923911648125795656332542103908153500*x_0*x_3^4+434366890787118095460269486121238542622696972392939553491607513315545253500*x_1*x_3^4+751518510088903264207076387939095101455040676877827812577204311242949119250*x_2*x_3^4-3808616203419319937354152854126551932370403147052729622099314777395559680000*x_3^5-3084616207692586858428106079329267947100850749343597236759459413884121988800*x_0^4*x_4-6953308198849570601718151709114037776153487524368916878430358509629393046280*x_0^3*x_1*x_4+4988063696839540148734283011412420318462887532110093006918103607874296598560*x_0^2*x_1^2*x_4+6683613811019972671460099697977924181424502446595840672124294204376026861060*x_0*x_1^3*x_4+59882914242601220843734722346924481236713775520318225858016126619023834000*x_1^4*x_4-7142526177985040066333478843293976483100257591204101912770564311305486575680*x_0^3*x_2*x_4+5677922106287829232452831984103086683911929950355484138250678565378073449792*x_0^2*x_1*x_2*x_4+21377315478011493899380902241057530129115998783253111436721764080228431002184*x_0*x_1^2*x_2*x_4-2975089901502625996840751509369478425152137226685085119997409490280090906940*x_1^3*x_2*x_4+10972243419670299261700544647743023674377236410303381722142127853976705617744*x_0^2*x_2^2*x_4+14571043449397642342332987205277465867169423959259176272475837983702581045480*x_0*x_1*x_2^2*x_4-13926183852365747398709828777883020562599349199694272966626354650424352730706*x_1^2*x_2^2*x_4+4593909445372908666632404458849496706164644596406909154842205765542113360952*x_0*x_2^3*x_4-14189829138820054170018486989323989170592154235519439727549208616633973883568*x_1*x_2^3*x_4-7398460662732486417246043933037702012416965151077152515435883575395075124416*x_2^4*x_4-10754083023908852570302833448051083864653760335544363980255037525176401632600*x_0^3*x_3*x_4+9518684366146103699207981742100082725091734946858946003953864008706688851760*x_0^2*x_1*x_3*x_4+23889665743542422332302364127387395610107725731149821065080668156083989773900*x_0*x_1^2*x_3*x_4-2881417927924419595533007474371440904130086822978820424892816235420134022260*x_1^3*x_3*x_4-16542556811179493092804195727041013528833240842500769089576669495746623290400*x_0^2*x_2*x_3*x_4+28714933350236316381212568632650622574209295868428613234968016038436828682400*x_0*x_1*x_2*x_3*x_4-19320374905726206161052604530314847977679562273468882804943401093293569314866*x_1^2*x_2*x_3*x_4+8558084438459935953516045458433790728691704768482752208016791634139029935280*x_0*x_2^2*x_3*x_4-29250396381955783569307358199735031433740511052622902185050545926093304774930*x_1*x_2^2*x_3*x_4-9150684831355097365080339507373302018073189193260980454120266049435676964114*x_2^3*x_3*x_4+9247070885018587246313518456569162036507550620641063791077356097207636784950*x_0^2*x_3^2*x_4+13960380974929997501654976110044008539387678539613094451799790602559262497780*x_0*x_1*x_3^2*x_4-14369472946656482654980511571694560987569301879135409220946594661170329028780*x_1^2*x_3^2*x_4+896349481785096127039967542196944267353239077170120676589510716617923578020*x_0*x_2*x_3^2*x_4-28932307392355774700678662252713698877445999020021727741520728604059391408466*x_1*x_2*x_3^2*x_4-20634994504613969198071692705721571009149631125036463138785654600219210764540*x_2^2*x_3^2*x_4-4430309616485171229182911018348135338424714141451000491959201839075392370325*x_0*x_3^3*x_4-12442918468564832341921752688327908095361344956013419581217138399570662218400*x_1*x_3^3*x_4+12031050642673768979240052352326606471082610439243072536954283746299440017040*x_2*x_3^3*x_4-826619428377198155458442587271021534128458637073781000908769634748240238000*x_3^4*x_4-1837222599471495432110558574731728287738776975016940077830486666787255028800*x_0^3*x_4^2-16624888839012827820410510180923499208205393051754561145387028270221401007000*x_0^2*x_1*x_4^2+5981646597438633912462076110720952239241045339024907304420931614223284450300*x_0*x_1^2*x_4^2+3225184712254583838364722268841258269939830634099199476254338030330583545400*x_1^3*x_4^2+11726074327099896718070742681838475207097747272377175525965151206941435882000*x_0^2*x_2*x_4^2+33477369089973334596547756376659738197737618535352324603334639833225990243320*x_0*x_1*x_2*x_4^2+16682871020923763553242769999560806140252550227724612588123643429274911166900*x_1^2*x_2*x_4^2+36936384527954790314188115171610480099753237604931146040184937415364136616832*x_0*x_2^2*x_4^2+32106821673870633945918649178365393194576419592653819913764303574553177051050*x_1*x_2^2*x_4^2+23877336868609613382452983390833140503512239897769765909655241449583198340312*x_2^3*x_4^2+2839241596564648479025001077250092541462003403155562658584972078966360493200*x_0^2*x_3*x_4^2-3354989603137790401131497494734939474090784887120403696329010131620264369820*x_0*x_1*x_3*x_4^2+3368289674573135331673897534113860357707752512769899996190949518785852422440*x_1^2*x_3*x_4^2-10398895915569580983430639640685231718617225512145843390340517902840005271740*x_0*x_2*x_3*x_4^2+10018345962132477490336780471181231347763317466465561145728637537258104974890*x_1*x_2*x_3*x_4^2+8010609975958728648815540916085534230161561014907026965600981329362546548012*x_2^2*x_3*x_4^2+11466672464369581865613802678693506917617495625969711811667977565261104163050*x_0*x_3^2*x_4^2-13232815286536729411613118595003747595783602065972828258081380784968828753700*x_1*x_3^2*x_4^2+7750286690334702553154572874737066544330526242483544078048890942544666210120*x_2*x_3^2*x_4^2+251458469034442287689258656555399413589690387947246363538886893202892424200*x_3^3*x_4^2-7131296706609600894166890591182612302075199919813541630306280542174136582400*x_0^2*x_4^3-27571705798396627927998735346831435242047674550225026300302094059825820384800*x_0*x_1*x_4^3-358413826989922365239236273300696152456651289067237452376698241770113502800*x_1^2*x_4^3-44481823913717965200763292281091502666370361759935229618524011000329142596160*x_0*x_2*x_4^3-23416145060399790369066342841670509799784922674696825215223751580445921120600*x_1*x_2*x_4^3-20990841725091017708425248959888540436649264343013825556064115362858417059440*x_2^2*x_4^3+13400358265965359849260945375636381565984526026075632301310123499027018392300*x_0*x_3*x_4^3-5549238818044923583155698948235790579540478851976721055800628774030770397500*x_1*x_3*x_4^3-68375404125234533228102253501512333950020145198101678923490096588539666343180*x_2*x_3*x_4^3+25400746539597846122041235606012245351409319160389667861963575396552169698300*x_3^2*x_4^3+9846674418347469029208349177933326986341721306567995353481691694911405832000*x_0*x_4^4+4000203008492064281734639671373491704507754285823972985746520571918009693000*x_1*x_4^4-36000641363400945069645863449060788987803724292941307077754349228748449167200*x_2*x_4^4+43019636721239632331454468019995166869194527154017722957867760364583219465000*x_3*x_4^4+17930819129296779602671917162813482889024778017537997507399990269555955992000*x_4^5-758042926745784232470604397312198789778241119548982189401144582936147404800*x_0^4*x_5+2222460024566242634852972531184269066364794015329847760150727420457786972640*x_0^3*x_1*x_5+2628356561877330903788354299800086913293741944396312167119926763771061412320*x_0^2*x_1^2*x_5-1158750955824479138867902023860337234080442933393797137294688084625482531280*x_0*x_1^3*x_5+4398654863570397450673266080580533887031707294708295867718084637186562400*x_1^4*x_5+1480099236611399174753723784694418532239713773383641910689897181976661113600*x_0^3*x_2*x_5+5145314982915491555925901300614560576856896130015448502909435565453643807776*x_0^2*x_1*x_2*x_5-1968558894266320225156796541101365189985936112942353604062936981949643869600*x_0*x_1^2*x_2*x_5-65784745187460790972863329630208142538267647022862232856253095164652254560*x_1^3*x_2*x_5-14566541622107914349242463196354152076381048250371733574965396587285366981600*x_0^2*x_2^2*x_5-12199985736169214429171576203416318117802957172018445168105248217334838348160*x_0*x_1*x_2^2*x_5-644066604093561009390876431781716506555559027840730628481775305961876802968*x_1^2*x_2^2*x_5-2036273654608075386744468896320327550432940904987784629831900383697858050720*x_0*x_2^3*x_5+664359623286284302573749214034006240677000710756969293078619490201480912992*x_1*x_2^3*x_5+450327931567340650358374876253112885810154994006604826036264216007021207424*x_2^4*x_5+1435510415192061285720394495850918908870841939720502293511354171620584047360*x_0^3*x_3*x_5+9639651074154876183848920740319890482539780755306028509520350546716635296552*x_0^2*x_1*x_3*x_5-5684556770796439323147824896822107973273067817756466088822722631354770177824*x_0*x_1^2*x_3*x_5+715194115095074594818390887493270394713426647471615489891258484039174375020*x_1^3*x_3*x_5+9224327022777032448075300161520251424553513640222555328864541580985274872600*x_0^2*x_2*x_3*x_5-11726252720395173540579514355785482630737763607542130995179786079879867030192*x_0*x_1*x_2*x_3*x_5+5181437841181786644304984916512357768149084635927401051304449992998795895372*x_1^2*x_2*x_3*x_5+7957567927643677487398291590927390920210514732971373423916950151533729799296*x_0*x_2^2*x_3*x_5+12559384478374382180476991312291390746411747067044960213152085383820388953056*x_1*x_2^2*x_3*x_5+2657029961690086275910389916150183621527621030327323805601978069017109052760*x_2^3*x_3*x_5-907567844300854191723515170870498077763979849983988612300066583094978389840*x_0^2*x_3^2*x_5-15593878067412651771771928112184723725548798349657437907829803369977898152950*x_0*x_1*x_3^2*x_5+1747793961351748728999072923191437259653538778088125734176127066466780434770*x_1^2*x_3^2*x_5+4033946531537726839003268702525323651944591756738105913381737438252536482920*x_0*x_2*x_3^2*x_5+12148249504739927982619299997384523907582595700565084973693513213665564058716*x_1*x_2*x_3^2*x_5-951549658624051107291846885104017300507283323864696296751844985392792929176*x_2^2*x_3^2*x_5+1055718338569070589050457311180953537579714028812886707935649905544518353250*x_0*x_3^3*x_5+5376285755669942715632807403301046302896123408529906355604621993012374315910*x_1*x_3^3*x_5-2251368415929672865390714624997324016867821607439951084816982362198527719370*x_2*x_3^3*x_5-9386232530317084312827003376955895357692577236409908007355882555866434860950*x_3^4*x_5-10689957575021365875666036951630918561758692559903515883660556001013107848480*x_0^3*x_4*x_5+2664021649492981771853762552773690390977151649935166322657682079026163774904*x_0^2*x_1*x_4*x_5+30834555944220430287201099136019790316736420682246262868526158153268221344932*x_0*x_1^2*x_4*x_5-5809715417627769518804203526083851711031880211791660194951291983544370700*x_1^3*x_4*x_5-48432991457627742479717955392864760719128949263250015561652300134495485523400*x_0^2*x_2*x_4*x_5+19608059490433423326774175140030749812290686221362157074135731939648363697064*x_0*x_1*x_2*x_4*x_5-13155919968149053037082771321736555777543486106562463487790883273852412558472*x_1^2*x_2*x_4*x_5-10825157838382944177004266659441091926505587474767112669648547172082110762896*x_0*x_2^2*x_4*x_5-21612556670748753777517716678854817265498070698568825847002330562360328096872*x_1*x_2^2*x_4*x_5+7305095034345752418497728678478152739170430626374442568523245063091921329664*x_2^3*x_4*x_5-3518880447928449421144894832778470003662460449372342148090633727414871167480*x_0^2*x_3*x_4*x_5+32400743355504676868596876393129422962865250969661531927266527209388437407550*x_0*x_1*x_3*x_4*x_5-12608191151259797884925266722075392791630978862992563978184062553999756324830*x_1^2*x_3*x_4*x_5+11785451097047542998156794619433858553230573783893018127891925418777038040300*x_0*x_2*x_3*x_4*x_5-43306129703315438753697858688671575726158037015523534902205821733131458780024*x_1*x_2*x_3*x_4*x_5-11325194354343239080038645824622310290387200299120371164202864350814479331528*x_2^2*x_3*x_4*x_5+3937883393779717562579440776645241242039331471836831788832062357338955131620*x_0*x_3^2*x_4*x_5-18892845175717974739304796584821839527198327540227500636061141478007842474630*x_1*x_3^2*x_4*x_5+17207843591448664452456449516003884100182067041392730752212724791249381266290*x_2*x_3^2*x_4*x_5+13463111627885958779394684899012443254924105311699594392877594001229207726500*x_3^3*x_4*x_5+34608601541696521957222141437002879664358339548136976453488451572397904316800*x_0^2*x_4^2*x_5+9006991763496191755499655002250633636220757239904333647482248427821742790860*x_0*x_1*x_4^2*x_5+18013150885382369436996857608711264492585626624777724392210909478936178311020*x_1^2*x_4^2*x_5-21870724347238521362573136401029821925520901262318955066716870262462858498880*x_0*x_2*x_4^2*x_5+53653339198348873473929435855100550418996872593239570005303562199527224016160*x_1*x_2*x_4^2*x_5+77251835544401812475394572003429959872470990937131751277341438990556113338400*x_2^2*x_4^2*x_5+12155336290011405339985640082201991754590444618952024711690508392102847816690*x_0*x_3*x_4^2*x_5-8606924998601309363470640884212622139873252630237102248007587713675887472210*x_1*x_3*x_4^2*x_5+22150613343619413001909638702398292605408314956545569996977778771194644052720*x_2*x_3*x_4^2*x_5+3382224141349713377825131804609515701768803470400320929097910221775039839600*x_3^2*x_4^2*x_5-3373158755911797329063299307716255431073174034863471970438664240231173114400*x_0*x_4^3*x_5-13717459345544399210445314795222342595864156672764103697038126306762422997600*x_1*x_4^3*x_5-120365235202936908520988274299742947303136219699921715661787917391237674692800*x_2*x_4^3*x_5-27338337861994249381755129129951244880671529653195571327144392347001869951900*x_3*x_4^3*x_5+16827264458200055667977919147000537823808333181379347397574312702393852409600*x_4^4*x_5-262994014093448886272798147249518425348175869672406549367100750310823568000*x_0^3*x_5^2+1762688859128805789179287472634378153411920479692927327796829980179374287200*x_0^2*x_1*x_5^2-3404895192025522484164329956696361862684760551380970052675180093479329183120*x_0*x_1^2*x_5^2+6690154426227719557889265108913276851865445688185617301609245476659277600*x_1^3*x_5^2-4925622591911414246591541135657772798827419459807990356157460008138825108640*x_0^2*x_2*x_5^2-4162114343149687746775090307350499866973748498048042309825768438755694927072*x_0*x_1*x_2*x_5^2+503740010166264807619364584284260240768472767426591302039252425639452995272*x_1^2*x_2*x_5^2+2877626804612754666755935130166611332391041251872274182970241081625977250400*x_0*x_2^2*x_5^2-169012925619686441791363551180409658354046313785657266853920699375463126336*x_1*x_2^2*x_5^2+344466746270217450824020274525711652874508700459898256180521514378283541728*x_2^3*x_5^2-10415417977788516014232117441625708795009797433862127244803730195143727631520*x_0^2*x_3*x_5^2-21164779347113156533372006476894640906599731075507514116303116244566272978648*x_0*x_1*x_3*x_5^2+2359592792287428931285943578088490456907681284705022824812619811041014603850*x_1^2*x_3*x_5^2+18872865719036476961129793632494679113689258238301134008026098487392378222920*x_0*x_2*x_3*x_5^2+8011124405100898685971200589585340419907507156753459162600103122238369889920*x_1*x_2*x_3*x_5^2-8037872502555271732972822928027436214427748141345834100947419989638128730480*x_2^2*x_3*x_5^2+10640575266115900348559898392082710791063371211162690289293645787553121478280*x_0*x_3^2*x_5^2+11180677371662579611263849192163522846731993637323198226192364277742273065024*x_1*x_3^2*x_5^2-6480790751316010087083028083746370108529168711364511136646085143114545131870*x_2*x_3^2*x_5^2-9426859121899770195214083030946719522856620284791022518524124268672492637630*x_3^3*x_5^2-36526018937241906721148429482988685837105956438320808229409552265646186681600*x_0^2*x_4*x_5^2-7629543320853173038352893732034684584076821341012873446326411849004745246768*x_0*x_1*x_4*x_5^2-622030934847911233098573640569806856068839548374784085475366957798279094726*x_1^2*x_4*x_5^2-55515625746909392735120561489863912465758584929911140060081166160009419076440*x_0*x_2*x_4*x_5^2-11141379571325854030211244310311548060413936578931413292964402420743801040328*x_1*x_2*x_4*x_5^2+15346731660895232415163835390717290789756112707188638691921451139523460326552*x_2^2*x_4*x_5^2-3401106080388574263389655377212286073760714265861777432065805234270434633800*x_0*x_3*x_4*x_5^2-3787314167029724971211303505357933239461254495283751142621583531316741598342*x_1*x_3*x_4*x_5^2+16853272068378627327927853977832919976793032014035717727115702755144838938442*x_2*x_3*x_4*x_5^2+45789764102814659585800370830890345987451611671089116143426624481846369416130*x_3^2*x_4*x_5^2-12054308791160690002082173132061514521704610978389380314966828818717887776400*x_0*x_4^2*x_5^2+23263239746055628888090909340084228499756816460503100722128591047882733732310*x_1*x_4^2*x_5^2+20922529402032089367442303424090548772139851267434605965288801480721038981304*x_2*x_4^2*x_5^2+35431533436133881146122678753720280881473702574913648191471801291678385219780*x_3*x_4^2*x_5^2-28752154769501746207526537201241417946934961768163884144023607296134902510960*x_4^3*x_5^2-5055906240474382983711425359340810130450970855513425688377339244934677689600*x_0^2*x_5^3-6114428377582050830905824837688396104776542825677164719692258176906752085760*x_0*x_1*x_5^3-462102662812822577737698787962242765826262220501965945402658041385740875384*x_1^2*x_5^3+8837447246215967056481583846662632312551582401814564428853939433936700676960*x_0*x_2*x_5^3-829642414633486723275091168615437132168983292391450405032056443157600857440*x_1*x_2*x_5^3-745360466718255214714250863900453747593123057404335628285334216486227330880*x_2^2*x_5^3+17616111405220987266005035871312702340953401707963188297710520309589272117760*x_0*x_3*x_5^3+2992370496820481093590634608934680833060723612392258139164328917245635537768*x_1*x_3*x_5^3-8694581816822130597875887189108838848500741487744843317196456813951232020320*x_2*x_3*x_5^3-5272472001809911903216915685977565723234007021443417597972142100705513203720*x_3^2*x_5^3-19198948374217766140018519883347795247593862906511174146634942761014226115840*x_0*x_4*x_5^3-6575590049012825906231214887709704725385276736073925367528193552863334524624*x_1*x_4*x_5^3-688810979419464884375372356178740377438508791730896756461858224051323838200*x_2*x_4*x_5^3+17383055577022828049117518901516942029614693923229532721671695149265589144080*x_3*x_4*x_5^3+1995144252185715795445252512373437430052166882553269227290035707036813904000*x_4^2*x_5^3+6976248956713627717021580567993562045679363482752330305446451720713418732800*x_0*x_5^4-483506346705270351181965574585263194687110286196286400356190881107425127840*x_1*x_5^4-716045550765820030397968431327537319276551176324813912879584636440554134560*x_2*x_5^4-1878206736299018289009840056208625100796338854095340908084825609249863265120*x_3*x_5^4-1611209042337778214687301377812109811658328769625477369407509567807486914080*x_4*x_5^4-3163439989786897112425792007811744070997514287957627991406600946635420800*x_5^5,
   5178251907430672726516089149885920338468209930621862596688750089112415200*x_0^2*x_1^3-13988654712781245863912401956916780858031259229959039467671600865184576000*x_0^4*x_2-999751676366954206604166756480553165079778185665070440700256710542039200*x_0^3*x_1*x_2+14563483213378902658692224842549250245825041212388990221495109122860721280*x_0^2*x_1^2*x_2-7324716216571916717346203079791730727987291655583119495846356801841680800*x_0*x_1^3*x_2-340197210034035326927290754062836785049409386786816879726851279864328000*x_1^4*x_2-36420090052595719352412748595589152155497127739416860576712743065778393600*x_0^3*x_2^2-86885868319095923464330563139813549762214829076576600139304776608695597120*x_0^2*x_1*x_2^2-98275589450024806070456820163042463733733180459508993540583432481953675120*x_0*x_1^2*x_2^2-6107468740198461863318940365031981598366297813655168234688861661185379200*x_1^3*x_2^2-11622784191584419601983620449413736526402625302049025409852520419129842880*x_0^2*x_2^3+18602384122214255352863414948609244195404581567338461418393799839881973600*x_0*x_1*x_2^3+22636369382968287017938199132287551760041161035932197925581193672734872800*x_1^2*x_2^3+33896420663023713998318412449806811519331935270780491371665062546357708032*x_0*x_2^4+5446222936091395128558599865098323843336081595097248525357887528363576320*x_1*x_2^4+4017091924922045435687170578970547349149869677067059579453856271581201920*x_2^5+22572825711082639900090765708522377224128698305905860682488571085522107200*x_0^4*x_3-60817870164103462789235323826524376709109674729997896688653206885572479480*x_0^3*x_1*x_3-68947991844817264424614889957225829977401513965659440314930391546323972000*x_0^2*x_1^2*x_3+947721429846577487556961091804297409848612810103221306975484799867587600*x_0*x_1^3*x_3+238453075074928015265041920430194200862312830492110590372761896802454000*x_1^4*x_3+61124699053875939948666049594804002397999119059304188112531149076565431840*x_0^3*x_2*x_3+6616445230138376314120972918863089923941281175185307557522517227466781632*x_0^2*x_1*x_2*x_3+50693907365656547346199465956337228868403379080079272283807433295733085280*x_0*x_1^2*x_2*x_3-13571354389647498725565608014174696017150230590191202237565239843090348800*x_1^3*x_2*x_3+7615318174301104615381927986376028168214524497981919045283100653851597280*x_0^2*x_2^2*x_3+13076583970221450420563190487557235352999553599975341095873779351711154288*x_0*x_1*x_2^2*x_3-26708830451917632755781502029694409035889801356699824672957379885453641120*x_1^2*x_2^2*x_3-28824505634359119713978568134342179938864865952168537177459591741949739488*x_0*x_2^3*x_3-67114514102556002933317094386058068400984408785517280620396604283867711680*x_1*x_2^3*x_3-53429208420701578102846547373206994539376949513162145069133845153660884320*x_2^4*x_3-76822783788472440417678792129547589701691675310522267763525349546549788200*x_0^3*x_3^2-174424116214686432094596082345305784761875443568818864292914797124653538800*x_0^2*x_1*x_3^2+53650678992704806352280894147660803741177073218853453603606548635572944400*x_0*x_1^2*x_3^2+12586235004442877498806246041391822861317445981810722542787042537968916000*x_1^3*x_3^2-116343777875500819693580282737432773951473124645906946493771997572557127280*x_0^2*x_2*x_3^2+209977326450497458975241864601071197664197023607855207059706189305686917320*x_0*x_1*x_2*x_3^2-17994498502167416710847518081653517602437671598017063210976370963488705400*x_1^2*x_2*x_3^2+196771988715554109905176086985063814530676578984308103206263300821555186620*x_0*x_2^2*x_3^2-43113990518705316509487201848960079014872080194195285614340034588837340260*x_1*x_2^2*x_3^2-19261176432209678570739473275283698493423469269199133734770048377930524780*x_2^3*x_3^2-68369255188123587291853011414636430043515770903958627531958382905952840000*x_0^2*x_3^3+81385661928946605489136438192102244388346136497527143694459279254572203150*x_0*x_1*x_3^3+8013825756351647336360821469606599790535023109299694701794040733203358000*x_1^2*x_3^3-37425958181760435067732653274534350109562147056219870866802133875465865100*x_0*x_2*x_3^3-104467936050446251881571316129589780243818973704700046504038696264033645750*x_1*x_2*x_3^3-74046720512636842335307326436753313489971575777683684692661427491967921375*x_2^2*x_3^3+40124752805154677086308521944590704742024965434239488715750523302060885750*x_0*x_3^4-7637696211186381403340133923994712258562391625286340649766093941116231000*x_1*x_3^4-19904654176207465509974769246411121689667787767791760817981098077892567125*x_2*x_3^4+78741007504900172627701521864244433915680752171035615563436346288104670000*x_3^5+76308055200944792840676516898197880041772620080544763959294664489468214400*x_0^4*x_4+151731297712231951925019531322140490226144726410616113904847667904978906640*x_0^3*x_1*x_4-131384263041199108395804678429069775865196356852078630562454962325246447200*x_0^2*x_1^2*x_4-155232561690459586613444870876973518848997054852857473445075217571130982400*x_0*x_1^3*x_4-61302714513456715074561116128186595019903336192183773196930542334270000*x_1^4*x_4+162710043508594534444817263469047542301912864039917992572800283770956638080*x_0^3*x_2*x_4-130584404314519922847339973786736877564105295230369541034245657851644038416*x_0^2*x_1*x_2*x_4-475673547325686630954270320210098016326843445910597715658454181992605647800*x_0*x_1^2*x_2*x_4+71665108078109274743704333659688620404563673412067036610564483422119720000*x_1^3*x_2*x_4-283484947320462123474216372709136654365575154355797090040080190113491814080*x_0^2*x_2^2*x_4-275329316860507493125112768151521978131152311527739935312810462962034194984*x_0*x_1*x_2^2*x_4+329486153702410183701217358702419715811421851467130799669331116968629360880*x_1^2*x_2^2*x_4-71725896685795164419133407961933728272910824632122543896141784408263178880*x_0*x_2^3*x_4+313742024016424580407399324308394156820798815936838894186181487343375947200*x_1*x_2^3*x_4+160046280190708139976502312105422834532941530384661841281505599932435296512*x_2^4*x_4+211771828009076687981875096818550180545351415213835655620520612492762145200*x_0^3*x_3*x_4-231731185737225773577742709062342841497006613871748477168534886207913414000*x_0^2*x_1*x_3*x_4-516577192239311034810839625508971088562323575872534360197244470963048187400*x_0*x_1^2*x_3*x_4+64841057998179103779419483538456278455386550009344298959561853888700120400*x_1^3*x_3*x_4+435983116468885496565387750309436961259903675051401589958980851586997225080*x_0^2*x_2*x_3*x_4-617634994861554638665817176664682340719493114389695994362124680188185704520*x_0*x_1*x_2*x_3*x_4+439382340283519611981457104223681133555223000656370768219497201102994989880*x_1^2*x_2*x_3*x_4-118466067350045386537161933962750129492328591250845435824041386752444554620*x_0*x_2^2*x_3*x_4+648395293845291018585667216191000232890555735896266388914927953148546731720*x_1*x_2^2*x_3*x_4+180991000937130969196128397860424730828609375587433639636651311615389618192*x_2^3*x_3*x_4-144993557010203523061331801997500746592045627265139228902808629951435185100*x_0^2*x_3^2*x_4-270624157951469946489733100893250423330000019369627296401499954114460990150*x_0*x_1*x_3^2*x_4+316546114175637476187462547559631105709200271761689611096122771926534664000*x_1^2*x_3^2*x_4-109183966085190967762323966223392619523902675160155844497539989770456382400*x_0*x_2*x_3^2*x_4+622523429898536888030455296948827984089668164378822036843938037636650184280*x_1*x_2*x_3^2*x_4+426696312678544748246109451424135943110495446477681371902913220387138415505*x_2^2*x_3^2*x_4+45990501926870980027794288068132937022889134940926984434777679703725815750*x_0*x_3^3*x_4+275357692234653930213724769344853395995064052005316247045688869137137005900*x_1*x_3^3*x_4-250453324074542708654383381572869372069461083614814457006186559723368604625*x_2*x_3^3*x_4+49678509799240101038412708428486423033881182888990743502922892941577018250*x_3^4*x_4+36248414210251682969474714308027197642224440137491918867364728148414211200*x_0^3*x_4^2+366759362891663477822091339080961674023670989749535338629356424808018932400*x_0^2*x_1*x_4^2-156887219294915653242397273300739044317336658708982793170531273458015944000*x_0*x_1^2*x_4^2-77805527192370972246821531134746287489243230107436633153058281407379002000*x_1^3*x_4^2-285499917699314719751844257424002679207258540507640694197847903578372739520*x_0^2*x_2*x_4^2-752130143732575842662308414538355206983494647343357754262947911597334689360*x_0*x_1*x_2*x_4^2-397273117637523422549987512906213724449024039950941630248704295965369157200*x_1^2*x_2*x_4^2-902899957507048754108938806099158694686843536616637354861138668340520242720*x_0*x_2^2*x_4^2-767835457845276776370004781112101256611375736742655562812053352777033282760*x_1*x_2^2*x_4^2-513634105911081050398225134991399218591268899151065213212424724211361049920*x_2^3*x_4^2-30688921446989478909153831398622717348296178609210529815307440412698862200*x_0^2*x_3*x_4^2+91115735498524379424481066672705776345585170261903527180442626848173148600*x_0*x_1*x_3*x_4^2-49654718616522489296849743150285750047325692517420745330092815078153128400*x_1^2*x_3*x_4^2+352856895015663386679294032605507561418577037280044889060320301349316237800*x_0*x_2*x_3*x_4^2-232840130680869615003135883152501046302223098984520529058266629517938455720*x_1*x_2*x_3*x_4^2-155549654511755197606447201798817002577829643782440014030786690934162778540*x_2^2*x_3*x_4^2-243042803259937658516161723458137592185892142770442689646547107609063156500*x_0*x_3^2*x_4^2+292645524870744189297682871117647414688176654724173779554488075809486071400*x_1*x_3^2*x_4^2-228290734867903333536635751733352895538104051013735734417553708688460235500*x_2*x_3^2*x_4^2-33511875167790427716931836149733608691374536073963455147761451854777437250*x_3^3*x_4^2+172790543477893005226676507722491350121294642744415338033596537672789496000*x_0^2*x_4^3+677177727410399759369547407950513533303170417755567039909767783910929931200*x_0*x_1*x_4^3+7117085337272965640165062436369073043170747079156022636513330639410584000*x_1^2*x_4^3+1061929990691806205611918725429327939692506635040581930953444989171265054400*x_0*x_2*x_4^3+547348759462068640983523311792822182151000375296355868449285609279712542000*x_1*x_2*x_4^3+480903217801086662558529046890996719310483864829131710241268065798441420000*x_2^2*x_4^3-294881162975774926033458640522348373631016329210887603943255503991848664000*x_0*x_3*x_4^3+112788802485506341741461849669995287065545282239258683496339861897351987200*x_1*x_3*x_4^3+1440419961683729794824582025758918067088123452294883737873216622422962659400*x_2*x_3*x_4^3-614412478628357450621159186624320238177959171752265165700005949238081481500*x_3^2*x_4^3-200577205805615182979238679267450917067564246794532504930416701725433664000*x_0*x_4^4-72997175534365318104208012833217868483393825983557321454372864235964024000*x_1*x_4^4+816768324024863824463984364837528790457671278263500104569630049520040376000*x_2*x_4^4-1034145761339246529355965836112085892073196577051466817881643273479591912000*x_3*x_4^4-441386937125545025545458498148812717255969813987444721902320698452803040000*x_4^5-1663609263478298087203161579437116190600588138605150375148055670656624000*x_0^4*x_5-65422720869116706935592970236075806546455804107621075147935816043945100800*x_0^3*x_1*x_5-62014195887503691531138467845464928808253159371885731726110351725572768800*x_0^2*x_1^2*x_5+20653802279427506463148144983559542527888465577920298413216771608621156800*x_0*x_1^3*x_5+33135374513134412399902303935639282249068104694044345963049687941920000*x_1^4*x_5-17772370281231527315482842438301977868789330831717918077933416685689582400*x_0^3*x_2*x_5-77477962004441073445603481965630460352186380172077604801245994032224922880*x_0^2*x_1*x_2*x_5+40467151693141484259600527035025529286199449292848620082233360408368547360*x_0*x_1^2*x_2*x_5+2680485596132819156423428202202984918333778985319022222196919792056025600*x_1^3*x_2*x_5+298286328624036243838276815929346571681734973394440474799363099300562944640*x_0^2*x_2^2*x_5+232826630450139984201125839843338664008255726283617115326359590054162804896*x_0*x_1*x_2^2*x_5+16367673865138276631517726751269516701547332330977745210656192253236418160*x_1^2*x_2^2*x_5+47803353066972282566113167801055182234824937226012043725483212647495104704*x_0*x_2^3*x_5-8295482535993025765621208656589251930729921653085675976864453285121369120*x_1*x_2^3*x_5-9700605518545129200586321505518717020642024534923707733257202573302827648*x_2^4*x_5+38032688290839702474881956580450049466055367899802318857137025150604679200*x_0^3*x_3*x_5-153146271641492869270862149449350391553540081657702796896010902761602638560*x_0^2*x_1*x_3*x_5+129079655619483782570297524996747980988968836372743445905843227060930155280*x_0*x_1^2*x_3*x_5-15163911951889628333396081096816168267118951789020363144465049776121711600*x_1^3*x_3*x_5-224619446652890825410099403431054878063329171083769712537628862907961286160*x_0^2*x_2*x_3*x_5+206231823858178206382327700131874679405321352641434868331267226709255313752*x_0*x_1*x_2*x_3*x_5-119166890774023323211288030606383838985033709622400901596789782684558469520*x_1^2*x_2*x_3*x_5-183714574950269715115821339720920252002057736273177710297575258008383175664*x_0*x_2^2*x_3*x_5-253796799618859984796194907473392014643715341927563604921456101957401007616*x_1*x_2^2*x_3*x_5-51529798596683449451306646355479387281902284598159677994671233275429669968*x_2^3*x_3*x_5-52909707030526086185126598771664858145549720884965066421381347800140131900*x_0^2*x_3^2*x_5+305844654499642721860889626382158372215470024764405826388624149652249458880*x_0*x_1*x_3^2*x_5-44518549331242617037827255079860788731150398439289631710667753301389592200*x_1^2*x_3^2*x_5-51804536635115762849713558821827690311640666272407855522506994999301311240*x_0*x_2*x_3^2*x_5-257053572705797519711041494626871664453789421943918441633988806189749066820*x_1*x_2*x_3^2*x_5+32813657903651934426391548548404269938161927212634649445162968235095702220*x_2^2*x_3^2*x_5+31689324027373290242848583222382971776953428340121158891610107799123715400*x_0*x_3^3*x_5-106079756439067179377271370388999767206543232107145282653674665259266775250*x_1*x_3^3*x_5+34920483924783472847914859818548960451306120680157190977712724950171536800*x_2*x_3^3*x_5+187508442534375764086162927015993909609923496820328184581655332106047245625*x_3^4*x_5+235477309865739378870520114307451076919833398941986823188543901620199203200*x_0^3*x_4*x_5-31758759464375681708967227028384082821797337061433400857534043046229543640*x_0^2*x_1*x_4*x_5-636473059217544759370841712583123396709290407030301858407979498577534802840*x_0*x_1^2*x_4*x_5-312068872085885054399356687043333945375074181370928303189836725527117200*x_1^3*x_4*x_5+1146622604483279331535271770184387676331247695870229253060616245068290458240*x_0^2*x_2*x_4*x_5-317345579467204615223826034347724783241780128706532375835142843877278018608*x_0*x_1*x_2*x_4*x_5+282630923527404327150164980780806362849619728199015165722861221501459210920*x_1^2*x_2*x_4*x_5+267686590152319028633201657867041844121167120054022131878740561676444321152*x_0*x_2^2*x_4*x_5+426555692727469125538644831330789652022009772043330651165061307994865982456*x_1*x_2^2*x_4*x_5-195565687203698569001149100869667952761728477144537254387790540173648374016*x_2^3*x_4*x_5+203916898566925660006190718543398164211954292985817845094816055782404911300*x_0^2*x_3*x_4*x_5-662761011689636970296914073657230567532055568061473464538651308834452552960*x_0*x_1*x_3*x_4*x_5+263806871901584194962598257577573459606445730962641459859635637669156200200*x_1^2*x_3*x_4*x_5-425679925918677287026104564271811953336199288032402898520785631886785324600*x_0*x_2*x_3*x_4*x_5+882165449151548911189192988226741766962798403513281895045075810090635373588*x_1*x_2*x_3*x_4*x_5+204556993603415905448933769673804687931988521728110532845532555465466845560*x_2^2*x_3*x_4*x_5-291631610206287058871530970817429991129943111052608540087860518934649109900*x_0*x_3^2*x_4*x_5+363502569923808380358882507036240416680411335692540048053379346202439561600*x_1*x_3^2*x_4*x_5-294387040718129942044808424793917353261154867796073693675447676891094196220*x_2*x_3^2*x_4*x_5-208470468227897055764532823505852401602502598296887248530191406667245257375*x_3^3*x_4*x_5-753271343985115193825481433202701818106915134850012248477515793243967154400*x_0^2*x_4^2*x_5-209689529025865973000160148969246066310624982476762091879258932896115452800*x_0*x_1*x_4^2*x_5-393274443152726969587251972847137512413548497601142459975964721380412972000*x_1^2*x_4^2*x_5+569887210532886759138245072770322465599096710726638763123599192440346043840*x_0*x_2*x_4^2*x_5-1107807745901067516610093036565909447340754037613609786463965826558445308440*x_1*x_2*x_4^2*x_5-1581927030767541509279680071222535273814329444780701246424708841134303349760*x_2^2*x_4^2*x_5-256666877022700720507069588021958965888338556283586697089940312041006434400*x_0*x_3*x_4^2*x_5+140084935430359123670604977774327131749852230982470284896987785335943829600*x_1*x_3*x_4^2*x_5-475880619351760183633876109388033446380455240096209238826311822858697957740*x_2*x_3*x_4^2*x_5-140071753115143519749134562999987274992314138192214237414774752504629220400*x_3^2*x_4^2*x_5+8654879696842360534602886702905506533201039477787368381723292634060316800*x_0*x_4^3*x_5+302427547523360747714578246199009119850098143809763726779221441181219707200*x_1*x_4^3*x_5+2500844195181271983552570534149991318694045131426078235106578339730361031200*x_2*x_4^3*x_5+554153561672893297004835548364658411720367173852999696309194239388307344000*x_3*x_4^3*x_5-361225659373933456589144761402753581241398719758428742611351518708050848000*x_4^4*x_5+56255419861959434007916201269917543713431757346233293202265045251329763200*x_0^3*x_5^2-14195858593208321282535485947102634008569756811832471768841943114004942880*x_0^2*x_1*x_5^2+82080712018044989089538771002305938983407429017228084097752004598006757520*x_0*x_1^2*x_5^2+243111337926081043922594770060080509007310627396772318319397408070870400*x_1^3*x_5^2+90408098060723333841848387971068114109250220026862304560113985295934711040*x_0^2*x_2*x_5^2+86302238970790151487389388960615589188001302107555582601598474329927386112*x_0*x_1*x_2*x_5^2-9477021465799796542666121455400012142179650415542028200824192687627852960*x_1^2*x_2*x_5^2-59547495841210776609632814830518100465553562364137273720753308471136034880*x_0*x_2^2*x_5^2+2352443653163742366846149971204908316935761068656330935806184728176019392*x_1*x_2^2*x_5^2-8927096613464974650377821473518443034829408549636770068616604435037950336*x_2^3*x_5^2+94223420008663184470728450872365219168213420664464659727056210971819792400*x_0^2*x_3*x_5^2+406097962372025892774414466438586862144898802864543179247652611513722251480*x_0*x_1*x_3*x_5^2-52433383667725425823235685573904016667006061678893322503341641205598197040*x_1^2*x_3*x_5^2-363904194716186572829898396570599020686466958823419344154222918304874719360*x_0*x_2*x_3*x_5^2-154720978587323438477652297223238774499037309604448491916645493659869871168*x_1*x_2*x_3*x_5^2+176049717226194870629796584342619343093207353599608667254735291194371290800*x_2^2*x_3*x_5^2-158063948083195978017424463076652906997931966635048092322952668018215606500*x_0*x_3^2*x_5^2-221698076068886603406949398814102733897500262938199211471769945852041531480*x_1*x_3^2*x_5^2+123081262128527038813448939189803195323028512305329772125535016444846115320*x_2*x_3^2*x_5^2+173275768735183605450400717939215599093576735411655086747962493710018953975*x_3^3*x_5^2+870666540969644496122666580530465440279305839391579234502926535016180548800*x_0^2*x_4*x_5^2+148622851814004300939639450958220034526685106666015586913392490987293592280*x_0*x_1*x_4*x_5^2+16931796627069624421288799441880676355306004346167444683924144921158953000*x_1^2*x_4*x_5^2+1024179440121594816902195835742851909727284595001475608563930492279355555520*x_0*x_2*x_4*x_5^2+236125378900042612097785803063028756452320148914605228972409881775925874536*x_1*x_2*x_4*x_5^2-288323400187776380283626972938295828409154386712096114278032148024158522400*x_2^2*x_4*x_5^2-129712507743159497476973368361002330199558857350360421410654097384680025500*x_0*x_3*x_4*x_5^2+66825065761205507673996652199813185981016276134156537965823305694945760580*x_1*x_3*x_4*x_5^2-244663924838112389624706331060414198223646098938617092926272138956157880500*x_2*x_3*x_4*x_5^2-867063241912716707739384466003189928557705815935331408739747805209759265925*x_3^2*x_4*x_5^2+312178436398669280211513704152149313614091047654989701164645031163406223200*x_0*x_4^2*x_5^2-470195563520875460719501707363978552068490336822598483123873944933497936880*x_1*x_4^2*x_5^2-426454911309395656282918044906840430201433335123605038477941655823402201120*x_2*x_4^2*x_5^2-788934431737985682275626277496009570971681862767577488255004515466935259600*x_3*x_4^2*x_5^2+546010315652811967665437823196056810261694524496675694838281979990558196800*x_4^3*x_5^2+61415866500667222177422391767094117973393201847125170806902838667900339200*x_0^2*x_5^3+121516082928972704629651282737144937277980316662057005366576550637209280640*x_0*x_1*x_5^3+9710178925407048899458937123766310229763157848842488655724412934805700560*x_1^2*x_5^3-187050570188503745494105214151797990669614099154329727252919347081300835840*x_0*x_2*x_5^3+17209187986175057004096249150216497257625642260432580886693100524106157184*x_1*x_2*x_5^3+16540653752544447162126282202773742150486374495710623243274577130990829760*x_2^2*x_5^3-304648110889327708621137361078997688953926241656067437031439866823746594160*x_0*x_3*x_5^3-58470340700869280863511493866206742414175528848339162345691760517450347392*x_1*x_3*x_5^3+171123078913500206617193617404816916907592639364029438103404860207996770800*x_2*x_3*x_5^3+89424581600300821351580498993025083210479066293867635442766002605070364440*x_3^2*x_5^3+345798994991035761827201835100687267942424550643568401060461979135795342080*x_0*x_4*x_5^3+131993297252421662640890343415581721239990448018224594757970605550067064896*x_1*x_4*x_5^3+34254639813497387662553045498025464561914927982804181414047486290907785440*x_2*x_4*x_5^3-337813972306856264144177857587549755611507385749195643141014308819078925860*x_3*x_4*x_5^3-45252097794780908153304343634280214363633269877061852220070181761191888480*x_4^2*x_5^3-127674000892226783835455612103575451929951864560932540427309760077444790400*x_0*x_5^4+9891081721028547911447781000722145045274407698971679332882869970086457440*x_1*x_5^4+14186035146500693852118999128105063215168599612508867462549907083085983680*x_2*x_5^4+33376969143864399647449135543404451329917079298676591818768103856663553680*x_3*x_5^4+29282955562119241055366303420431695147455080209052345608575767543784823360*x_4*x_5^4+99709628578223170544547096053663905372987264975873421246043253681027200*x_5^5,
   3106951144458403635909653489931552203080925958373117558013250053467449120*x_0^3*x_1^2+3007827561187650359338545702258950835194544512435957392882818156328949760*x_0^4*x_2+15838503505562200440781987273300644460168500238830768619649159408056163328*x_0^3*x_1*x_2+5528446598123553010611868205873632116126479774610872646506790970750349520*x_0^2*x_1^2*x_2+3427561814372136152391395352785319980761419187126391023025299472542223520*x_0*x_1^3*x_2+90969918446604287116337383965839603374122856770698008278889584564007200*x_1^4*x_2+12595801913037898881481957802343168394900159987529559234991169442078102528*x_0^3*x_2^2+5447059969844522332644233135717867790443786479178346246277254483990045312*x_0^2*x_1*x_2^2+18270975079354068556941009603632054823064590055875336297195544843031822208*x_0*x_1^2*x_2^2+1067965055461635996892506193862491321565044469965847580146612013060366480*x_1^3*x_2^2-623208704032119934870416303137909263090739791403918367921324249485522688*x_0^2*x_2^3-2497789752378705187039497659442740051198536665831841682757350095297214784*x_0*x_1*x_2^3-5085601107914139171411755292595506209938486174940181284747257658496722640*x_1^2*x_2^3-7178042608049331536301335125212117706646632552522490559004934849772561408*x_0*x_2^4-905568897838372676624237540933927378860735900944799865630034026155362240*x_1*x_2^4-1138632562027074871472921901603579911330071287175975483394394219974987520*x_2^5-2837295447010594315239846291042008533410566603482131352898085338530643520*x_0^4*x_3+25294579388097850938830509404484060834862377981577524138203302008634093808*x_0^3*x_1*x_3+22699711857054080574647946651403471851950354517267725500759074770974448844*x_0^2*x_1^2*x_3+497967378512604911072470038172447731208952736824050048036043676344842080*x_0*x_1^3*x_3-78380632343141923462440996239815176954543498015442220296814667158470800*x_1^4*x_3-7183307102866020826541567843781746837185316515774152958766089708233777888*x_0^3*x_2*x_3-3642962690216092041913678893840409436375380714252087870683064230614715360*x_0^2*x_1*x_2*x_3-21029308401054794196748400296731859490207615265443452068255826691719327200*x_0*x_1^2*x_2*x_3+1871481290106601015453516086377211898763277142311056527060071937727447820*x_1^3*x_2*x_3-22711646768760076060570215234847532843411326093138271590198033544070658320*x_0^2*x_2^2*x_3-254128662485376041693427483394419850390854202497844818408307130953149216*x_0*x_1*x_2^2*x_3+10640704459644611705309881555805215455299141696038258837460875427532654300*x_1^2*x_2^2*x_3+12011559233631861958070689240865556618965958976600034009234675946639162000*x_0*x_2^3*x_3+17174710782730839536858573655294106446174068855667734135931725836205345160*x_1*x_2^3*x_3+13830092076226519281421672138195083832258722986831989401985934754936089616*x_2^4*x_3+17456511798006326749064465528547681204386457775316067361419903913616011440*x_0^3*x_3^2+44602526678216403150822073995288503225381944688704135657874249908787959500*x_0^2*x_1*x_3^2-17931782915645267799354973498171440190816354396472010794767415744384766600*x_0*x_1^2*x_3^2-5077825998871180004770095190413051877949150541288811756936763884567000500*x_1^3*x_3^2+39040623120642639318714008019550520486310480080248914036341672977660499460*x_0^2*x_2*x_3^2-58815164213519352018694143082499214627057210428315087874048793790150686164*x_0*x_1*x_2*x_3^2+5493004821476740424616754521427491947555252982155022562867208794292657400*x_1^2*x_2*x_3^2-35454356451791954502042533658963677665707400572433251517654642408134346896*x_0*x_2^2*x_3^2+15103804010285654382751319934248048113712936343280609145283740925652009518*x_1*x_2^2*x_3^2+2508102123696415200899357605366263049867121412673022641983004283114626308*x_2^3*x_3^2+26023652690154453217981590161304564871091086713999125411440590255839884950*x_0^2*x_3^3-28721452957530844424333927349816116052057236970443424394542214748486526885*x_0*x_1*x_3^3-3460378359440787170941641823354619120543853432527920695519596754749177100*x_1^2*x_3^3-1572738117706394591661509029750604602722895096436263844241936686086349160*x_0*x_2*x_3^3+27117697049219991396809794603336638775980988908206468103560890337772261630*x_1*x_2*x_3^3+15644732582554952548572927370584889734638094439331961989381673910549699110*x_2^2*x_3^3-25137376819865261582995230985157737540208542400365223259969738740146821300*x_0*x_3^4+2789486570424965641740259825630679498140200129416596137400031900816247900*x_1*x_3^4+7906210533291865081140949080470167087942626119472055709068882370703140550*x_2*x_3^4-16556079604803875086213843537709623969571973815513672962222626607639608000*x_3^5-23127566107142875658157764311592701811495779593284103761806576273788445440*x_0^4*x_4-42247758369413215634894237514984826373192714391808730784003850746926675904*x_0^3*x_1*x_4+47607647333731171420438765157254903631962072311860227583623681102385685528*x_0^2*x_1^2*x_4+48649872487471766234329608749595669824723068642501892809329358148653896720*x_0*x_1^3*x_4+3355467809961301026781516556316456302786201087329843830671034793836000*x_1^4*x_4-40823625566040941503658747290460173747066598120647758858716157749901353856*x_0^3*x_2*x_4+48305844133045859641285533575515562381525096806865204133205141206357578256*x_0^2*x_1*x_2*x_4+137954043261274779639511377521850324346585630345898234596103144750552381304*x_0*x_1^2*x_2*x_4-20507140763626833028762923665069713078541672837602646709974877814875612780*x_1^3*x_2*x_4+103993568887508105326266227072460207418007474742920177113152543293159631936*x_0^2*x_2^2*x_4+63206184896894391852659731629123769482224970803712507981766127166630398304*x_0*x_1*x_2^2*x_4-96914692516553284275735633463954208409809570553874546576256347197007990044*x_1^2*x_2^2*x_4+7356889834066794359274678617705086971722474037830177599301603257492254624*x_0*x_2^3*x_4-83401137868390763691124691703450176711421706901088649507223855308627721280*x_1*x_2^3*x_4-40359642369962199315145510176583536890983800179859772560522446613945469248*x_2^4*x_4-50953160224741760941588733923026313515124278021743687590117173101376019680*x_0^3*x_3*x_4+68851984165946601558238683619781630615590064314335205375608995974601887020*x_0^2*x_1*x_3*x_4+132698534430559847415671159014334077083103229283681339870467628709377173880*x_0*x_1^2*x_3*x_4-19674357610895030222610404036648224421801190768124011419841167405228010660*x_1^3*x_3*x_4-172059128947252947891766805409628774969787474087914945081213125328723465224*x_0^2*x_2*x_3*x_4+157552780140605414131301565156991231272306937390400908024401229328307881436*x_0*x_1*x_2*x_3*x_4-129175427962170671283217749120423374166418971771407860704487152002257979484*x_1^2*x_2*x_3*x_4-4194622047862431763335627280464155366119963394631034084024154771900987688*x_0*x_2^2*x_3*x_4-179564933605740072570100562997360496325452379909331237411374335056207880578*x_1*x_2^2*x_3*x_4-38605209728015409325794773634927926562257911455183236511332238697222802316*x_2^3*x_3*x_4+16838104111609051429127740236573745851572516949461289681684586593066455130*x_0^2*x_3^2*x_4+60601051797304282365762117777577936370562506643688524322086421074878062080*x_0*x_1*x_3^2*x_4-87874804173936518137415072661812181896427106159762149032232865800545184000*x_1^2*x_3^2*x_4+98883163210141179827625860013569605108408396502438393056327524164672291340*x_0*x_2*x_3^2*x_4-165087076510194700099112410866000058913237085025019314937143784362741077594*x_1*x_2*x_3^2*x_4-96808654443180091784057754052559412628395659932806798755584983653646382812*x_2^2*x_3^2*x_4+16252338955311633992273454858409951903716575148607850296200691812406456875*x_0*x_3^3*x_4-76887411790061474974445105701247507506212931917791993161955500205116932360*x_1*x_3^3*x_4+49014710068532667204733532182186012901005466049125503867178298930557027160*x_2*x_3^3*x_4-33099551382049517100907074016571487598366264356987077961307100586873307800*x_3^4*x_4-10911838900303991282910968474992203855289404832278595952529642152060339520*x_0^3*x_4^2-114303286672304866562330686558405016424173011874566905831512480498826644520*x_0^2*x_1*x_4^2+48888589252004600463164950915844541909166885422371014131161897013405639960*x_0*x_1^2*x_4^2+25174944863448993634239872949658484421332509296644968064651870554856748600*x_1^3*x_4^2+70298241632808045955275341884387002943019230539966295284879005733016082592*x_0^2*x_2*x_4^2+195603431765099709949175341770244875717132991470967184857697087035673070600*x_0*x_1*x_2*x_4^2+123292941831305562061802049709052499961302265979717355024266981514352476300*x_1^2*x_2*x_4^2+278646334308392800402923090494058315102207275733587069043715416722559013824*x_0*x_2^2*x_4^2+241175216525091980105474359961375299420712365002304281674658389688079628700*x_1*x_2^2*x_4^2+131123935936751973726449717168128781974708179701010318248536144504672099968*x_2^3*x_4^2-13880965174518376505267380671914207623046443328258584433680585238994252240*x_0^2*x_3*x_4^2-31568430068240714343402025174796753926719594158072624949127368702050850900*x_0*x_1*x_3*x_4^2+1743065637774543125858693678723458173546161544685253806379353598950731780*x_1^2*x_3*x_4^2-176871438169215473406767289203216765682737462941989045571003783532292911700*x_0*x_2*x_3*x_4^2+75613135276306053265230600979903412814918730116401371664635664306128179180*x_1*x_2*x_3*x_4^2+36999593669578210395798903118231463622224476473909418411971747088233108378*x_2^2*x_3*x_4^2+77217291098978192587962144203444046472847245748472411241572060095850633150*x_0*x_3^2*x_4^2-76273947562089622239263565726135912847844703371360903049204751444929800940*x_1*x_3^2*x_4^2+105968930633797587653955964455944993155324089214955626051552621609333049550*x_2*x_3^2*x_4^2+10912002773889170650206627521280242377899665200306856069935996430749411200*x_3^3*x_4^2-57790844616751587311246031253243509776226811245584187590934481028019340800*x_0^2*x_4^3-226280720228376002396819818614042446601590293072250966342757790398261178200*x_0*x_1*x_4^3-2901768755927169985493632733391129930123772726342383894014914029070818600*x_1^2*x_4^3-349888387699450878149922513858141694109739263846595578950784723333798141280*x_0*x_2*x_4^3-169513716959207983378123229676672705433430864351319892335398593464163513200*x_1*x_2*x_4^3-143405254172921825321521008185389867266358003396023339368547220202312012880*x_2^2*x_4^3+98356001876993572579295428899157725059374227682258831183286141941145561700*x_0*x_3*x_4^3-18172127501817686901301753192793951056120986161343764848860733902522652800*x_1*x_3*x_4^3-340320372468007054235328510112211053050805187885099822322188987606277503700*x_2*x_3*x_4^3+192844439830818345206111721603635905603748148911528247274610721996912619200*x_3^2*x_4^3+53164712801140530310113214017352929234918522627081918188654612622209988000*x_0*x_4^4+14703628418929062200246431638157296721463625480241494629290033501672794000*x_1*x_4^4-232060898843760427586235229831090083636322454291098025449959939615280360800*x_2*x_4^4+336128089117586392692144266089318055548071911158733122597128741196734332400*x_3*x_4^4+149230269944853993507214059383668712585900224044485598895277994782804688000*x_4^5+4730806254101450174562130056422788169042790428167033907779935792035328000*x_0^4*x_5+18799738052644485132669075219914107238428637164512887804494048376786211840*x_0^3*x_1*x_5+19579134702640454239763919335721236918187570895816133188185428910174867840*x_0^2*x_1^2*x_5-2982576995198389131002308549651981425266569586341413113361329180365978560*x_0*x_1^3*x_5+7604991245812372984663249866830765202488153545218768742734092027042400*x_1^4*x_5-21442976488073794006260562041005060676649713714950210820171176015645936640*x_0^3*x_2*x_5-5907202062420806994518955741530438748476803113448348514371337453367706752*x_0^2*x_1*x_2*x_5-17543267032783822224508132143752942318630353498524967601419229282766129312*x_0*x_1^2*x_2*x_5-962450731598021516544037969906522791846030865733907408942823017552018240*x_1^3*x_2*x_5-64045913223692035948282169925921914537292924518326830625210187533166121216*x_0^2*x_2^2*x_5-46180057391793276248892370524669216698445594162215023249745274029764955712*x_0*x_1*x_2^2*x_5-3533372767171509398435406362710941837299348358364756327566251505334018128*x_1^2*x_2^2*x_5-10629981385827763910183607820052733631642189064740414851003924581002618752*x_0*x_2^3*x_5+736484938597831751513815108210452879083063408546693026919176614007101120*x_1*x_2^3*x_5+2603644222260909618959670680059422090842293363894143458446398420651903552*x_2^4*x_5-43820906566079248848849058330531521552357738127748292117333987038710845120*x_0^3*x_3*x_5+29888208075804577068073076712958123757246635483316852132741483151155520576*x_0^2*x_1*x_3*x_5-37807968103031727437274389101888914921455402674055884257418967709483711816*x_0*x_1^2*x_3*x_5+4266334051475957494991918449492010995493466439905444213005388775065674820*x_1^3*x_3*x_5+96708196161048338762653484838499357997506292345125099596591783487374792336*x_0^2*x_2*x_3*x_5-31427343726246613552204926712345671776275960307471973081896322747519955080*x_0*x_1*x_2*x_3*x_5+40166862302301796795459227268615450578113151956992446063139528116155688264*x_1^2*x_2*x_3*x_5+51627386625931324820168079991381841028532790672850672432010685744537621520*x_0*x_2^2*x_3*x_5+58657832817464455716289205036130853604250883451426902595493430818152133288*x_1*x_2^2*x_3*x_5+7986741965482304406954005595598999082607657718974801561920598876526339536*x_2^3*x_3*x_5+68194230839357072009340328167395658580991359233182061837542974580134402440*x_0^2*x_3^2*x_5-73683152995249918054118713053312815021091720991616769646430506973722738494*x_0*x_1*x_3^2*x_5+16137198815758742489190204825223327665688071315149508631429957570656809400*x_1^2*x_3^2*x_5-22563237201037047092012816568726573753370116610551616104526085618263843296*x_0*x_2*x_3^2*x_5+64458590060497649467933504655699683117058416526553215255705870187403152924*x_1*x_2*x_3^2*x_5-16774274134447444037729613807820919029939582897638056075492453449850466984*x_2^2*x_3^2*x_5-52510635898636224820411588226499061375422954376445741390885491139458036770*x_0*x_3^3*x_5+23622365351201659042910622915373133433159531803461507412712596030216670810*x_1*x_3^3*x_5+2803817664121701940375538312630841601258609795577645309742523811762614320*x_2*x_3^3*x_5-32890085815071853461556845641878015501418610805558518025282916131146459450*x_3^4*x_5-67289626269475576989706681892534296671446744895396091555667270972461849920*x_0^3*x_4*x_5-12373524827416117214439826896331443448723834308769081129182916600737913776*x_0^2*x_1*x_4*x_5+149529728027016375552065353010196914012179365148100730500830784986378376364*x_0*x_1^2*x_4*x_5+792213854046302412194698811397558649588128801585997610607857720090150820*x_1^3*x_4*x_5-383843926782402317671398177360503000134962017284652733636132775226826063840*x_0^2*x_2*x_4*x_5+28696065972286342125463862104936633083890567877998108053757577440945559840*x_0*x_1*x_2*x_4*x_5-73491546843495648436991968929800783674358797265097712621246591325123910048*x_1^2*x_2*x_4*x_5-75003208351832062436516287874254179470867767231404535449118059187800236864*x_0*x_2^2*x_4*x_5-86381868304264917925548801498723995850130279114622473917036433446573618912*x_1*x_2^2*x_4*x_5+70865071235594996105469420249410090364369531062419125779496150162446918544*x_2^3*x_4*x_5-110631755293885791918664417468697435913397601006385997674782324819981338080*x_0^2*x_3*x_4*x_5+188510252161080834650052986050829526325663514326441674166702799312868823734*x_0*x_1*x_3*x_4*x_5-62080005650311216480553758059881359319501608613814643580989937574776286924*x_1^2*x_3*x_4*x_5+254836825024557383558923691885787866779923772873417381592057737618746038180*x_0*x_2*x_3*x_4*x_5-198261427521268952005548196193472946653748152748219953225278646891261087408*x_1*x_2*x_3*x_4*x_5-28080555446384921116121857817921193777786579232187315688726663464752529320*x_2^2*x_3*x_4*x_5+194200399473904999998557462587450609141209134439026349452101984067226740760*x_0*x_3^2*x_4*x_5-79718065197469859202433316146582141315241224248278520985764753558770504550*x_1*x_3^2*x_4*x_5+18421801326618979029826035957295111493073503448735657105975668732448146440*x_2*x_3^2*x_4*x_5-2596621062047882520414029098513939224872345303584652119381875614495362800*x_3^3*x_4*x_5+189188065844251488619603527052146670172170904945913735088618523534988521280*x_0^2*x_4^2*x_5+57817727537967799644297623834627525191052640559937101766723944296917453700*x_0*x_1*x_4^2*x_5+103014096392359221340026620981164309807954356086078340700041053134118097900*x_1^2*x_4^2*x_5-256570324004265933043600054335982730008595165952368437385968625076590809728*x_0*x_2*x_4^2*x_5+253576577826476733042353755274855561065322758103952120133401399938026911120*x_1*x_2*x_4^2*x_5+347478562919565755664398828632638970400568816260351501985981520846394777952*x_2^2*x_4^2*x_5+72956239673615897476060329470406209038660719443544004168945677821140495890*x_0*x_3*x_4^2*x_5+937161166227677487968448605851711321290144786535161509480281532022411540*x_1*x_3*x_4^2*x_5+154812170702591552156628973689053101801862846434277802244534259565338757924*x_2*x_3*x_4^2*x_5+45467753179673474915365759359677864260542857902085281937976132618896574270*x_3^2*x_4^2*x_5+49011808446213858981194170817696549075070082381862331319296383046551966160*x_0*x_4^3*x_5-81021758295677957340074074794393344508971284390308951402731531850442304400*x_1*x_4^3*x_5-593360556485262385179957752241003978433965140104126419622897450692730182720*x_2*x_4^3*x_5-123647993812234614938650264264837096144809757342921316762966253559007060700*x_3*x_4^3*x_5+105556421638273439904934160785679159761957721526885190115009539851045616800*x_4^4*x_5-47303818835097938983713694165386284914156748689810010885406347151415334400*x_0^3*x_5^2-6831091753037073447886701163889231387741287780647573641199214049324440320*x_0^2*x_1*x_5^2-28954374974665616465417370426101895410444446184586933886634951311406240976*x_0*x_1^2*x_5^2-384707096259484531221661633837941842042798150750184433559428614908886000*x_1^3*x_5^2-8357653555300647422172083515901515580698230402527821335642165575434948800*x_0^2*x_2*x_5^2-25809781034603614696535804825789293193955872334048107033119044317713990464*x_0*x_1*x_2*x_5^2+1091933034377962337922257384649075237967171010376139720366627859705074032*x_1^2*x_2*x_5^2+14604619134308525297688508855741545915690401233605579884464416371666497536*x_0*x_2^2*x_5^2-860667445247619589857689821263737902297196852202474204016632668334599808*x_1*x_2^2*x_5^2+1924381219775271125202601704212140351825708177339420950410296111613218368*x_2^3*x_5^2+60122492419658140737502530154836937569874004646044283751520320444016181120*x_0^2*x_3*x_5^2-81036776858444603236695324390905487751174581613700978306034469211066184408*x_0*x_1*x_3*x_5^2+15649872980030353119076407091992569366630098585124446983244420211665501356*x_1^2*x_3*x_5^2+57213075518267165650935740446839014185313343999037963120404385418971227120*x_0*x_2*x_3*x_5^2+31365696147995880090383428706349863461800179518705266242720108495480376264*x_1*x_2*x_3*x_5^2-47615691737602063473150577742945966521963296984746203708717526010878688192*x_2^2*x_3*x_5^2-19466598935721474299213734617451424702804854934593397538962349516881378640*x_0*x_3^2*x_5^2+48464466551623418184008343374392476379458163678878909540536908574770002846*x_1*x_3^2*x_5^2-12632334790718611374990028357577148094619124425504494395875402662865871492*x_2*x_3^2*x_5^2-14152545781930049614683652689367944425708575739536073308650673208544210270*x_3^3*x_5^2-270184853435764387454997304081486855492735146101853002080492791633805495680*x_0^2*x_4*x_5^2-4877297497879561922502447271855844736377364301881286546157307832668466128*x_0*x_1*x_4*x_5^2-8378694023707823784873925021096861920871676661814894276356413498655330132*x_1^2*x_4*x_5^2-137404595869222234145406201083121332525794083129420596626042869405119514480*x_0*x_2*x_4*x_5^2-61670455787453694526696189595817277600696385104087656309676588209251338032*x_1*x_2*x_4*x_5^2+43174898727781536256175957163602282194301025654548245565573262929468023296*x_2^2*x_4*x_5^2+162067438033998999468501625261131585441618776394893273208228405935926401120*x_0*x_3*x_4*x_5^2-16943899698824308068617868905980271608680842135116030875293527921496344398*x_1*x_3*x_4*x_5^2-17325806186082904400862562863436687391524777519479364583016230531226551076*x_2*x_3*x_4*x_5^2+144580622768140795587373741233801216217886968031327916980531040568398337500*x_3^2*x_4*x_5^2-120791127060071234840317960803010868733043168083915499066766547255817802400*x_0*x_4^2*x_5^2+109445924720763729921658036466930281302987196868014161056320345630227452340*x_1*x_4^2*x_5^2+101195944558648899958432339693898239574564075638263869222819725682661307872*x_2*x_4^2*x_5^2+196278476091741720147261757374126026232967622336471537402621807054266062330*x_3*x_4^2*x_5^2-100644027702074546215506328734177324356248504288318689411462797749908022320*x_4^3*x_5^2+12045702772287751146641699641746021488565378092801580560906986546660339200*x_0^2*x_5^3-27867057644179182322127566932460708300181773118910027505084597672646278080*x_0*x_1*x_5^3-2467607159755416085626459745008502639895835029301410315061045565023798864*x_1^2*x_5^3+45875832922234052681515106772929854104338668087935215773811374320586322880*x_0*x_2*x_5^3-3117720488090697084469544866003270768526846224684784653692797092931747136*x_1*x_2*x_5^3-3783465205900831339734404651303567108895431521890009133703137228300737792*x_2^2*x_5^3+14438557691655968127511500124722426903609219659980073611089668368417688160*x_0*x_3*x_5^3+12328253905063934196690742668415248264390882125822121223227849411249990360*x_1*x_3*x_5^3-30075475525438572166026348522154018813040868299996885861527107890006363040*x_2*x_3*x_5^3+1248685085850427256563480685060752897529285619816667047000721759198516680*x_3^2*x_5^3-41025980324547430764553148670420320487434541855723495800348748582342753600*x_0*x_4*x_5^3-27914660219721161838762109221070415180450708171238122155382553611519290080*x_1*x_4*x_5^3-15409474981100816033540592470076673376859127175469420539655062780681482608*x_2*x_4*x_5^3+53934275921807968142819211781417242681880679470185793610381099019683804664*x_3*x_4*x_5^3+12925588661727768386693322589432861575243510817186350206913550964788770528*x_4^2*x_5^3+12946786905259563446454247701563489379908443367995287507840298727710387200*x_0*x_5^4-2440055891219145985371140353704964452006833381816023722894679265393757120*x_1*x_5^4-2170980675935207996300564190366470666719022987744546995587374543048478720*x_2*x_5^4-2534820734784071072784211172791085268990490124895761399335424668370197440*x_3*x_5^4-7540381744221089392876596236154159133572323456809514309161772118392236800*x_4*x_5^4-333801576068602641527690182960249580144181345985396120233930785760921600*x_5^5,
   31069511444584036359096534899315522030809259583731175580132500534674491200*x_0^4*x_1-1723516775711938039790355515138805718403267485384764918903392701159430400*x_0^4*x_2-199473235118312365520980762284794513781197352025473839239546578490114107360*x_0^3*x_1*x_2-141541193891602592803320730788408870317476594167043539782726702134577989440*x_0^2*x_1^2*x_2-43711713503276260995676831981234677963323739956738751674216418403513982400*x_0*x_1^3*x_2-354843720222399301006869976762313658606802951306830203271939570258720000*x_1^4*x_2-89527792955949939735867420548377852033807226797864242622165700907342988800*x_0^3*x_2^2+62364635793726212067900311517339317030986469819731396697556517458614037120*x_0^2*x_1*x_2^2-18395273690138700566546945252689161911820300477530436160002544435044674400*x_0*x_1^2*x_2^2+4935273953446384968617078237514574403333638197670732558331178541573680000*x_1^3*x_2^2+27509208550709770560169796392816658770763499519772267253167649986580918400*x_0^2*x_2^3+15275407146152495168186748860916275854522277921561261062671675125106566880*x_0*x_1*x_2^3+21033007008779863723995102316358254724361026963134889046916698261507945600*x_1^2*x_2^3+24493365437591503097233924287920105939397300817034595211774818932210388864*x_0*x_2^4+2195051138852123075983145164805242757833759164477268926788124859859840640*x_1*x_2^4+5093842068670072024191065666732964974421016310477747438713625111368266240*x_2^5+7990049680654769288605446510191107494241738921843598551330982389121232000*x_0^4*x_3-141792622239223182592827100801963313014945028117835019804337536785336212040*x_0^3*x_1*x_3-137069115690379861996165712902677118010492031474738185530098646740019020240*x_0^2*x_1^2*x_3-14482687465819755644253361506603592745875838187404904489136264289078224800*x_0*x_1^3*x_3+525671525449309995123633212605276253455653725839350627527749509847608000*x_1^4*x_3-4770446164048675887606404910078143983865305843975174096966859875690302720*x_0^3*x_2*x_3-23220683092359770837158534001429386835497834830284222843654319388733374656*x_0^2*x_1*x_2*x_3+164007437540853886575368946326114962850549867418356752547534551788498910440*x_0*x_1^2*x_2*x_3+17493598021212985968913987561694988039254920011546719691920394370992530400*x_1^3*x_2*x_3+212399431883406341525477135702101595095552476677992360652712927385993067520*x_0^2*x_2^2*x_3+26264234979572341260377481020069091649768398802317389437535022760234582896*x_0*x_1*x_2^2*x_3-63012273637721014201816090146703151669974932344430125130643882324012429440*x_1^2*x_2^2*x_3-71732833218704422176083813618481693804569110514946037187203939861279607376*x_0*x_2^3*x_3-76216650094973536049301650877917673346428866869982487926078853684153440160*x_1*x_2^3*x_3-58643257582873955262909228142780933628382605460664208656121157639414604800*x_2^4*x_3-44167516348494407298116058053182977768652763757631639378802230752021577800*x_0^3*x_3^2-203058112049376170010026942073399719116443994306088461194913501343738938200*x_0^2*x_1*x_3^2+114833919135369182147912091196979635725063546038933985488444186728845842400*x_0*x_1^2*x_3^2+40140140267685248119121272943237681140623334493375315593557979075620246000*x_1^3*x_3^2-267371616291046772075689020461309712886091611537632746679175429579782191760*x_0^2*x_2*x_3^2+358605445460819887729586813302038431318988702692711693995630954079454037800*x_0*x_1*x_2*x_3^2-17631178532501212414165857033775823456113783250400881395259063980156947600*x_1^2*x_2*x_3^2+74697390152933328123699402984704921054225753173231495122425842521839621340*x_0*x_2^2*x_3^2-101926134108661487441731093606821856342856458707739677756128039581738841340*x_1*x_2^2*x_3^2+4391803317899334763018953546556578125770383144663096874539119825856966780*x_2^3*x_3^2-201146855512546921812402432175208524982917780535567080670389881752956311000*x_0^2*x_3^3+193448461114266899505322990070432842410774634893470567854896757927494816150*x_0*x_1*x_3^3+22859953968420796114182298874042818595824272805831880440623341006770578000*x_1^2*x_3^3+121505803194190734360067682564380485696561204508928313467565583613608693200*x_0*x_2*x_3^3-132650635812515378135173351539271121959712794020753764491995496505002626600*x_1*x_2*x_3^3-49345329998376517496050838556959157079289500136955448987902097657911213225*x_2^2*x_3^3+219590751054478788233637063812473149209187649098575221609639502982813548250*x_0*x_3^4-31027029307594561630531206942884919269709856889696679034121187831100821000*x_1*x_3^4-58305073706233811818047631421869835453317755768249388308109152838953259875*x_2*x_3^4+42720490362365714265400466295982770646083978783583103034441316972462770000*x_3^5+123351838231613946027419206490636626629888761598547394743082368048354800000*x_0^4*x_4+262764296038878427993320141726559236988871447200087025610421589985631015920*x_0^3*x_1*x_4-250425381171950802769140316443195456153789023321167366846998509114275078080*x_0^2*x_1^2*x_4-256126517320614700913808876246897572224441508039181255611153401628368507200*x_0*x_1^3*x_4-29591334496124879345695843652906731708395520052020964614061091470640000*x_1^4*x_4+173765951057291203118146912546227156351813168633960067616975374511685024960*x_0^3*x_2*x_4-393706805204182519263109624106703105458829616558545676043585484751421314512*x_0^2*x_1*x_2*x_4-751874534672476474820164037939359669886307215337378010437383623265612546520*x_0*x_1^2*x_2*x_4+84751207476181430549116571619290753328945725751294398617789024936384725600*x_1^3*x_2*x_4-697502800509400402315874018381315726592826159363306435299280345445048304960*x_0^2*x_2^2*x_4-284847362277727375345127509447166553755546441564761223284778361868014759528*x_0*x_1*x_2^2*x_4+477198816164052160433356367269545769733350512681979412312720515058587549920*x_1^2*x_2^2*x_4+30069425491876597833862207783244373112572849146205231309319395042436211040*x_0*x_2^3*x_4+377104202087152028597773615823824151624841229080255245360930753852928486240*x_1*x_2^3*x_4+165315112648952687094520842450016327922516367197513838933458207161184260224*x_2^4*x_4+150732976306080328740880936368123488526626180820415666554468413364443265600*x_0^3*x_3*x_4-426378495197361710115621309648368475477837176711541044719188715484160619600*x_0^2*x_1*x_3*x_4-567817361586879372128191694134167197420469663713945617645516843623593792400*x_0*x_1^2*x_3*x_4+87618781631465949091066969185050193204153287646752632453526575382842671600*x_1^3*x_3*x_4+1178604124525193486773758846741456036224274275374865903213518506114237704760*x_0^2*x_2*x_3*x_4-699250541354165903236808138254869878896068543170285064128834609988429556400*x_0*x_1*x_2*x_3*x_4+644969936475004303558859102588151915326969203551752085147527179821555681120*x_1^2*x_2*x_3*x_4+213222034841335028368267891931370433551971977662341624379805282638255331260*x_0*x_2^2*x_3*x_4+872669423847904141966339044135089203432753624107601833195001263328579813500*x_1*x_2^2*x_3*x_4+117231148906952775998805256771142599381645693679519178252516619597488570384*x_2^3*x_3*x_4+40596824052379968174009017452470051814864919523216866836771566627992695500*x_0^2*x_3^2*x_4-163125910883384204438102587589261487355600195742189035982384050685043196450*x_0*x_1*x_3^2*x_4+407156438402436764566002024421293470619483906581679454887768999324070587600*x_1^2*x_3^2*x_4-942687650539480233300441327511574619529138141931387439644859243794152010700*x_0*x_2*x_3^2*x_4+801120500060572776129937883691135272601796275654595383277187189816798606620*x_1*x_2*x_3^2*x_4+344607379815641745878369685393210555475914658243056923908904555225232937335*x_2^2*x_3^2*x_4-309219523615481867149214006070312447605440450428754104830054361721526894250*x_0*x_3^3*x_4+381415138941884476962222138833338038017120191644824766566345810440953452400*x_1*x_3^3*x_4-63336788655172308215176802536438257431266543135841992354894392306822413925*x_2*x_3^3*x_4+300917424660592836665952705406658014414218692297767139920381380246792375750*x_3^4*x_4+41661142115564574355396499003963944405078680392529691952339041713896966400*x_0^3*x_4^2+592075320072074593138183306261225169133943566214032174597968501432424778800*x_0^2*x_1*x_4^2-270002371628721852630120000564218384300308131197131306307484880422556197600*x_0*x_1^2*x_4^2-131485696573679602602643531841738772129768478122730152615241320359815668000*x_1^3*x_4^2-179398711945375678870615637866258293461374598997663863427155824985450826240*x_0^2*x_2*x_4^2-827843705304202660730386874934000023533176699195468025929907216239299561920*x_0*x_1*x_2*x_4^2-629166422462749986190505929784585230420894316676199081246301194241906810400*x_1^2*x_2*x_4^2-1484907972558879169949690658292971212598277201977419055693884936242570441440*x_0*x_2^2*x_4^2-1299678693703020485200892027303064437063878272425600899922718419581787790120*x_1*x_2^2*x_4^2-541205529063730345578950550374890013378205665932666236424654376988569566560*x_2^3*x_4^2+102720898524312978685463292780922050360443901764705083261949220501089715000*x_0^2*x_3*x_4^2+6298613416556136489906076014818215344541360666499054220643073351313943600*x_0*x_1*x_3*x_4^2+89567442522716672198521422300310629467550705454502625503693159061579105600*x_1^2*x_3*x_4^2+1443293495630312089871903392293230389969878248673321132840980966487340061800*x_0*x_2*x_3*x_4^2-373770935083884891042994387727317867660714724238045598163533985582725048840*x_1*x_2*x_3*x_4^2-158785081409608845449772463872357942196260733981324619539591218607665514200*x_2^2*x_3*x_4^2-455614657517916796127148329585036976854965040363529319813643658196603960500*x_0*x_3^2*x_4^2+343065005288148648092275748169078376749488610002266758385216966675877135200*x_1*x_3^2*x_4^2-792879533391899661356672225816298151003895209216638094255834816175614250900*x_2*x_3^2*x_4^2-91420548725460543713652170778246113997532949369856446116669154858825543250*x_3^3*x_4^2+255155205675219702002836373552982551587789180253385055613267492014970904000*x_0^2*x_4^3+1173195555254778708489178775128813134324114534954812187118605591447237566400*x_0*x_1*x_4^3+1097486115833203838980874234821160964753951957186488945951175026354280000*x_1^2*x_4^3+2067599814756944572013546690635762521085676644784110105642215999255940680000*x_0*x_2*x_4^3+907706298740302875362205139978622960260713908489983520513344750537237320000*x_1*x_2*x_4^3+717050789464129764930901486882016332536437870135057309237966254811681668800*x_2^2*x_4^3-590459433107638612992879160489092007294187728302837539814687204259179516000*x_0*x_3*x_4^3-18832083773183617034094413403849082891567227161703170079418232626667985600*x_1*x_3*x_4^3+1270136747148896475754857244968072926889362741335818813924481614539357818800*x_2*x_3*x_4^3-924922118906262391074992668291853427485043194926637049495667567242114490500*x_3^2*x_4^3-248355106291994565713148482510902872663216143469858859524443987650084752000*x_0*x_4^4-52356948674585168790265787362078518664530177531548938750212175397041308000*x_1*x_4^4+1175121000192766394571248236190065574860645251848638656847857217382179824000*x_2*x_4^4-1732071060842780489368349293459464346532653149779430886930579948135118712000*x_3*x_4^4-833634333784476860554699016988808241105672083985761024547336637586559520000*x_4^5-99321637779355619410772405488929632282073992537659551288549246614739120000*x_0^4*x_5-160448803646538216699725052400880816031795328880111892000497333512719638400*x_0^3*x_1*x_5-179328832643582262171804532961994219525756049174680475690667626490428404800*x_0^2*x_1^2*x_5-26178451223798710447072813930601497933091992022159445553680036493120328000*x_0*x_1^3*x_5-168317268426111896164808557329249379836904804031225639642741345276880000*x_1^4*x_5+369039996576670166181451551413620959062331326965507968437112729875025552000*x_0^3*x_2*x_5+209465994241261513327472158079972034339198555598809296095854423526339108800*x_0^2*x_1*x_2*x_5+163343934579161540850151616362117390088008452562511992071548747546411938880*x_0*x_1^2*x_2*x_5+10034572685092721832563558100812640215026138721592216632452620241671848000*x_1^3*x_2*x_5+185214787011309324339545742363240931976174167038733495658648394435094273280*x_0^2*x_2^2*x_5+154769646587128160352009545647290407088843485737842840199638483545734343072*x_0*x_1*x_2^2*x_5+5975650840334411010812320669626492632353429647630449462762168331061720320*x_1^2*x_2^2*x_5+22908053739216736623809224018950236184207443923365525123937210469947193088*x_0*x_2^3*x_5-2284757713367642568204140982079152007288017925241616678738334222082157600*x_1*x_2^3*x_5-12878811531074578584010706736417570380572816943679968816267282629187104896*x_2^4*x_5+482864320822554501353826320812848972564499917371712342535067861502884949600*x_0^3*x_3*x_5-122742351938628249933853727828811544184084931548917999884069049259330395920*x_0^2*x_1*x_3*x_5+207972377112804237138283672178623762218125009903109430886890419705385337800*x_0*x_1^2*x_3*x_5-11980962823360529694086599450827416858202009733970528237879768704359382800*x_1^3*x_3*x_5-842464492366414606014543370587202074247028317298600943083224232973633335120*x_0^2*x_2*x_3*x_5+37859437085970060431796143822853378915326023575429188413798310570086189864*x_0*x_1*x_2*x_3*x_5-256304478303022212793332901452171390249855027886286970706657624846557082960*x_1^2*x_2*x_3*x_5-254180036829286594417343183961470435777031346389894254862879861222655540048*x_0*x_2^2*x_3*x_5-249894617109912966063426695367204111985455971879089451443647838066503248352*x_1*x_2^2*x_3*x_5+8164457726582041793806924880863217948748788935726455438332088947623645344*x_2^3*x_3*x_5-783282755663784745454805070302788246218020270374072931026653475365555616100*x_0^2*x_3^2*x_5+331963267656540631145719791120623478478709023230087425275359549189574048200*x_0*x_1*x_3^2*x_5-102816813540325221120796325488290465718912813084103457910242878219126245200*x_1^2*x_3^2*x_5+436134076199963866161950807767609594210569787620253512209343521527586497120*x_0*x_2*x_3^2*x_5-300181191874404991731738338605916142749215704576390808178318520325000656000*x_1*x_2*x_3^2*x_5+124036994248701884915934511778971777956020824135258884598599908762898010020*x_2^2*x_3^2*x_5+597501576689196977783327096419846935361700823881400622465343338888273099500*x_0*x_3^3*x_5-89976852826941490748810169975794093983371160614901865932478018151781458600*x_1*x_3^3*x_5-114277449921501063607493377764065939432580174383533729357067032290902125500*x_2*x_3^3*x_5+21731447432850101497241237773252790565649381601649287572029529778549841375*x_3^4*x_5+186854619688452811041615606770045023486724349756025524806704366697892595200*x_0^3*x_4*x_5-85207131973627267671614394460790288057224183446127811950842354216966455400*x_0^2*x_1*x_4*x_5-592664768642597452341536604457512757877897106775226796538977968433902913960*x_0*x_1^2*x_4*x_5-15121153356199501181658975357690984636930478700607155986697284767491307600*x_1^3*x_4*x_5+2485664980044681339951741922865108826965829615065179441083382059088095062880*x_0^2*x_2*x_4*x_5+255111562147774249041520265070488073225738987417387747668449947152507609584*x_0*x_1*x_2*x_4*x_5+331418648631372136875832180967089133608276159193036542035642466371728352560*x_1^2*x_2*x_4*x_5+292917765964317778142662619354321705919456959878492356427136138005786746944*x_0*x_2^2*x_4*x_5+243274348221417160117886985210880236529142678406200680991764726185495281272*x_1*x_2^2*x_4*x_5-429659921304751530628094556551443819841576112254105728836079849759637262432*x_2^3*x_4*x_5+997856827863159274696677180044322854178731702919064679119788803144061192300*x_0^2*x_3*x_4*x_5-848270920135823062164905564538915425372053853622382238466029776405719153760*x_0*x_1*x_3*x_4*x_5+273286610098935777563036619105179584411847469905187093888420499990472221440*x_1^2*x_3*x_4*x_5-2377852101122687022728414763695258224399489384004021010368341528602337420280*x_0*x_2*x_3*x_4*x_5+734666669225264256320351579030352825911727831577476065247873259641708611176*x_1*x_2*x_3*x_4*x_5-15826887643757597061334285729639223561594942121595346603536721485509804720*x_2^2*x_3*x_4*x_5-1745063470054812549745805771916419910231501466905509893152797487528155473800*x_0*x_3^2*x_4*x_5+319987831832419989465747927969978936785923585278904353064950940927235404100*x_1*x_3^2*x_4*x_5+376527264538917354385914409153400221288319611656030854067080792128184306460*x_2*x_3^2*x_4*x_5+437534590488211472695603927370803251057994393592213036597300428834177249125*x_3^3*x_4*x_5-775337396824783648706087269376486171026888175919702442467532962834986512800*x_0^2*x_4^2*x_5-625664381060369517902160845085067300959525351815410338794105589486122896800*x_0*x_1*x_4^2*x_5-456188080983729875508138882422712433768630348975869000475648657897777562400*x_1^2*x_4^2*x_5+2064980382627286746324631807004801840691977625271917911590544359894263198720*x_0*x_2*x_4^2*x_5-850458397626476909952214628924201487093146641027930351605649194805370287680*x_1*x_2*x_4^2*x_5-1099261302041775808637450021257290870641795725639812934976648395714982986560*x_2^2*x_4^2*x_5-76306369020930988938608034960599875724611927460564776712964689916682733400*x_0*x_3*x_4^2*x_5-168927819097895999378537235774314039351133947889190522865107886711079659400*x_1*x_3*x_4^2*x_5-1120393135944022786562764174967373996945985075031842441715649954425623511680*x_2*x_3*x_4^2*x_5-367860649964081980723766023604161459349687531056170378184304525813700462000*x_3^2*x_4^2*x_5-478237087317260880066928282357214195204038230675008937820671703249663104000*x_0*x_4^3*x_5+259480924017455329253382198305558455508102286203545776640909156777942598400*x_1*x_4^3*x_5+2026409701627668515265938863826033060973687973390889380852820484594378998400*x_2*x_4^3*x_5+765026352251287296092173084373958348868939654147343132222413580409601962000*x_3*x_4^3*x_5-296415636690399311479668086651797145024226778662895054383624156980898240000*x_4^4*x_5+529300237518424057240019553150990804805048607435892609535432635553951958400*x_0^3*x_5^2+93595222534151562052656869440572753371930813750848583538566270493462275040*x_0^2*x_1*x_5^2+201378862748640547963472429402965689803330958439444383217956735127694978400*x_0*x_1^2*x_5^2+3071709077021496550648716245597254360109137826462867875018061577754056000*x_1^3*x_5^2-57885327103073648097757319382986715262269700313841523284047286897186021120*x_0^2*x_2*x_5^2+217096445566523377092499508079666306915283411152819937697305697714700193344*x_0*x_1*x_2*x_5^2+1294019556405394382349209677058532084964147611582806356547072028409878720*x_1^2*x_2*x_5^2-75771587915957744907434683741792886499756380837369875387346063946442229760*x_0*x_2^2*x_5^2-241916686361448915971143924624337795349570997891334581270361763801145536*x_1*x_2^2*x_5^2-1127278173429438975728623289018597340741157355698528931498585066381820672*x_2^3*x_5^2-975577557198481387826682509816323312178734254940602417740536747989771997200*x_0^2*x_3*x_5^2+209588135111837138033203184719407036577704627058157249005850282391959508360*x_0*x_1*x_3*x_5^2-91484905786568463675937775180339191819593188105261020518418698093887284560*x_1^2*x_3*x_5^2+68764909640311644367366083125339914060514173469153667211694029367317223280*x_0*x_2*x_3*x_5^2-111220063812256281046397165624869258200134134258651027711178713902565149456*x_1*x_2*x_3*x_5^2+229899930727136526896032451598613672817351797414556645372537476212144728400*x_2^2*x_3*x_5^2+579750882288289652189128902514726988643075970546225641703105802592560819700*x_0*x_3^2*x_5^2-168263709021565966042132707317458562415066645194342687890093084877232474900*x_1*x_3^2*x_5^2-115443811246531658613157562465444056983196418473844456296794289898880288360*x_2*x_3^2*x_5^2-192394681352937380883232623046217409976207955473595021042859939138716899875*x_3^3*x_5^2+1824020364204394830703382121692112402141997166368536008793868237642242283200*x_0^2*x_4*x_5^2-250362486553965586356212582607594535520254993205252073318630152616123073000*x_0*x_1*x_4*x_5^2+61097212797619263213265799286565277919536355264288792914313188699515922640*x_1^2*x_4*x_5^2-475685165510884146192556695358624322438224210625151446156952038912116664160*x_0*x_2*x_4*x_5^2+280575440081568333575099011203714789633514683729892958005322498586496563832*x_1*x_2*x_4*x_5^2+52055387202329785582633089621511405030507767353640525237295423349760924000*x_2^2*x_4*x_5^2-1660218771581537995720194865625988606359096415376084876109932230622052120100*x_0*x_3*x_4*x_5^2+87328282234979747490094663819989593703157968635254556640993879442795003980*x_1*x_3*x_4*x_5^2+657833492091363061889523157048827385918094098413339131019772254321259900140*x_2*x_3*x_4*x_5^2-101294389416265140298597470196869532255394099792907470759577931315855596675*x_3^2*x_4*x_5^2+1155868626787557026381869796749791015104552177796753084910961963768001208800*x_0*x_4^2*x_5^2-421365893995571981209315455304319478816356317773260272077070140455823225960*x_1*x_4^2*x_5^2-605111629917549740310349269464162429133890848360268242897686586380786239360*x_2*x_4^2*x_5^2-1032270945234055837061358975404499213193184468275408342871156140364653852800*x_3*x_4^2*x_5^2+323783019457396791365429950681830989922718390721168591936176446790686633600*x_4^3*x_5^2-268441829572920296931193363943233190226910086957642203027388978150521241600*x_0^2*x_5^3+122835674342638047683860137369267821960560393960343245033442178691403330880*x_0*x_1*x_5^3+11035412637085550928631459927591407328192271299663635767109796488553598400*x_1^2*x_5^3-196711215768868537172424198781495596573223929105196326457174450897162970880*x_0*x_2*x_5^3+2904709652662913752264727354386735115130071763925675240512368863009287168*x_1*x_2*x_5^3+13615062193491005236867169202389134615592571964334825026112769778284078720*x_2^2*x_5^3+472226379582853647023460914651577349717253158921888905098607695443206704880*x_0*x_3*x_5^3-41617855974176068518568224807222465737621721327156975269305952261908773744*x_1*x_3*x_5^3+22854151877103129383667457675538996016377412136607813331851937869970319200*x_2*x_3*x_5^3-210062960407770995816123792180094318992617250243072761620617940496484065320*x_3^2*x_5^3-101407949379412673897004566334499178636522743044620557667688514334885312640*x_0*x_4*x_5^3+95130750651927961216849613374882542536864881067230581257491462029525232272*x_1*x_4*x_5^3+83334327239173634244513922965363482460606046915166793872430784705091964480*x_2*x_4*x_5^3-6371236475830532148048630535653464617191220987027471882810481859865217820*x_3*x_4*x_5^3-22679017415650615514713014995470981601481493810409069559808655576213993760*x_4^2*x_5^3+103030732164466809979068680015931421533638072356221035444104566936936739200*x_0*x_5^4+11512230619982276667600520854770445311640864641561177120521655930437747680*x_1*x_5^4-3564581142466378188747748063884875332485465899117077614402835005387373440*x_2*x_5^4-36517078598216732375488780782214754637853357151156618805572424630967116240*x_3*x_5^4+35594906564759680498925592854879001885343175901750297016782425078170720320*x_4*x_5^4+3899233721232258486570358690439349232278857651600442889822179317903990400*x_5^5,
   27403309094123120068723143781196290431173766952850896861676865471582901238400*x_0^5+43865405207124262970039437538333905395475604712029924369935592956021601855040*x_0^4*x_2+223855849169600747961109845213099994836623588528239293075182669532851751523200*x_0^3*x_1*x_2+174635664917856041228715962701709314257889222063385385862769967081045515664480*x_0^2*x_1^2*x_2+47618985776531042564432036817106045080260346276281942363846950663212712449600*x_0*x_1^3*x_2+139679018595297887205620497729829864131637385442414439978042939179589400000*x_1^4*x_2-19981386471664121598459823655123628112964802595422420120502200211735603975776*x_0^3*x_2^2-139485881744278854866020203797560887301993657497045927328763174483088068718240*x_0^2*x_1*x_2^2-55555563610462221060370969880667972614886812226573631639747608757454499131520*x_0*x_1^2*x_2^2-11017139241512797799255029303000449297873015549133535698029495111741396554400*x_1^3*x_2^2-35633584080788575775180266715269067605898326720910030344861879705916872531584*x_0^2*x_2^3-10469546057605269987934662749073835910230313325787680022006349774360785391616*x_0*x_1*x_2^3-5624132401946202104711873162025786948897003962070219380034165833022915809760*x_1^2*x_2^3+12741057752451241857134063695838552023204835357713178581389081600483061708896*x_0*x_2^4+5349025861938333899847834585802872755844771295403421837357627255805368643200*x_1*x_2^4-2133482736926355649625360682749445509395943207583758230454825421043899411840*x_2^5-12313907557034791432214154567364646627187025892299258065545907457966342898880*x_0^4*x_3+45116114726595165095330385873912925829228970515844908786536507461908398212720*x_0^3*x_1*x_3+76648724839007723979994781892376036661072975536079658836903478333363001200600*x_0^2*x_1^2*x_3+17598825696829028020659280335660270209767865939514454039354977879678434346000*x_0*x_1^3*x_3-438344198978581868309108112359480251322552209530716129136051305601373500000*x_1^4*x_3+26704364744742206535854711746627198019476785800476980296598931196709583630536*x_0^3*x_2*x_3+107445482255941891987476667245036388780653904989568157240985004025307336717384*x_0^2*x_1*x_2*x_3-108576070445726014218896517109428063334898277475466756503006795733807440203720*x_0*x_1^2*x_2*x_3-31820760698185495927617620133884839011369340089026052113167662749997200446200*x_1^3*x_2*x_3-113389397062455591214225901203875629327059557148346828932755989860202360908896*x_0^2*x_2^2*x_3-14267787210714095474493906651489693797389144307328753326601762628070953256160*x_0*x_1*x_2^2*x_3+43247421004921519895921628502582419648644746311665464210706822063509454176080*x_1^2*x_2^2*x_3+55106429615261276831062101067292674647653040564786447453377629855864247599680*x_0*x_2^3*x_3+32802437166990618261188647876611045523675121961687072721228462105640145978780*x_1*x_2^3*x_3+11856241561672208845648408881790992420278704799346107281267054483659436845600*x_2^4*x_3-26070180700952942193015563371351876433756012519786974576386468321771854910900*x_0^3*x_3^2+94397405067327641326085181552484073298319378433156440129225004392047413061750*x_0^2*x_1*x_3^2-83481323156517474645976389345611190798665607453979204736244045983721371557650*x_0*x_1^2*x_3^2-36632261455320247069605367900441284524029514002882899058253119334737800951000*x_1^3*x_3^2+244313933303123479874558073262854405597920079107457726934615893591167696735400*x_0^2*x_2*x_3^2-288957875808577683614310509284529883400111590187018391806712067753732929239860*x_0*x_1*x_2*x_3^2-21053505662552516215481134882231282436237568706952077081218438388037971270500*x_1^2*x_2*x_3^2+23254136194240158733725314344214018257095436525710256116199835353319107625652*x_0*x_2^2*x_3^2+69888571502039307214453129051374985367804161294063000653644032113196291516635*x_1*x_2^2*x_3^2-24853873504368041769271713071670085339134953152827956266564160410222926043308*x_2^3*x_3^2+147983601577737946665665416050969149558161573023531823809464253771962559170100*x_0^2*x_3^3-179071944758990178902144786392624410497116602555830257601490661141306609198800*x_0*x_1*x_3^3-25775662495346164221397290947213178637600345067442058583162668845944481822000*x_1^2*x_3^3-216533045024925711107800215624204706201174493929750620009517383447219718309920*x_0*x_2*x_3^3+70321879642995750695897316552371918657363107188712328190380861841347376706875*x_1*x_2*x_3^3+3804887818335775172420820676731097022000279681831746630278118357142899103580*x_2^2*x_3^3-210012539531477857039765339543542789059077892612384944770022409659701321792000*x_0*x_3^4+45287838699727221203860742732265353741398008135975817665064027082511646947000*x_1*x_3^4+58299181681904264594978259893129624222975468837935380685016679942717828880800*x_2*x_3^4+21798935294261964101609755861745055101684487818956828950021432765589890120000*x_3^5-6771067927769226154697350701814192871591063579946423592078441878720543039360*x_0^4*x_4-131977488407241176725108549642655912493759953807996343853992806162264922701760*x_0^3*x_1*x_4+97631338263817611386497509613966921266732541191302398761165803345968572438000*x_0^2*x_1^2*x_4+114073307627089997908849665672092204095426029408976081753564934164604093544000*x_0*x_1^3*x_4-89490970387582013966088641711572044626236116137661306910336099835535720000*x_1^4*x_4-67621585367081419113830533291596876725501354599252051333172089913606322114768*x_0^3*x_2*x_4+257481083376431382667946498209293372536469968798193661364018187592781650643808*x_0^2*x_1*x_2*x_4+389561685345636855333895757172366072593698358291428107016501644773318070573840*x_0*x_1^2*x_2*x_4-24618123831354115134945829267499237468323637403016167983065709754716221245000*x_1^3*x_2*x_4+200976097741890942898348081935396369354967754521607549901394963293699222442032*x_0^2*x_2^2*x_4+26098592129816564903466659552760600187937025762175096426724920108720004696472*x_0*x_1*x_2^2*x_4-237787612528396006558126209896025590406121131398227755788916989378293778877960*x_1^2*x_2^2*x_4-46313905932779281647216371102959645128376862409108763470067044524803680437544*x_0*x_2^3*x_4-149464847306612037442131469901456938319974566342714566740046912523987639909456*x_1*x_2^3*x_4-22168471911768674605787922591250782043396498519704405107227011637310875725984*x_2^4*x_4-142046650209672152808212219671750334373539010570907707582503937685027553838180*x_0^3*x_3*x_4+115199730448848034391818126780687031444414000135352068479511536194876984100620*x_0^2*x_1*x_3*x_4+185267036605001695921217549432706119769045907318235576705926431091121733313050*x_0*x_1^2*x_3*x_4-23420918411207692347593343457235752362128771384823902175351464712374124723000*x_1^3*x_3*x_4-851737288744059974177526689539085483614520657124572355784469325216559018249752*x_0^2*x_2*x_3*x_4+410868926526155853439489814394117413642398232016395357932950442526698476724560*x_0*x_1*x_2*x_3*x_4-279666453775480520079208158368457854037452832228868171129595946959817336653280*x_1^2*x_2*x_3*x_4-93307054993880293087073696224853826733198401538216106630681628535990361825892*x_0*x_2^2*x_3*x_4-386509922960811333061526579299861990595415267747045797818158374133646132474791*x_1*x_2^2*x_3*x_4+25040281604239685138954556989344749936522214323816243829784828773253188671984*x_2^3*x_3*x_4-75978117547218081078153216101246490576613542101381161236735737746858286656350*x_0^2*x_3^2*x_4+18692802256068129032423688243282651615089197803882596830261379576192905835700*x_0*x_1*x_3^2*x_4-166455286466816568486898577402863580127165766421789843379950862987831794628600*x_1^2*x_3^2*x_4+1051407865317730574668695388152924810898351849719827392284031062281421293254140*x_0*x_2*x_3^2*x_4-428991623780079998957958448972203629025735409326180356376849534982904198070795*x_1*x_2*x_3^2*x_4-62065651438736833484175552574391446405849005008291970614263354418889462529371*x_2^2*x_3^2*x_4+349898511934726123218380885884465414882465669942077282467257277352650916612900*x_0*x_3^3*x_4-227683016622366499695386213511104500332553658174177400650915053080021426638550*x_1*x_3^3*x_4-208501529286107630904647843988138257466876880595610545958835155688006774032195*x_2*x_3^3*x_4-317459945608396559155815661050286686080091310955084892004390600727703708075000*x_3^4*x_4-9798930029559697399950057244565636447801664098032668032497510269468271928160*x_0^3*x_4^2-316484684084560642743007338584015244266349687381958567829355910463471573678160*x_0^2*x_1*x_4^2+127917205150689245690613957036327500420710167882135751072131496979150852515200*x_0*x_1^2*x_4^2+66812925297845777731706587706417681482131541922344632343369523168203449762000*x_1^3*x_4^2-240784603437094801558533749530707019335473497775294668827005759660666552535984*x_0^2*x_2*x_4^2+289492091995414489765925311678121759869607829700779084584256768051182629086480*x_0*x_1*x_2*x_4^2+361642005830382161205787675266467035098605025378413821900747269329117830608600*x_1^2*x_2*x_4^2+582774982655332392268633188494016139284341651502448389065598430826676536835024*x_0*x_2^2*x_4^2+712860863046091391552370559948890189046654944241662626855904135265930629661440*x_1*x_2^2*x_4^2+207765283442692950465942454243048174490279758098696609288040813945030683396360*x_2^3*x_4^2-292776249731379763817320398401254912333527078402954567374961638695327548715800*x_0^2*x_3*x_4^2-16930108907329847610872518979805975322625985691996098963438785224484955682950*x_0*x_1*x_3*x_4^2-101259772228390037534471826791469049017096996572414934432650030856032651086800*x_1^2*x_3*x_4^2-1166598253225988835679259155414210223171163419378877491107085332244384768566560*x_0*x_2*x_3*x_4^2+247883553648780116294562001870785433339446000658293815442327246482168863173900*x_1*x_2*x_3*x_4^2+107145541536826970316130612864675877007545963368020230642744505573611487393435*x_2^2*x_3*x_4^2+469085402666187462174233081840501341573341641404796259585183744346937134186050*x_0*x_3^2*x_4^2-128606356895826178950217285476566243552393855216786232321010151990392816626150*x_1*x_3^2*x_4^2+746773189500903214095710068928381824080829113231288555889262445225521583504975*x_2*x_3^2*x_4^2+52729083447585868124325174225551936391899502662886883237598005978134233948550*x_3^3*x_4^2-139654054766278448791048019907106251109712428481348441893004718938347913671200*x_0^2*x_4^3-602514996847115746909036639207042376843641993075855467847686179419511727357600*x_0*x_1*x_4^3-11663860058139825608873927052988555392482272698110494173687288342451711626000*x_1^2*x_4^3-1339467082796496349952052800193953223952216411191803527117119062639208064069440*x_0*x_2*x_4^3-463298542288487154103870805613349264037079891607238842033826102779212895532400*x_1*x_2*x_4^3-370996504033815291411017692597163843421680708405163696712044804442918730934840*x_2^2*x_4^3+428199662002528290391697033912630676225560005882172980029019007546747912002500*x_0*x_3*x_4^3+79711629625949235642691399334583520292810044889952798270455229408240192842700*x_1*x_3*x_4^3-164386147075568978918716782385126051748995951700820079284966857398622709017580*x_2*x_3*x_4^3+645217131769428225722238621913362703927987727101453130865887328746944853508150*x_3^2*x_4^3+136835887453924007282848068563654940660376293640646868244669151570815406332800*x_0*x_4^4+11740873808214168242842225650059747049290539826175473122181177819865808140000*x_1*x_4^4-548638366863350725854864558931832413837467647315057025850481475076223964816000*x_2*x_4^4+1065152984039552539211557266375078475031741922412221834213569919778553785254300*x_3*x_4^4+507092075009670286322205421993904633379056596009193752043417301167712254724000*x_4^5+74693812202400600200927298272483292479993245883374279612478688019970447721600*x_0^4*x_5+51027231527233468312797323878322075267386567701312157422525815977933112788800*x_0^3*x_1*x_5+118517076859828294563419602873605037789749316169053813805374985717944148664000*x_0^2*x_1^2*x_5+42036507109387086711526938330838555516853145856606375481023052242801114473600*x_0*x_1^3*x_5+216253584224405952266109182557502504800432816209475683516024076605112776000*x_1^4*x_5-533438078109804165470962476953417100232288738707604072225911389513548577051520*x_0^3*x_2*x_5-280626792833387409296678629564618949245794845572035576901837579771378072700160*x_0^2*x_1*x_2*x_5-147992274975765100457229470547954679050929561516956300038226712811401306905920*x_0*x_1^2*x_2*x_5-8173066484942326622225493538577431940991887035041707213778711378422703052800*x_1^3*x_2*x_5+85608018598023328819450610620077885541339555285680141385446814553564342469312*x_0^2*x_2^2*x_5+5762026825759965092001940254803405475605889238054088007836482772180038554240*x_0*x_1*x_2^2*x_5+6244778303530685317724330656143662678906756088086244012053119322686606548000*x_1^2*x_2^2*x_5+28187141179149071178327248413228653995133329589567422505584678767375238772000*x_0*x_2^3*x_5-5719104162639155861198992734781734982095054834130435003262853240464375484576*x_1*x_2^3*x_5+3211338203593495036589941759241279673859066378705358791271814584623103658336*x_2^4*x_5-474997834296986778987485287455870542841769836877351299817649680976558943026640*x_0^3*x_3*x_5+144654829706810718711321226799238365516642577060648101405739312478720503506880*x_0^2*x_1*x_3*x_5-62555454946845376237961741338054479304167482749542240884142256695150114450840*x_0*x_1^2*x_3*x_5+4251793297331904092093709474698707842601910573534584634861953569421760304600*x_1^3*x_3*x_5+943444540365034621511203618263794666089941328284176693148640677115387726041408*x_0^2*x_2*x_3*x_5+111135525004328067099801802906453730183687230495946829904875954447227162414472*x_0*x_1*x_2*x_3*x_5+190001246471447727249227021658162345658162104741828270591982018497041135879520*x_1^2*x_2*x_3*x_5+58026371666564190533199115507109020678430082105277476649456910513673052042728*x_0*x_2^2*x_3*x_5+82938351337114857600608207052602117350337909789380303129098639832500672250356*x_1*x_2^2*x_3*x_5-67390807256042112719949814513562951647048912009569115745600845678624813046208*x_2^3*x_3*x_5+856554587261278196454575483506922772108916403272885775693267722933397687290140*x_0^2*x_3^2*x_5-183792546052894260409168887735880770441040938726872783649030220218705589644060*x_0*x_1*x_3^2*x_5+54092588878846011445111512253906226194186983066936910068722332453582188107700*x_1^2*x_3^2*x_5-655960850613013448252630819439080372255810452017241905682767601108103748081948*x_0*x_2*x_3^2*x_5+139086392043555987211568692161643247715392424811490355427824159359112677795370*x_1*x_2*x_3^2*x_5-74902835391485405021602780310368308737433901298034680193473743399910593185864*x_2^2*x_3^2*x_5-690039755957172465770022047569980663134300504017659020607337885304793228274500*x_0*x_3^3*x_5+36241438597808128905996588189708357654123163862960686339302101638581315107625*x_1*x_3^3*x_5+199479126187493428199696814315791842616474785149998902120497922223954466447000*x_2*x_3^3*x_5+139653019107979467518897621661050839612500044429441442305882318582362260267000*x_3^4*x_5-212707890243748342514843509256256445175348813838678217760881619902579969576800*x_0^3*x_4*x_5-45269378006479474857367711558905727730122241888336654759814746613923937485760*x_0^2*x_1*x_4*x_5+162030876467713270187096079108210239476430226150392617485776227303324830399720*x_0*x_1^2*x_4*x_5+13931009537388304597463984910425433269303965044985074089731046722141808237400*x_1^3*x_4*x_5-2090194571285603474673945808329863722952676837317367095212871313786493777134120*x_0^2*x_2*x_4*x_5-298358425906832170828933220656317817030533846347909599328875804030830418781400*x_0*x_1*x_2*x_4*x_5-149149105911760082020535073695269467819991908791630745716856379559598301932480*x_1^2*x_2*x_4*x_5+155826508113632604002333229384215103892233423099110453336539614964966358819024*x_0*x_2^2*x_4*x_5+18000944099544017131758028519277483963773418150023861708321001317530928266528*x_1*x_2^2*x_4*x_5+307396979751239124063228953602262615121760380250787884602043106792203877659704*x_2^3*x_4*x_5-743885659281025990738681299180542012580870637085332075404021008694665276181660*x_0^2*x_3*x_4*x_5+640588733204569374330363944656244839666644277931435492565511611043794817072320*x_0*x_1*x_3*x_4*x_5-66509262550698608008698194680344886369982317344085634381788685948073004110000*x_1^2*x_3*x_4*x_5+2666405087487623486171124032279226152285635366034244646785616279004930624959516*x_0*x_2*x_3*x_4*x_5-211102617865775047676750309266754154192786298691084660590763828855496328683624*x_1*x_2*x_3*x_4*x_5+79954755764616460303069973265817350056862157756791973184274423796895740183516*x_2^2*x_3*x_4*x_5+1718614547082629946968153746124824712234045002693632481411026948149783726174400*x_0*x_3^2*x_4*x_5-207825435296218190521034945802533990939266975746104258783302060367723258800425*x_1*x_3^2*x_4*x_5-772656295229574246023567437561353827991556670940313686268837812935117701238950*x_2*x_3^2*x_4*x_5-778912652936697344423571029701520656444152889113047366796569419937458568024625*x_3^3*x_4*x_5-85399949920015571083121112118262455609268489112624767338668448882874678820960*x_0^2*x_4^2*x_5+425739509697563918670806089218022873129445881122584274787820306128898035552200*x_0*x_1*x_4^2*x_5+186042808548997185963923706546072814227261038556822059634959182011588301666200*x_1^2*x_4^2*x_5-2267245783583108174317157252008510066906745344257249143842706797946172500833392*x_0*x_2*x_4^2*x_5+21143846165670578001686866300686364607334885933990717576133428769057528547760*x_1*x_2*x_4^2*x_5-106022939149356661746600331456093396040658854440293563709518827414279824966096*x_2^2*x_4^2*x_5+156832796263599603805848166819964063645730987588776389950211713179008046273880*x_0*x_3*x_4^2*x_5+341443195649203863651811323698761593759173207830994407886968492477504163347680*x_1*x_3*x_4^2*x_5+1024730436450752308326060081346598825803468397523531123782857035518757129811932*x_2*x_3*x_4^2*x_5+348122965666671377247162058998768518461189623238812183642662444024635611032325*x_3^2*x_4^2*x_5+542218098587594363941608467211164877834193479738208158371011048049450712272400*x_0*x_4^3*x_5+18547291951408946308493583673166822229269130042419597399263026787979352210000*x_1*x_4^3*x_5-448287515948381146257484872396841577527934410286048920809781796303745480636960*x_2*x_4^3*x_5+32183854614493238740503601141798793203056539119085147796237945994762944207000*x_3*x_4^3*x_5+270544284395841310949703583890895434995059461963622956108919364193020215996800*x_4^4*x_5-538698805344320348899182011787527378430117754474042480215896186940438573984000*x_0^3*x_5^2-73100341247833385738552288513808876798025488585654059824897385210811332482080*x_0^2*x_1*x_5^2-143805545998077034332908371179680344505765287121450693889824218837345330441440*x_0*x_1^2*x_5^2-3495659153632645537319808406698909238232207763451639476318777513515267652000*x_1^3*x_5^2+199385458242653543366813234830015202723764178001174043631819311465365567312480*x_0^2*x_2*x_5^2-197118971501080990495215805441042960418242712312137208585144056905380821445376*x_0*x_1*x_2*x_5^2-14899475987370531207239434791247623412707683713888196888041706258870611896480*x_1^2*x_2*x_5^2+23428672394855371720415703190502596905421136984167048681761950703184426097088*x_0*x_2^2*x_5^2-2365692665255351065545020991871124592004577825506458882074091540778785377184*x_1*x_2^2*x_5^2-4892171758803741372423631241514943219842031456547408901824253455194411555776*x_2^3*x_5^2+1257309512839802464263920643980643822426140381465117898509875367026250131686000*x_0^2*x_3*x_5^2+49271773798406078335306906881483457178558664679020150949553056330856172290760*x_0*x_1*x_3*x_5^2+55760061087198602195335660578013421863260260702700755405933886487570115044800*x_1^2*x_3*x_5^2-537093284588592007592623015663908355931957898179288653594183751202940038413640*x_0*x_2*x_3*x_5^2+18742877615086461128638757078659624435283638615888623269520662787671326254828*x_1*x_2*x_3*x_5^2-97458922777487086569814736535938643308582825841580289130688910136536290813536*x_2^2*x_3*x_5^2-829458223354327417882094912542202577048529633504004869170059883088389524701320*x_0*x_3^2*x_5^2+30663070197635371219548929263432409590501058698918242291732065752394157585915*x_1*x_3^2*x_5^2+303753292385623619893057397879772545636421618399533192029574295214996595368464*x_2*x_3^2*x_5^2+390648963108429907916559480139605279279167489718003718518696477314405078916300*x_3^3*x_5^2-1237115407238537136545999344238942718940879212440047615525257585127491237468960*x_0^2*x_4*x_5^2+566526786015371005313436745321319844607917367551028162633951480798769666105520*x_0*x_1*x_4*x_5^2-50608681255729619362819160409624076894160496730595924021397090852665117670120*x_1^2*x_4*x_5^2+1548893573262738993562704424780294752474149794302213614276859125843233577772600*x_0*x_2*x_4*x_5^2-175887057562464407335706727483928892110298543836593571554726153217464552738048*x_1*x_2*x_4*x_5^2-323209003843500705799485460807045436002423568702499442570359258036114182837448*x_2^2*x_4*x_5^2+1923749555897180941452936613771959385552066218922217150616934109395755965692080*x_0*x_3*x_4*x_5^2-145086708015224233492728614262508253237469315527027091690066486740935100242905*x_1*x_3*x_4*x_5^2-1143485211863969236418927675398729779584745943621224774516670513085544878224764*x_2*x_3*x_4*x_5^2-734362092579954508599646655202573626254795235410789146116850133622838285894135*x_3^2*x_4*x_5^2-1134703760655421989339671257887294927726573277694581493256223180489368364182480*x_0*x_4^2*x_5^2+151775129487585550994006218394568782952868990052423424544001346719272768252080*x_1*x_4^2*x_5^2+305394851498902003966394931905292095309088646314603169387955236605506990720424*x_2*x_4^2*x_5^2+574986835793857344283066618545159466232072536098133910835823770580200180152265*x_3*x_4^2*x_5^2+70559064262916120930179944550016915009184995000569201041013035713731716061080*x_4^3*x_5^2+384702958155742568351746460162578104541006627608980754437587669653060466608000*x_0^2*x_5^3-60727385098073157098280891529274750510899915138534441526798443577256065007360*x_0*x_1*x_5^3-3799684624972330036811388018000586536692571040457864471789042410322565008160*x_1^2*x_5^3+21196792287865217446725003583840580029433156841488022990180315975155691672000*x_0*x_2*x_5^3+15370362807830708422510055976896632010921718881182495820378845982532487505376*x_1*x_2*x_5^3+6732207658280622013969528957107986091383643121563937689884513460564251001984*x_2^2*x_5^3-845200165222735334603622014243173227629139562013593151557321418109593224457760*x_0*x_3*x_5^3+7331321967536569133249283417929965526527688404797025011278194085491801324644*x_1*x_3*x_5^3+139600735495714114083799182185209847952891262032378012248908510964586080787600*x_2*x_3*x_5^3+345420944155317986463281818831913063349145674765596836703687552900090742679380*x_3^2*x_5^3+524150085093098012318399353513480132356597283224687266713552082671244671421280*x_0*x_4*x_5^3+9106588967663942664976997746415657237350539093186859253608190887345113714288*x_1*x_4*x_5^3-84557748876906626891616892696769283509314465481988126275643144621946129432464*x_2*x_4*x_5^3-374811366167689843947605813316452024901724633023059935278767066682855957572928*x_3*x_4*x_5^3+75848121064480716008711514484269441705580570427254433049360392671605359577744*x_4^2*x_5^3-248561904840444041571542549748404013881953150751677470343940171171666811235200*x_0*x_5^4-6036964862137512735490981330637915971864390402723173852548374633148922688800*x_1*x_5^4+15910446587307890705884494592383191916373192228901053979579125261018883896800*x_2*x_5^4+75651935980709304671550363923791298685941142231143954437596931805406394361520*x_3*x_5^4-37599638445693575185675319221935041935918201097621971561234387419243006232800*x_4*x_5^4-6423379080306349981326415323704760515442561386137551722491827645338397427200*x_5^5);
   D_8={1, 5, 10, 10, 5, 1};
   T_8="quinto-quintic Cremona transformation of P^5,  dim(B)=3, deg(B)=15, g(B)=26 ";
   x=gens P_8;
   C_9=ideal(1967526788563366857515088946678814051419949772934585242598938149796291216610577520*x_2*x_3+20904297465443271480537085366523514859790948461394194767711076682389781357040*x_3^2-82636125119661408015633735760510190159637890463252580189155402291444231097644255840*x_0*x_4-17037341212601603303359081731557643991755952428735309109049381902590086589911098320*x_1*x_4+486207366961384520097712595186947820905179141441184039613637125452164082197515207840256*x_0*x_5-8491218697203891382035702496607495647352550825526471808198397932950469375452975598208*x_1*x_5-12825055951049882025884203125769843890022085727117098899589623307246294985589822933056*x_2*x_5-8501693529483611005152299393193959994205399122043538567258842883370206115607647744*x_3*x_5-8616371473814543250332807304696545038530998211247406305382954844064389669275271600*x_4*x_5+5346720990066401282675263018846688328974362285555192022135443355361357215958846036480*x_5^2-1321264327047340676204992599008117012503423251069581771223995397738325906244225925*x_0*x_6+1149610189936289657144396382920262528625822187935685597845373531829277373374776888*x_1*x_6+16045770744685656295375132348331324998758646082321305018762909276330909633064631*x_2*x_6+164145198528386790534693327863986095936199825324667337507863571852179307518065*x_3*x_6+544264849803909865441452142690854160989296334551540119324008085666308156657703*x_4*x_6+684783223443407345506056719072957401973709913503852685735081446431252051469127632*x_5*x_6-17967372839462654404271462331524116265593611661314907870926183185522845472327373*x_0*x_7-31126510156518515704820759957861700089714086977447849351594611201420547794051256*x_1*x_7-14307362876231539937047109351242839195592629177213204321704540823360543217539873*x_2*x_7-2984458155061578009721696870254292653385451369539406136506610397312351045783*x_3*x_7-9059552643271539421532191906990953241777386326117688924273522126637284321313*x_4*x_7+10309223186570583896272859231485951179997619839910353749996915119722206840725096148380274354457558730669292455025570097093784702026960181956731996534266871854146829551088834880*x_0*x_8+3788396118532605387618073544038767567095092016300161012909571706908390148506117119776209019799124517508124582827212014418280233693184192469961588452666826882571007059319822400*x_1*x_8-1429038906414068436838876793419021296514239434132632836637903455427676067268931944100974980279903791141336671046343607749082801996570371890790182012196160412663260193835265440*x_2*x_8-123176129620006983235424704368768571322087134683884053127635810327100394860207208425843375041330376337245792526875958942369912525840405468401552170010561744056471959412320*x_3*x_8+5919299352964743087999823351300982154726803069463320845536247035823007917737926777375747059332315569188315847444855482824810607148664731090222114713607525225597094571579505472*x_5*x_8-278685153606590773022282494435131615517740402155668705995165522979176614192555777069032172928394471744515445448928206923118235400072298749085339192625822551869909300639334*x_6*x_8+5613895978346697051362422247204178240567884163329742233460411268480437216104719557556808725408550223083987433922183840584040673370488327821441914272400326851199605892138*x_7*x_8+78436703192346693475905385342428849023052781313390142478656360806266890895002151400180886392362717877864539530699600185879814805808158683696428461209946579806376838058421804901691326036505558996016268591728963171018989868076360270790049287477932057030780937943680*x_8^2,
   281075255509052408216441278096973435917135681847797891799848307113755888087225360*x_1*x_3-9942435306346675641762436277276914813870907709121401771045808290506024139840*x_3^2-3150066427635925960934657801365515689553809445351730181588006741026666468237863600*x_1*x_4+89005867301102170077171940189404745947154885653327812437224909182910826687543089310464*x_0*x_5-3429312750828292332540119421607736835081243213802896053831804979092892131570036287872*x_1*x_5-3995914738585935235836267216235837940158686486242488609065156419407584970722247381440*x_2*x_5-1611437022041598115224492956547493659388217214560947991485301115922629924672027216*x_3*x_5+511997802625939294336242579581573813997060318767901521954159540059795788082185648*x_4*x_5+219748691299072042643793193278352010311566396811549157232804530655130912545620920320*x_5^2-795946400567804645498330761043617245394134035528856950290275997841764997011732935*x_0*x_6+262473026917241593288348085422341141814341479884687000781407984732842705110603472*x_1*x_6-36805890667980847853182163800064520463594155549805908919099310828986436586289281*x_2*x_6+37884654668972198598143039855592346655258811069789505883140072091893354196810*x_3*x_6+134994833907743727968412530062720617456291052098059350937209365195424105662332*x_4*x_6+173869452716396974275173287790227461741100526476435416514930384452041403883322208*x_5*x_6+23661052513681931847151334028935393573948130731160747516239427808955537816426433*x_0*x_7-7903156941654407921598785808646702806413660294383428023405926566001881994696464*x_1*x_7+220591713639442037577355024869178128451675707208237540218181257262488746809431*x_2*x_7-688811903072221792693509815556224484641069292177991016057092219852606439942*x_3*x_7-2852148937849207534187088906776906000851037255602298815154729880627951977636*x_4*x_7-535115318230677166609386569272779680877370856768083727270879844959215644643687676370929987242288493387712205542820565446787820865005260725272443585603378899422766310639709120*x_0*x_8+551049955092091348667726140067166402236698742761938685607288951959399725841148914882630179446361259971877885962506291956227040268183257852363578875825216238588235017862806240*x_1*x_8+7221313051421604543154804400179672341289383951108229278130052211725125252503179518844000482960229718178403279441587523096820709413494707317916477800207481161266590596480*x_3*x_8+758219127631106973187381043708592388962304540301011695973199576750943255832165983481369441364433846128860496353170949763402455183002021440077020745054778688581824178677977888*x_5*x_8-64358916621360668785230059981726734783495141394769064403651943011441923233850282079038398430025175427174861780060396548251874592508667256744769821938022353602622566927956*x_6*x_8+1300558706008829557505199562872344909697476171603512159825918905185797200749417179965401511770023218060032595154093904612184512059205038842362083465568995622375224289932*x_7*x_8,
   1967526788563366857515088946678814051419949772934585242598938149796291216610577520*x_0*x_3-26673713983133459899939763930535680876430138422947048281012179553300031579440*x_3^2-6465946820396970680614001086768689036524418554447225964018836601479409342377510400*x_1*x_4+141600161288544383363498736308312668081969439176097222799194101655376858291051385224960*x_0*x_5-4131178372446705614220690805903967803912168227833936712712413256916875359944547275520*x_1*x_5-6102875433575889685718601408014859721768049912757166447749594282344057703984750896640*x_2*x_5-2399803145808349561873444583232964727528650783048768365673378764850392402284952480*x_3*x_5+473619998881723420734815127029382845702349861285699541092617897753807714502488640*x_4*x_5+622960041594430593569420120391884636947922040125882768220808146745130645663777318400*x_5^2-1020576378140288455397743701819578443002177945240613739519721160332750185040686250*x_0*x_6+396763093273735741169970341070375091350780938265871091204416022498892318277002000*x_1*x_6-55672448861642188334490658594493189814725792801190686892923224727670074164207464*x_2*x_6+65042837690422553449017331950443015151391085734254801679694809307492602027975*x_3*x_6+248032943985432127643213556491223363775108699373155826780850423404988075100567*x_4*x_6+245008158466101274372822186138553103678428601697807553573065289184138958650510240*x_5*x_6+19924409639772245247960446827351695654843546424734867594404343772124254501093590*x_0*x_7-11136734475731876107855553915388777439928572804445797889684785872006316302295920*x_1*x_7+331308190779234264334104567558533952040957926681942067148203132371114698210904*x_2*x_7-1182597048916773699073042399098963911843474286077360030539905623772592764145*x_3*x_7-5576638449969558898601473402516397485513727343702533327255949425859057174097*x_4*x_7-2248303066443474621081612496515122106296390922023070595436095557929350480646116285233285931902087630350329484835921436938422827542764578199709303744337582378706506093453065120*x_0*x_8+1410761522210564788291237749554319799617438147051607671508013679788916963613598351964349402007713097802220483827064050329682120497377831161014160923064519636125096298545253120*x_1*x_8+19373446543155440556489189668792940581779531472678038226629260107479032631627384290027066615013276675179700062125554410015574860125440197872339841442746293722707423067680*x_3*x_8+1139459100383429453150112409577024604083982924196639071669423323769275683203435922263961877110870900849198791015625758757514261731296505192383520307056056626957648608284665280*x_5*x_8-110850533283011926592086873069992081750836236635387088923962830950735290711070436864338834670380769023924812273163968978407975954194236699257457385432813728308055730964370*x_6*x_8+2336609298360421698514181182384174915438380979196790497184871819884580172666521579298989995583890513874132047391933528445021544079447980952167897949988939195953425230750*x_7*x_8,
   1038854144361457700767966963846413819149733480109461008092239343092441762370384930560*x_2^2-161972836226818583852115041347315907892379344273099014132730315801799083269520*x_3^2-1300190891434861062709136578849430376188296247338722738803018092497766902039165840*x_1*x_4-379298284638966778211906562801093407902973346237909425712135605149071818648970658065408*x_0*x_5-2705932599956839510461435393850428942759501771227193079673524098805495505967175472256*x_1*x_5+1515748356797082178265459969192706235053278205289679125247218372961769087839536319040*x_2*x_5+9392023630772721463271781745760561112185341326096336908012325385043857314269824032*x_3*x_5+43153285188313728498524202768705572493776430518461288727162628314385388744395177744*x_4*x_5-1105377620548780564937494414874109651413642060689033934880472015493321663900654691840*x_5^2-4728323347036716665166014854764083112047448874067113375268424369053614243432187645*x_0*x_6-506477284541397648816887189282423042925710852171000962483756919606175362627299224*x_1*x_6+105122209527016596677603186423498227963789079582977205582434790508791613289194607*x_2*x_6+17402326989221969351402705175652045661428756018660572355395803580169912505305*x_3*x_6+198830485764476666012226009562310446929267172668321280647817035543026754895871*x_4*x_6-65425498128524099657772441736211707337842216617861228258076450093373927717374416*x_5*x_6+59991517084155004249526599174161694918390456292565695145552438280613249408500379*x_0*x_7+2973886278569277257171474624373259424447373482630055829912565913335178532607928*x_1*x_7+3674929940117903690201180806228813104587770676832793875877812083943611344015943*x_2*x_7-316405945258581260934594639557309921116886473066555861007196428730362045551*x_3*x_7-10094013190245046372488710918661917168954576910347983849814976914672449783433*x_4*x_7+9285044275720996877896183186023805871195900305977451892565033730020229969844087910212547841599497703339876646044961157699274462442476353208889440715350740588208334386812120640*x_0*x_8-274231558044973768550813651241598225011813132152138477875100073831293129441945741671747932092485315931196332419474236514319636000732361269638152713842490251191541815186321600*x_1*x_8-57020346902863550227083855205131262811754922055483405587279124670202790344287215843536658038018945857935603532575369209252206315597696660969110650571129303022633465254968320*x_2*x_8+117642863159879755552194710635248808945452574854629331980348199852231018441409490663343316513149177997703760229110112742164937748396851213144071755134663042681020810489440*x_3*x_8-13859028962738259388895646835462384897446045491086908817867268531755440532393116540890617314372436361138433426946857531824258646053649805714967724409654331113880797525410654336*x_5*x_8-21623178331579682325208690168576316632583020956418060110818994496761074576477803429149912207749518941936935981032719119611136909661247815223255622764388458928253108642918*x_6*x_8+1809696904990838102333245579631609255996406267901580419720497053968511918013062922245611708529791821064844168593947003998122621770230727809055569220093925560757504613226*x_7*x_8,
   22261160236316950730742149225280296124637146002345593030547985923409466336508248512*x_1*x_2-318941392953415516479060003386742165803427551193874675637420938021295747520*x_3^2-100860733514700943257805169481341642676848579081130519554543631928530897309128016*x_1*x_4+1474958925144511320068024962372408297247798147899273366921052079397905215243788170240*x_0*x_5-62422091608388668294878732533176596853724597184712627292629339914857968654730678400*x_1*x_5-82794784620994229222231989739174755422365406865540892600144749749952742565339363840*x_2*x_5-23693013933404791861710798777885163221937440961824765288594068412615911060243520*x_3*x_5+48014196373929019083782797455987923605833678009642457229663433251191997401868880*x_4*x_5+2631293978338706579735402827895750995880680699931234059951281576855875645275776000*x_5^2-17519325777383370676861046343483891074694061422535891079872267340415504110282445*x_0*x_6+4802961916140122602622758130736948867210766376891572920003879120939430384278840*x_1*x_6-1442768864109357342237547854993258989181132974678023233531048259804742272168887*x_2*x_6+918607943570368461688921811116443830656421554093610454570655194445307617250*x_3*x_6+4156878375183229137489253574874204175547977661104192007699772135675721374596*x_4*x_6+3261338957294795256700445510626676711253641452944610703736604670655936402273360*x_5*x_6+492047745525308846467468118133456958296775788235226440861162572109214284099275*x_0*x_7-148242679877036148031838432301212577784256429679300486533482030484360745557880*x_1*x_7+22035793528211317503953786830023213080013322356929041507643768592281617035441*x_2*x_7-16701962610370335667071305656662615102844028256247462810375548989914683950*x_3*x_7-88337262539649877704421556042273398914827604976922114438219967260410400348*x_4*x_7-4487623858560652480619154394300910044329078568089623905652304760798320415838547368552586870758682012637628133151631729097092258763650367032306571257432278037614130554712640*x_0*x_8+21224321321732226348971246083261479303742875679139988740133020758615145671026212269727399402986212227870330567165429340404190186840177724600102446259713909657492197779316160*x_1*x_8+231651056567888546012210187964329432383712072887146932466308778110580813473240653177875472351898116833838471833771769918600049164929056842645406757445452108928669005440*x_3*x_8+2685967140500309276996294046999244207470240568794175474067065072259238867868463421043210654722521794422963292685647958882777086165391578599872488396408047948633542829407040*x_5*x_8-1638281953210006198258207304441717785774716172543509195365362618712198982717523614120804714682494449582119340277065705524748137807313560833903394751369561777367904960900*x_6*x_8+33410363974144559469973873556132582804719977146891786662835168234545046140707716932055779162175811961155445228623615375162285336487559362306033177231289294530954731100*x_7*x_8,
   1090796851579530585806365312038734510107220154114934058496851310247063850488904177088*x_0*x_2-6818779536125106319241891526253522262088897839904310978025616597847538206320*x_3^2-1720123593314171915065061315545233431992650885617966334665728522837270657021379328*x_1*x_4+15597190937271399335176908599055735359246765967601386462625218842054592031467699670272*x_0*x_5-1141367766559793066719737631067367236071965374506213094339575731029430986299845105408*x_1*x_5-1089088547672393209328507921610779832934121061008302964006595920710863970237497199488*x_2*x_5-187606481396771899150580004395706016274871121188233298283045122137297805699356928*x_3*x_5+1531648740689385094753028063458327829633496138347582725350974401435030031957843904*x_4*x_5+101760988027207390540478879761579208807488691229793321309781187244286375661375290880*x_5^2-330315018525642930474290795074118241304421746031478385338059863901316307342335282*x_0*x_6+57338149779609812612099927357304207192112761507404376777576992988376639083802272*x_1*x_6-6277608971210091310087725720396850131992868843850215798857038899834773176792140*x_2*x_6+13030117603303916934890368413715195093429024576715010910994837815869002406145*x_3*x_6+60180978594237523017723664562433977151509630832114331689701075750400591327241*x_4*x_6+49888474523651840043054553064364775437006136461015434242509100111692400301657664*x_5*x_6+8086744404213741880488988048702153469706404160374954358994650341362919169292350*x_0*x_7-2267657932893265456502479684743853428954824384591610647386777277804200013711712*x_1*x_7-43423907363468985859021578826307960817678065564274152866928784367723174839660*x_2*x_7-236911229150980307907097607522094456244164083213000198381724323924890952839*x_3*x_7-1366950792249322853091924107639849565965549201452796651661044223012094097839*x_4*x_7+8529070914347484371284775925149390064238249004078186065411745623639122510295040325233988850135298833184393669747850227623800033447893658711651926431354778189553611150092800*x_0*x_8+365453481149384511364588333588939108653018765654942100382896483802184321684639606104802746549218853818975898317428109083305223521640914185252449650506006741085808170668005120*x_1*x_8+4952563445653447790431547466582921669866626582095516335666388679016005265662455289964350725846296383995517779481801761226299053254176611283598765214237939944061929499040*x_3*x_8-215486746745945768849795320444076048224771063183369779542216246771816555502570688934154459280052334857518962656988989702556418193361047591854886285878411590674919280514165760*x_5*x_8-23462803950756358541490790828110988992230773315848057681961722207212447895560474065687158412440899137582851652738951195977415944099585305882255429189081356938484400860334*x_6*x_8+507786945859290962524162826987841177295821248520223995471775628283982538500423728804166614417530074408464754276804744506198020842384026363550929921561920325401037428450*x_7*x_8,
   1558281216542186551151950445769620728724600220164191512138359014638662643555577395840*x_1^2-2823462970485035481909501098598733280487549453442046125731810675154406118720*x_3^2-869333582878088909486544364028744036942383430608470973321429744502405009407351440*x_1*x_4-15242258115442700356847504610641385933265239545741105607895024486177214064312507435648*x_0*x_5+285918238812440021952155739493208416291229640987695048144818335442532003212948449024*x_1*x_5+568809077535560787986326765132244778584315630363358016081674472334207111480827786560*x_2*x_5+305289836254754811118586177739377951495834410860132749392816665102569216073128352*x_3*x_5+738549091726130161208994888441518930665655605327365070809152913042875867471742864*x_4*x_5-19118912078728755319776093285258269563485891384424224351398087756609724226732035840*x_5^2+67685134513059142993582841593649115189119431322168618998952410288977623162146005*x_0*x_6-91892013242992103605002842055377610113819409798447791101645527899499109461768024*x_1*x_6+3784444410661723644173885337073927191348137104952666722861391529993595322837667*x_2*x_6-2542070310639597419015326077563868375871246833729664816237699411940202584770*x_3*x_6+33780382017991392844756069417844359755873960545864063522313457772492602796756*x_4*x_6-35278317481670770790122372936509605662759058898468596540728045191444407421892176*x_5*x_6-870586839767109772638608153605950091142342745100064189188418872351799603493891*x_0*x_7+1603559885530489581369198769841345711943593586294027115487638417792927610086008*x_1*x_7-16333820690012554933122345822254492331323270918210008908112293145781026013157*x_2*x_7+46219460193447225800278655955706697743113578795084814840685443853458228814*x_3*x_7-727127282782881289181035851541119508599028533517028454525880750142405386508*x_4*x_7+81177389612424850175439807799145516928101023987317873908713612881122068327171423033494682521705687018519880062432033401308706426751474901888973821332486984048127816761291840*x_0*x_8+93190313854964945915309429716377556439401903644034140809298963511779476083819572253125419484233501600734843951576919836318147530288410853155137985764923608047820919058332480*x_1*x_8+2050715883054725113306820947406146176473960914764901893376907162886127517730118884370227425574025418738477679100747108928768885827234986131425939242385540446733410771840*x_3*x_8-290943568530652603183169128868126885171313842526010449941183613809344575462141285172028931695926428835887116037748863146568419475662768248782862463008033170780180853621800576*x_5*x_8-1102482192429738486195915231193883517621027037341366424365472344550162433040584468887279765990322134112429372462519104210750189637101962135130201321583115938710489238428*x_6*x_8+47202634150690123811112731549739648263076580543646420069643504850813505823621324555124329533283397550471577876532312220318568377684638682911577170811244663563445144196*x_7*x_8,
   1987603592528299172387691895114312153985459464495142234870355886018702351473950760*x_0*x_1-2297767948706418284899513961426180609172158819277008054166188194141532160*x_3^2-710609019154178225540133130355580365903610206639163831828696215164513213493220*x_1*x_4+11592414793101099224970122725989834787778855814139848374006403297084751023533327256*x_0*x_5-556483282932203943453064919569746414988838596670042004485336341809775350150350688*x_1*x_5-578468545703150749298749616011836242482004473339760797132548275341806984379940160*x_2*x_5-203339231818949005636749688402147865027634756381737253407943001220462804154084*x_3*x_5+270716383606139426934452791967578550004805604647734077710209897541673071856292*x_4*x_5+30561809214537845166686025424017391149192613549790446305190757879095853488956480*x_5^2-200370694375502191621309328976283390647855604262039572362922716322856401960185*x_0*x_6+38098420507405376755673339916848645992752381689747811939312395004659874338808*x_1*x_6-5115818082103043573295399823832330824889373699325887679163021570564598297099*x_2*x_6+7552175312396665168661450155553034033027580168644589034871361089902072090*x_3*x_6+29375012200014450253160706002059364778588922427884255685575637080581434693*x_4*x_6+26620673192061834043944314544867943205451824371457729696252570565826158335592*x_5*x_6+5202702485882510142999553430591343537367303066494073899363426653586568398447*x_0*x_7-1210030599639174274724741570221270145702355653248078622556935025719370833436*x_1*x_7+29734322914195062951865888451050936897971774897002261305623714003364705149*x_2*x_7-137312278407212093975662730100964255145956003066265255179479292543674038*x_3*x_7-626001848857610372362538849403581129432139487823521334631659111048960099*x_4*x_7-66246952778031406216060565760487250590399619139815561380699409273077122724137816224406541109952595256665612340427142815894875264516544581472207420688142216840534279064480*x_0*x_8+151005203711423101508714387085532705776353064448679554930057753360845602147242973280935303499520198802881541670833466668993616884993959389667085832915765531611175327829440*x_1*x_8+1668897122874911503436427236897735030825998711295584217510874185104494953545288423546582482731541220421408067683913530791076821536901393464170659016572502871070187520*x_3*x_8+54131736715610260405833962455369213037490033203078251061006415947408166896792543786081214597584796679303436385717523094247436506245729190740997738975151221046349383600152*x_5*x_8-12449484501647678409724671746626326139822862918835519657636807382360447249271785379921857661786267629507340832364141463657023928440687635369481892390873746674270372034*x_6*x_8+254272626305343503397005876500534957946541183794810727574751105261118674578418092613918205338261870495614742961554028097806491932613467411723687380522352080561037198*x_7*x_8,
   1817994752632550976343942186731224183512033590191556764161418850411773084148173628480*x_0^2-1159561143161523167822182150323582054778399502222437323115968863615648088960*x_3^2-353011331105035868792818462412481623197340933894280713343996619975264997583905520*x_1*x_4+6255868608275828154172817123737211042890988730776393278804302342065452320337616875776*x_0*x_5-242435539938773143813235548560081882823495997053296450476417895874557001109297770368*x_1*x_5-308052241800339415676846990683702259370252639087016965281889951409750393816850251584*x_2*x_5-101315905424165934215252975186892925852568211560786685211532769046848952969708224*x_3*x_5+136245369549253396699771944994322981316974825286182539544891726395437841137951984*x_4*x_5+24630292486227315803264546214589319852788709913518952861792500081182315019750484480*x_5^2-65476558091572936176452721561955179256748386450555486670490899669513659406772545*x_0*x_6+18794420193168439750662652698678891271451607130211323603596397757991329923033608*x_1*x_6-2895341510875670074504052092745063896183935758646394773584130830378032827998939*x_2*x_6+3513273255351609053500167035037845902098474297782108463572094332476096724990*x_3*x_6+14491183983795475717924655859178442691204942356416343170826312559865749489888*x_4*x_6+12558828463780869070174016287185552465781790018925475712839464151878929752840752*x_5*x_6+1689416082745298228916080762211279002829977106026942711343454411940490070547447*x_0*x_7-570855839262766775917000740326616021171899546314794350583612006903587716038216*x_1*x_7+17605564340578038417518331899596040938575174330836582408797935488502171463661*x_2*x_7-63877695551847437336366673364324470947244987232401972064947169681383576818*x_3*x_7-309858518159105939766062847088914967485771295660103732394208073814912277920*x_4*x_7-34849748345155457602420086933072413489494424850191888572988383350162577142474867051005477704210237343677833853789092233084104830630009654048600586212275056556201800430486080*x_0*x_8+76557558637548344104246196989498559674038022690673633180904072917755281995324572912511854301523873949037894527311784156871294677815759458361120410009596894518295360129755840*x_1*x_8+842203520468317287424844813403960615454492315416763562086854135450212378988822249755228922660693686206797412011507714310333028694918628157610130631279312948106684837120*x_3*x_8+25147446848517372494817611942623376281023803620220406837149089185705649518052820713446622171285176054950748898009432414089093027462193467838528376475269472365913998702682432*x_5*x_8-6070034430337194504474834399489482262278128629546180544799411842873028197110854112189622188139596370626035653599966320200284882159400606115098388980909338677437461373484*x_6*x_8+124623472793392359924849728530171971344630249467907914991066404809082894266632823467978334717370350385575069921877592184555054621222798204158899408236546206876467041908*x_7*x_8);
   D_9={1, 2, 4, 8, 16, 20, 14, 5, 1};
   T_9="quadro-quintic Cremona transformation of P^8,  dim(B)=3, deg(B)=12, g(B)=6 ";
   x=gens P_8;
   C_10=ideal(4198942563637924833660111000*x_3*x_4+267007248984*x_0*x_5+109700309670*x_1*x_5-16795770254551699189673982528*x_2*x_5-200280500320*x_3*x_5+1057656636225*x_4*x_5+1755706141920*x_5^2+25722498777133695982659641700*x_3*x_6+225500864752849882406275612764*x_5*x_6-66764177480*x_0*x_7-100946396460*x_1*x_7-102889995108534783975051252936*x_2*x_7+60031743980*x_3*x_7-225500864752849882140141602769*x_4*x_7-89626611660*x_5*x_7-84624075900*x_6*x_7-101790832260*x_7^2-133367000676*x_3*x_8+1473695450640*x_5*x_8+43111701360*x_7*x_8,
   3239293790995053411105118152426816000*x_2*x_4+280343367524446332947134586816094821250*x_4^2-40695712419710474093119399126557716472*x_0*x_5+29798898956408167640657230968758520690*x_1*x_5-205397968718193787278337059214150973376*x_2*x_5+73463162883828093701975489732890997060*x_3*x_5-255707282518530790187556574587039995550*x_4*x_5-226771088937605841846443665411669137360*x_5^2-21543527502445252493268181107062429400*x_0*x_6-8066517217640821884683151371428196524507073987728993125*x_1*x_6-1580038328567434676517216002346234300*x_2*x_6-10848528142050979470609630317009539762596472565817632100*x_3*x_6+149822487210988710176909622315924791250*x_4*x_6-92212854235535003405754771070826193015404201962470014337*x_5*x_6-7762518325088517825562582894772155500*x_6^2+16133034435281643863773219619892535653177592211298292810*x_0*x_7-46026201475743319516289647085895371295*x_1*x_7+43394112568203917979099345476965182695459540939140907478*x_2*x_7-34542136810662704446669269537264559090*x_3*x_7+92212854235535003158831056939704456590497690738598372377*x_4*x_7+40291523647248488671135118046083147580*x_5*x_7-8856071113186705197462891803367744150*x_6*x_7+29617623971169869676921091293294080880*x_7^2-70071756409924166305385127612879826500*x_0*x_8+51309119924536555740819772703942712225*x_1*x_8-188476736828519045090339561888769924000*x_2*x_8+69004802993279678943395519335413409608*x_3*x_8+448548560578696771971395918509637610000*x_4*x_8-656887541167758481828188745497150444120*x_5*x_8+249877269834663977228732674362616453500*x_6*x_8-365938673760623377418716625142227204430*x_7*x_8,
   5248678204547406042075138750*x_1*x_4-10497356409094812533017424340*x_0*x_5-281237479110*x_1*x_5-228290499360*x_2*x_5+98002917900*x_3*x_5-444093470100*x_4*x_5-2214722660400*x_5^2+32153123471417119978324552125*x_1*x_6-16255503537674239083676210815*x_5*x_6-64306246942834239946920579374*x_0*x_7+319245454395*x_1*x_7+67144191282*x_2*x_7+11311403250*x_3*x_7+16255503537674239349166855465*x_4*x_7+19760303340*x_5*x_7+105326089470*x_6*x_7+74890259640*x_7^2-166708750845*x_1*x_8-343139365800*x_5*x_8+1116498123510*x_7*x_8,
   89980383083195928086253282011856000*x_0*x_4-3871547553072139037639050417813563750*x_4^2+555912017798480977762051788149792808*x_0*x_5-503548947098170795207413280407971670*x_1*x_5+2756172210219176392346060686233589824*x_2*x_5-1009085384127620041025393246394468140*x_3*x_5+3926116101327933158804563186281188850*x_4*x_5+2553548812341026798478628978322745840*x_5^2+302407537117771186948957288862688200*x_0*x_6+121654464219603122020165563997499698477410158583198375*x_1*x_6+8862309020213373360811398211818900*x_2*x_6+153263358181261349112796491565927629974460883879233900*x_3*x_6-2169848452213892817887142100714293750*x_4*x_6+1296570911817324192776173206370706677811955564114141243*x_5*x_6+88551754192582100643227736081766500*x_6^2-243308928439206245499208167166714228245417719511131854*x_0*x_7+743959324264941787387359445386817125*x_1*x_7-613053432725045397806127149712533478929635490164996050*x_2*x_7+491317199234445579356055636486222310*x_3*x_7-1296570911817324189213761853222968971441022331780388203*x_4*x_7-563420354620494038370260092996108980*x_5*x_7+141022771306192022522172689875342770*x_6*x_7-396439574957887457050369171171856880*x_7^2+1056780981553399546105591128515179500*x_0*x_8-773813942942828427260488595862147195*x_1*x_8+2662718596213501218084476879730636000*x_2*x_8-974870295666390717363579419304639672*x_3*x_8-6268115829526424530922663593265070000*x_4*x_8+9179490376025677921700078575963406280*x_5*x_8-3753973418011226911366345849135420500*x_6*x_8+5497595098700306440672907738552204730*x_7*x_8,
   1163599462144421593708951030374242172066232450505621669176640606054998235695682898095988488445017575832832000*x_1*x_2-80395131376727997411175932894338673664564395142556780741392064951190528000*x_2^2-581799731072210796854475515187121090337146165019476263375922104070517771260289929591412788875897398315904000*x_0*x_3-22303058299533651588478887943624628211252851704038899212631287132433280000*x_1*x_3+48953237035367858553862680021705029711098059899380904439623339655613977600*x_2*x_3-36101033472622653248173919202418417820356222765810722047222759959704960000*x_3^2+76697617579257690312324308877597333431123945382383491526598661254822564363750*x_4^2+211461855330610889092928122874675278649542368575907061980710148522867240379328349686503045272*x_0*x_5+135692369364384182705590145456726469620648726044928356748233064177043183807751233717661771830*x_1*x_5+107038335845131500769012374929563277365735490052211636441281075895607102421324957017033777856*x_2*x_5-38277743634537810497239784606890718698515977106058189261864460840792912140323384457994457460*x_3*x_5+165110339137523518675509973581754398316948331207371465867102715876571007756352595159063735750*x_4*x_5+1018998350168252420610586440283819284752330826871331149286644134122649515531368473940995407760*x_5^2-5968301853582230060195157711099196878242445162485862044504771093832794459400*x_0*x_6-15622545495846431200387146029413417478612753984740876644779772453652515206927858819968479230756969800906881375*x_1*x_6-601384927831855280249142486131697783779631015647080576842912699284238621300*x_2*x_6-900936123162249717388119067518010779651077040813533279110593920920967017234221875588276032562442133827537900*x_3*x_6+40899322287278969027669174623384696558856197583857569319560843016420008609750*x_4*x_6-25535078644534336099012904829176334292779712693429359976124279661330274495002809731956698603763*x_5*x_6-2206320618310109407307751769629234644590621928650283869132254888614089383300*x_6^2+31245090991692862399580324111098972843247630145597969492950756950012850115500269457194654337188081202784774718*x_0*x_7-155341139434587361166780137691568528365784890196854683940537928421348207109675526892047038445*x_1*x_7+3603744492648998838169332679146817517302874480595985817163318912460891258608141375869566649017185510458587938*x_2*x_7-9039396243556150755011333221633453227503359352564501257607262053014127624150070855367267510*x_3*x_7+25386436134927355907145092806068961473716373208677089316754762752700709857209410367606610550523*x_4*x_7-4980912466818970494613611270833569502847335667841187200944249259248700346831840396124334860*x_5*x_7-48398075989360673560227412756140076090590842109814693180205486458349044785301346775136110690*x_6*x_7-32099311635452071217503878118471414453779631947099539379191331148518156127617635878534499760*x_7^2-19675451319452716094453113623078840946238466408046731095733721968449329327500*x_0*x_8+84048414965614537954936924065651341787962199983800999956834973134441850744003712247665036115*x_1*x_8-54016399422675496406132207783454387201139183067041917463623879329006464716000*x_2*x_8+7412624122892661311849448665081644080551931422678405088383947865603321023409546482971405912*x_3*x_8+120444690763347730267271919053783995170355582594429561351906147571610446910000*x_4*x_8+91089289985148989505427295410041246886987729534279433510318365280539244619191657616171148920*x_5*x_8+67676649263259103007764686738660176397042350045617147467120339489062929432500*x_6*x_8-565293427383239256655275332288963711644384682080718644783640437226911670878163864177128340490*x_7*x_8-3009283968712814888422305164910564526318394678229316453067990362905358080000*x_8^2,
   132982795673648182138165832042770533950426565772071047905901783549142655508078045496684398679430580095180800*x_0*x_2-13735649355908570433757250076916965164777232151465401017320947210043892807768486808764759773954824985190400*x_2^2-32716702883754825072744413755858146798453417268919049308212503577734437218262122587159017803786527323520000*x_0*x_3-60517589933431578740194884470214517372715468765158874880590259907526227854430305192839548682667726165120000*x_1*x_3-8813104472203774878724386590663893063187182422057961534534558727417287850093710127277288311635381529472000*x_2*x_3-28464449790142770653447448330934118687233043248220135175633793041862502140679675547855064202345683824000000*x_3^2+65137116240700827904378426625877930348661724015806233892012362944191262866748781299692038586470653914740971250*x_4^2-7161562510916703133762786010568599483322648948022231749412334630100234510832030282394625625505488223905153848*x_0*x_5+8672941497719239694954813489695829186445806661618705768910839735397317511806887145472527011280698683402598370*x_1*x_5-46753366350529779245580225887503688804042576094765690389107435823317280065579923449938002242453861536991300544*x_2*x_5+17385577935540521764300781617034842506131812592280299231128198702673253327455325722710444782243398105544994340*x_3*x_5-59949461030768916151506760711751786443546151104652450601946019995363956814197972683249725434171718779992938350*x_4*x_5-43770803130824533026428693106473297248818286290428605641017267719742241670706468587294086484723400865889673040*x_5^2-5014792159639511042223632758472942249120316128111146302742753463400881944073251960592417504210921649512203800*x_0*x_6-1949305552633793713920431647105092118360063648150098680838815675932162044753407776521813468662816414316975109343057351604232125*x_1*x_6-371165348589978346569951537467453466633784967589113782347130315028445877064844051460391555418217625619707100*x_2*x_6-2549516960009477457075996714688230617584490111520746892628194180831504378306242352976907543501252814647953987738726668790200900*x_3*x_6+35008307867104940460159278364518150070613368532894688820284592843390344174573163303555410957099279196801005250*x_4*x_6-21627986271161932477429518330809639885641150805471749355262524510849325302479479377287977896320873569984569588446779344067811833*x_5*x_6-1778635071837554464744315082823829689478257289908480751390980155038032291143436983397147320665253737522495500*x_6^2+3898611105267587450312563959487619055477110427808254170713679658901905720963180793355708648471325287057156204039451703941176314*x_0*x_7-12196464007909559115507454635747753053731391977404068925368466794079249848561252029294861944792941993422033575*x_1*x_7+10198067840037909850799229322697447003100087388886082051432871806920960108393432366181909043854043759894725814725145893639880230*x_2*x_7-8121201267908811332973133561106027686747276357142227096874584803632853280321626296314991723085997236554880610*x_3*x_7+21627986271161932417942108844008755178363359698221646306005446989838182263996109564727659261679498167598535586580335653457848593*x_4*x_7+9422345982578058891896367774033658816435957428934493086771635997855111358257808140810560412348272675413221980*x_5*x_7-2528247977051646443385295886898135526405068222175554036635090604036626501143754497786795851740432648211140070*x_6*x_7+6611284827489871611403770388596510068730847757865699901220865995208968224837252403027696953782493112703728880*x_7^2-16093088410671956745265086483041271388013608264454476939881525365036603526641060085330259565945328904535710500*x_0*x_8+13375419122726503425662783980873873299992461706257238777540408963154133930226351165526595779803264743440830745*x_1*x_8-45241805310549080058855799261340803245420441091787831727850135817729362642784427726927872330598363620905188000*x_2*x_8+16111771295792542103651241266813737972885116470352298967492237978794347084681704213381842197378046757249434632*x_3*x_8+104150623889923174977492426841493543009244124372604192813552892172961176234395030025677406143920433986438010000*x_4*x_8-154008980985632774503367266885936366745730088664629434736788880196991331758825289727436202670357367930520438680*x_5*x_8+58613144084659737473940895744692798491364155843373243106997985751588160887447483220614402081337071954245049500*x_6*x_8-91561210889611226033764186124890959140166795017119486552488908385229515384039696206023004556363598816146571230*x_7*x_8-144817794342886003360278940048795911047910858729947166209925581450218673312067085970131200000*x_8^2,
   7645632885048764617277302276853066046318404924186584284358397916983899022050013965822341440423466523476374396827200000*x_1^2+769492096535578431803648535315760751006843707241807090986110735178359805590238673362701246309934080000*x_2^2-8104147002337174702853193907593236760119024355575122500324965104508995057066599309685215863877940585212543779528064000*x_0*x_3+19675210893311069445950761908257676853297403282151670152789337078676069851053105810513605503892563359849082554913920000*x_1*x_3+837068592135931246159756410434321873268636248997689466065815090803778281094386469188157281059797817111330206609536000*x_2*x_3+2979925245512720402102934229216654462731010366489576480783357314643852455135808241364464413323595789221797637225600000*x_3^2-734101798699604525411867262852533416187475784579674626724735568692030116701930817202156474310329095793750*x_4^2-152771647680371930884766496547621254587133173150874552197298178205053842230243545227304989030200291195316295092264914520*x_0*x_5-65920133567729625223005115202937553117947064937295172438467946975541453063829323869377438163919760999196849680750115110*x_1*x_5+107872114348592033856099322947756960153466860398066571150489844137243001750579050471220209319331214895876922005952596800*x_2*x_5-10356612901194332251775036303297753140339331619439833459260193002987889264357178704735395844614162610575859980459598700*x_3*x_5+30821720166710049279377049464509165216297681947856228196603619466861728304371637911180252830739226576288142021076760650*x_4*x_5-456470319240027360320648775656872889049529497948186954139292318287172799971754378342679748445042610238287832693871670800*x_5^2+57124865989081262871476377442708684462870219024676647942771883405272677542575446387624487157531059709000*x_0*x_6+21590342047467811840588009325062670948243926041919877804062672687976126606371285174636218392809929045849138840244188288375*x_1*x_6+5756081755420669680499437041152625941058110722880606536781864261494654712672362891709276545713021380500*x_2*x_6+28671182146532858318768700662548767689209846444898894754681920112259363109388860696752468321619161047793234326425227543500*x_3*x_6-391462825108744418143114077128959331155610286963172068946651888846067524667429396858407265908418426103750*x_4*x_6+243525496438083776667500507883391757682934749938765211023955018230475867865250704471680390754324556139525252253876390714155*x_5*x_6+21117526013578565065778400796278521676634260892144784721495874401837607330839286951295082773918777950500*x_6^2-43189112952733193255275342613258200778340408194901280085375132122216491766548518720333493336035628802654023498960906146414*x_0*x_7+91513174594876427963586535232529570597860674612995938464075458204769748839091464328454323226310994539304850755877381045*x_1*x_7-114661915128783328140209742747647444478820204738148112759492760586261076041386060781127228583085086004186997646375265326578*x_2*x_7+12599828611212319435614349378884143932708319179525523945610631802676475115632172894612665266422727801306625873461194150*x_3*x_7-243386009610565796732778615684318891868741921137045420214506693074989134287543068914663375254115829923562363414977820807155*x_4*x_7-25616508627522378859681174331536982919386879519673072623349190237916646473885351312471194201315925999544435136919127060*x_5*x_7+24722834443929037130719628475649553684853291779341547471451726649884984017072500801637027261722682252949408649731109170*x_6*x_7+10959926212714889266604980869219008133175823563593533991167230706376506030354585467366534131988804632194054227784424240*x_7^2+188321158592844764395996802140455812515183263695191769059991412910819134056033278012798170697358582587500*x_0*x_8-102384659442724536142219332565546883811472111965460079768950838913582119056165715404665418850594303744548200149906118795*x_1*x_8+517011313089161326609057336160676603314023091362959159334174861722727509897597760391744416848455353260000*x_2*x_8+57760890296731552330839767418618636689498528653206241275429874248629231603205133500667177062171763561345370642500306920*x_3*x_8-1152821520718309678052513002518276684728057313123913406120420069626539100351996857219624284961331786350000*x_4*x_8+191076983442715205727695824763657110422487975020361723142178340857472226979030651704667346370702608956926634657827507400*x_5*x_8-647758711706799935181654546056833500432603054238352492351540243889461388432061709354478807261173176012500*x_6*x_8+406963169520945017415204294038546365404084127851092884009360806107809165646602767512043351850723044996024385853138608410*x_7*x_8+28802990809292131041244584135962364369335506875128130760870734734358334793254941338878734081576748800000*x_8^2,
   156833495077923376764662610807242380437300613829468395576582521374028697888205414683535209034327518430284603011840000*x_0*x_1-7166684553754240169837221782506601099714116407935685368328669117155224361997507011962883577728000000*x_2^2+321797186145110846066927688247386561190086830889334041041303283592686176860905825210797435221501760448482713601664000*x_0*x_3-151303457097438267961913692059309252916855330352615847763641018660425213420658892750275507865637980083399446912640000*x_1*x_3+100219201334359651378847143034406464214801563475331211577859817286387886368262543491100762048264988347889717148288000*x_2*x_3-71165584458377026688847993624039879150406600367759430519340208804824081521918232028248244450052059236034756323200000*x_3^2+6837076099040099574409431569415491627257676872024125812565617701957095392177134667390179764431602031250*x_4^2+4322851033289135423825386903313287481163592104967151044749822620125053398472840917983929023524383854664283030409795400*x_0*x_5+2737264795649913787198260248095398658027067529082427768288060613874913845569932111793241027876895466948742895901697410*x_1*x_5+833112767081718546633985372606268621854918607727302183294107513700534003175651351583035505374836941957888516125003840*x_2*x_5+803448836608789536636153175670757409384163080521655247252077041426778987836762454838554046090870080956379875653203300*x_3*x_5+1140109078560243658338409077582894304373007845092961753534265613354754883222644763655360028814021626199493792886972850*x_4*x_5+12486446172796538366392199761647747488260928069361646934905984313209480085220013083312904509372330469564139013242593200*x_5^2-532033917648302563757387819806766935013882766963490039035727265451320428563715648369857229250753775000*x_0*x_6-203427345830847271871841993971972483732865130144607097893528185733288450594617585938432110460343810198638493117159762125*x_1*x_6-53609416383151333032742633427618145841433815770331590372882749776765660003071257729861797540139737500*x_2*x_6-268303612546710948489119067656475658445834074122727905914151105184914666332185728361139880605422567952748491372835034500*x_3*x_6+3645899151799957155363598751023136967596534267141959246651348089063024096115663691581040830300779281250*x_4*x_6-2278143791908324977929317446958532134201190725118925364866266606255181485038588921457279461403428085240237854580417620425*x_5*x_6-196678625000041621439894275969618784993924071111733158918513849151737580145139768684039647242670487500*x_6^2+407265575831359583739657141754365792899145881326103616253453235439331954746693193468428481552407379712857882997242510874*x_0*x_7-1817761691825403766099857245529024810620439279932945005646012989130035673283882486014720844793207974535974141248174295*x_1*x_7+1073363997995556102545758387053275004407459009595480740773131574304025025899987519434021837280458201892851782164570127878*x_2*x_7+49225300944793082826479538352013204719412648076607076447833874547185092480906521238357091246062618858363500568349950*x_3*x_7+2275524653818755309824186951405332557469956388534778574451643630970967359001588740279626244975175871322404026040880537825*x_4*x_7-15443029811282790610129203815897187897859892948858893609050976503844644775018065579341983812147395906899713754624740*x_5*x_7-728091866014828306220027289821224823126241009440352540309702778022321508923862575151511724242414045727623915451926470*x_6*x_7-490118192733757723630399616393487377995911620649211096234524548423238871498234162799788540262691762686701449269825040*x_7^2-1753933983869113009572718129779749499639926477729617488044083912435986629330025661012189552956929062500*x_0*x_8+2441075151082506698136561330096377374763226380237489612952707367098380709846965838941713806498302754302546018030554345*x_1*x_8-4815198243509149140947043747698154247660969808773037982457811824518862296170106573732425149399678500000*x_2*x_8-262704456573787195052955608737588668235596836560220284880069940343983111624822681168327725597083621101440059804542840*x_3*x_8+10736833065556228296540898035465371711044004919462585104351980055106593473972694630537962551247316250000*x_4*x_8-838055244812725698924781754430780213321852552043114019992941651434914922851036448111511693266558707915162402312056600*x_5*x_8+6032917523973850531361892721221652073107989960687642616993286886563419355203866061852496666585205937500*x_6*x_8-8197728103996814644913963971906418608840801510692574913325318704339464868991701855204060134640773181039264133100834110*x_7*x_8-268257400256917491883160640044549153497775555666220267000517137104731373491707448113052840450080000000*x_8^2,
   699029292347315622151067636740851752806254164497059134569910666695670767730286991160899788838716939289268516281344000*x_0^2+1189676370746014473991036729490580621067788643703211196726909006709174714849232197253542237631687087554465343028224000*x_2^2+31355838060989688228488166961449617990832607190792080280797173461252536142614010983929786447228425180629137872256000*x_0*x_3+1305434113147347460336342020700737620221735943052977856982939860206812538027321766106588563358812277406020071304320000*x_1*x_3-444281539342776920516950094434457780180867236149198792132675885733094369288272126892962017261355431293860007007360000*x_2*x_3+614010964562468015556536203534546962068914219592648841264495881226916643571548676194215303852259614997485728163200000*x_3^2-1148716295141601316309128179447576508507209739951229766497049926847032427855040168306911843169674173363382207658721556250*x_4^2+130489986715974977819052453745995231422750207521892622591350717186699645385686197817527554026033768781346317680242705560*x_0*x_5-150252385937482328809907763406696222224818583704011185552701985304500615305256420973779358683344189141253923087857469130*x_1*x_5+838322575596045240401247216080749491057889503796002640061375146835579847865232085578453784814407370560542685202640813760*x_2*x_5-309095394385182128477976804138676102638239444619415878570778830092918031822306405895075548010323229687526146946835075700*x_3*x_5+1047217394999799577208585378242151705890935273968789449178528023356214967577307639243753562001913802611838975003547970950*x_4*x_5+800767361152047174828424749497951185620323455428591992301252668300937869896484113167979941860496605160600568754086285200*x_5^2+89061160480466664422481327920400255642702582994647448878580329360411207217047682481268139380394011855556045489097163000*x_0*x_6+33647235556176320718381060290638137541315444161109370172057793196988867751133307736566242837981917135582813525278533821482504097149302625*x_1*x_6+8296519082444908227186029046897163179508322989955109255104255072562274826650507148769780499695255151641388713281743500*x_2*x_6+44804821764577010287563857480252082445824895473898012251126309303781990345712227393326422497565431402402131858087811957284235814400916500*x_3*x_6-614563920301674359094922562639355097215153093683556362737699027051941388010727679460317009163837452984484391553661726250*x_4*x_6+380575961470534938731878814337500254473947924190811181698439743702792461930478317566999701714039601480980181657665862131417684404782977485*x_5*x_6+31712983967004577323915461282487332768622634877855159115546865513687945043684315333541310678439306161747963917133573500*x_6^2-67294471112352641827520193393640918382761732831445926897307683582545330271198869704069849193241282025123737814515474776325738978528276802*x_0*x_7+209820129714719869533242313339220152333653899875069484171258874634917958615612623558006459439314598033883799252156215635*x_1*x_7-179219287058308041545400286369523647131906381781652077670082376257715025926833571526017009444999848642716197361914704038460903217952656734*x_2*x_7+142378970352029922046689931590351741703737865540344969342185437275839878999654491088713287952633031681843010985357115850*x_3*x_7-380575961470534937688584013779535205685931009545389609528305555036456935345263206121415857634229743940627708682750374206735378573077530885*x_4*x_7-166021759874496176243337823385310244177824187654426294251383468997958476636696282018648763494970334150558727875612698380*x_5*x_7+43422297226990462640004485276142276846565674711437934672861854923949788851292412937440761688850828693156948271494785310*x_6*x_7-117143880304457167658843452650057285285847641672005083258799254219479739621739149055975776284014075836199540899730850480*x_7^2+285044743985991257923630231303220170095182880501625315054130808872303969607043101538794902105204990221607550218706352500*x_0*x_8-235083140158798128802217832879894169363965596115168245210669032328581878187672597939476814482473870386975322479738328685*x_1*x_8+796519447426220120204327219945733286371222282732259862157051478757385152161923898652092735046018227090898470143980340000*x_2*x_8-282725791067870478492590852964750399950520587439894293258922820213792791389610384877559522751570603660154814545740337320*x_3*x_8-1834511023644066389103774635235264058661423524502367319368343418313116307013697094693337179448814518364593202161699650000*x_4*x_8+2715850879253032529768351536000737751525513282177154432530956310253873790087773980111071598763290557843257905387262561400*x_5*x_8-1023922741722146138220274229335957995263587539717709419440030204196137763875250427969732669618928893501908090532882567500*x_6*x_8+1596222167475084563676110265878724526253212394025868861010472428541490392626656066123193407439880983371571840440941197430*x_7*x_8+2868830919667460006362442972983304811282062396449492325818699014794263561094540143185571882631788800000*x_8^2);
   D_10={1, 2, 4, 8, 16, 19, 13, 5, 1};
   T_10="quadro-quintic Cremona transformation of P^8,  dim(B)=3, deg(B)=13, g(B)=8 ";
   x=gens P_6;
   C_11=ideal(2256744059414956162234360176018587057997847980233470000325716024575337346136416150538083936107189303687139625743540027888737242056515677640507587995463533066497753892787416435843242292645511509236218513896248615554398873432008059542010573676205943612129916711422245449936523542898277596330752611545381538474665775062982083169976542275374305187232170534281767611084882508530053854700517169683816967316348825871016470983877179471821353797311752380252512759226554657319117285901196650979869588537192257385158631245069383700*x_1^2*x_2+2047991087054459427707474730456398663558459725844261746865051428924085856198706765526346907598250346136910172495324695151327621477417282010443827460889911595976184710939382012032893840146473274796684187826260461311361006754010161490937235354224938282814243731229839583226855696003085905436448686531297484083532188980220064483396541742355959420037919738760278819813866152184990114567588576976900834458485911741410981748465650190000756250965935711369846463557048814533878710990722443477907389947318771681065785288446668025*x_0*x_2^2-15798727254546679945004927650764400318289166155900898566938974096256961012445303567410547682141227107574793875896441405381153441693241481575018093052254436429938627776055558520307060864901265666909920972563612690916116506452867030249303548887729139690927333759285982157738383774739703243535628416641207776380475002420941965936026988669410603156759611246670345566613027944423514343101787282478202567587549226200028410787901921176265167430710322901956207269805570395323017704578790815684150132870006730363163869760568400000*x_1*x_2^2+13924443888845217305418440255581209236460365264635546537204693024507403920517670546984724777250142057010757850647425143281979891596529441115160186967861524459582979010930758256780804563239003267717378156065133181048857419902201244431594531330940195022777179437691906893905079776585905479901005134008010012630486402581272365479490828797050512559662395226859631988714636329855915709870647368228135356749713612345600264845926238344724232258290036620081926414423863494010675033218047178927407404547539771197898189772979633125*x_2^3-8986061453082042766307494992915550012171936404164931324390914933246227785036990209271077794776159191107943972361960015447798995287402107733602477986858408463376249752847432202446305125281675458914614527461156960928928491119765206641647591764517337566979606094326377385381224309410949412873142994132110632910413638913718192294246632641077848527306630528880472626520743155143148406189495345326006122781813127845305895173453071763583466135529000519363359372538605862578370535872314140843932360701836493776481569536250187450*x_0^2*x_3+80643871193791828537884431997189219468580045696064094621805520952397667744432080152222140685574849656293209752109402001786594069087273172159840802821292769120018395516925961637107119358992148776425666186536957351657189786939931128790319953263749805376395325471055604841084014955513739388520927004331853079697999749470648353570511576618530896020764723269852060305520665227841494564856040537122280235099516152952585811669331635830536284775915658000196802254525150889390245288982801670803581925504970986553854923283207524830*x_0*x_1*x_3-181138147121125583225127232767462418867476829901188045166527315761638922619238300248050791995533748410010365455954608457982379614728524441975748799639678651665025373039074318545708389316478635785110121247518592184496586624186001327788450440858990990377482292492503147055470456317805080208836341368635565369398783101533954128440549256931696302521585933993567253406021370164105320079700105701729914695339165294358145336949480968720916569441945989581118016493422848844882067423024105425103996322853497330011940928955311795700*x_1^2*x_3-83133186746145123735773794117236724059665709780512760339448457105766918498368437261036402804117219773664099119306334591931245727751730017156449897820610380717160816997142608340829544591759775015215428375563773544857667506585587705602274622817651807324926066291283589168925485506296368948744522708211486873749498435933406121872317313445215994507168762844760054306245237402923874434353838683882348736267929434075672593553915076071812874655124464563440971233524636121969948637794172281202555957126764809595946677362832763175*x_0*x_2*x_3+374585076817675796899795597820284587515826842701934498231264309302426800035562013413784480750134792241607461963811189585522653063066910658610898336229131611396281398066528628178223763849297668794543834833602018235387719903535840139919424740261934832726297398091217511181850113410980747031783967765394674632763738639146509695732130935988696280996771541782440051297751621519866529824313117015470785302984936352454261055522560908886246312904007758433892292748912845282649574761908581853381121678367714050786221266101431252510*x_1*x_2*x_3-195639026328217956955430397132724115420999048364099579658192525790933055672304167114066113471621769426999264079629162645974922854353744725600661006651348934642350914526860914166288395900301703057143452779727506086206792159443786473721310281135546448530746248430599431282242380890276615613583136105355433101691571104393611086113201573080285135093668589462239888428078195287304318505739315568657777342492809894941209845931059607238449466137649674346592279532817368201930106131594765221199133275582316533942675033995874263145*x_2^2*x_3+13652024039471285949151160936489173258575017626111014815468647206058649074299949890259238123359138646088302829988620972104410315566251084573103984022291106855334570087134065360312745477800653616303994550314614883646179181493489360219601717330702686938820998989703684608993308121449713712457210907343909323133780106213074061351900867981580022439033939069564882613885877318409372312133667917727176109033983650342259278073124582515898302269779671029629702951049771258374013512079152639394902272289693558059190077683860841430*x_0*x_3^2-61108350635062846656853680467231858508370783033191905411749827138353106989236255031603782859486192762382854727699074551409091448054362647240503922996366860247588583230710319013116357323784430948060650863999822097931549994898457711934366888532367398551617815895827731105261643975108796632479117938862284884222840133676115099948406171741357226590369731309781808031542814005446360509721950399917299857390311286859403334332476167766813564258476394723842594230639849045793511978284268554307279575011295701247420097728741720844*x_1*x_3^2+63130824173863646951097426608982609173476384759848618135065115874896077341761080668227358897363632362898970852287656840907202763810977112775967691664459540649650687317802393864924815030379745122027247069821145695940842331937567839779322830734391822783381925117131757939308138832088621191578688617806215600372876350440098154716709596405943165435200699436128887568717556818520638965585319633948576470803498021911330908714135715823007812932393718207339449700244553331029479988864749206547423441476001963971917598444742206466*x_2*x_3^2-5131626147115725493224120757747696639072948038022934238277638834008793267632758337938079606262135281301146408587044229198194116554766205661765801860452070760686106200640980137602222843641701422168680932335094690467011618478059244768198235069900450057562678452531418648118608601592459273860783937314414818601330016846354262993012599321413675629478900495882016772773471842354979568044699736416677616210267103641830190739944061298741787901500179337686698188831199351057166048774411429506903263501993357484096920234533178952*x_3^3+6604565808013997014356785448972205450225597267268497069069141868319648760197544219403837174435041108430347660550380046397811335802871543553850325941836437698232286706525587356033927673407241350040895307967113558507557930541768482542948440960151781449462775137390310604589246912551508014822769637800628513266381607965450296018250624626628712644301557723179739969294796671933764656405059220198359453990234547283577433107162531182387128539384588875239637072744197479770518930101227868577496168473847502201445540674573194700*x_0^2*x_4-63189035093949587909440125723591142058137003086345524312292721754360173332837465131236487372669638482064878302434116579642071670604253467441457127747987872912868915471011125568512151865007330427535145547192659953222115251383414770629098754249985645921646869303751688796493681703499115496663318704056888667561746445435773530286101677362500760432699274332784277236596296694739209718507179078514870705047896104123713808465293994215346888687303909675416139597857200958777276582982475743215516486716278259524066453683481422530*x_0*x_1*x_4+148692741869060943827095216753185799330940881880220196792377937361131637162265470948883774479871512613752612402055026586975441735798910139653227548338459341683325466441638054627360409914853128182321086791006190678277304220966358124046940873388401532183224840313838721489386266428124547574979334665544844330596177164643344427533138484382225707401761839903555046098652890870017072054590201983710832894839790655108866235679737369860018520263178525509610109472253920543695695555430925747660403758588372055336217005543594997600*x_1^2*x_4+67436965512141403012841855334243900634483369645569492822612305909128272029672640884008672103796399300188362204474118234556068354925757126408778700232179669722368954640674008299708794096745727174010636204083608143564275021782738251504272985978823484350361183895066483455311880581573562485155046826895956427443648725456199036039727166359410446286718226731845415634508152519392642910501972645863825638165567231185042001894395114580443053063409242083354451723096644327436934385806123142796140634024635410545422717863149294350*x_0*x_2*x_4-315987323708189250320432708662910134088088436804396863483933349963752357781183206514295678881009613066296388961220763232350603672621421119734199362947268050817459076011526043519974473061823353152580014445037687643083208469863432286662301284656828456591748533230513565196991395123685552708841999452298344645506958430543349188678919213211202197806263308219140280001682130631070932135805661935144799946979481957198704637777496865371611066374502218596699480236880781392605607305915531084885192333800076699506143236606134886010*x_1*x_2*x_4+168141409243876287209244899401441993142629730866632544375289066775840678045010633953534541954022571097501497954100410150141626388123351320789268394344534763578091573257591369612922546725352616496986503383833628105473527727563179494407105224656842730320354090138285862524806604071383792996179655125115852693817178549329094389581880239430428348338906154175893052959551118192770513329980113800733942547144376324746282137300773366796927876852666707305075240793667427455628754687472361515466248772920885689401038254762465137370*x_2^2*x_4-14231800463598404337887989227082154728293546273469244690723073300524129960441096095439360744978172164577327059889008342360826501875023728559161144305956200298782193611003010038193284044600880506984327207958069042897531050890334185905095073146997082726108263950867982509154202960042270442027144466093538549332995636478606007073694778154835949873544636613206809336868404452176011475049268219830717280571944616039364176670537639356691386126572362389801351405548356278108896403548719334697875332372664138352627670335891412420*x_0*x_3*x_4+66653780643699348802203978072778801189452184653444973225526980349662515944525239793515657431766324187003027214397291175051770191482132383719615147903889766930612798648663447872252559675198013625746825441344346312406389439272417505883590165983024657275973493495942625126423130700255876790425330985514302025606753291214167005181268861904049065665648737506182828122181305580129478421042817058506191095062867261971193656466417231805350180250737394093780822483716342704708424381910194238365122229318832882270181802897504631028*x_1*x_3*x_4-70315916592550755884759938008276811972829869400719342975634686964408729644559577959273339819033883987812129733369472687221049188277824918479588901398797842898178513838610060800719393008197200725956895281533887379843863931452125982621951337026901719336713534364099930471953820249106434006593469179523655895187655329251849473861152062704197597219623180401521843723455197182898837358183520348805514047532679480129861950568190801006260757572774714213797447322083502811706192613171406568765579806836928965036470225182402688252*x_2*x_3*x_4+7040560835574057754221989674979923746811785394538779321776452169190052346820547034949998917373905896370170088568299519915567861489650564959761039639302356059851246343434187614369469169814671215019859817354481408605451682825113487641909101859002109347064077677149486712306754734442578124449255257777547806449775274716837419196270509948331796836081910678322402395156289978690595757281975355445838635132588062110173591679574985961769151662614126781918720719267193143691339772279745184115130882869288399231868611851900140168*x_3^2*x_4+2065360351084301552823471128157771647481869416733918468476466522909245915853185129844533818546279300078579868865197305700483253296179249699283531601135226960594612393007864256714769694710984307034395244178914545615233658295531835482708020698172002939281723384343601599706383127653099929086976362686706418933419419907819241876079493672045736216114254004004767639903520861712795145746767382055183201246615386823321562478634692490818348197968028703592590156357664879304402918929540081349426380659776168634693037162793512940*x_0*x_4^2-9657692639020270012266966433634418306805618313042399571937801449928392111384530765435566986817412746589453010389338312638012229784461954002471180384655934003198000554930601792725679031517368592240811981092633079885209728907935021358057997123550229574860147334156004005740099882585636199435972614467547098278956936845609343879221626307062851863948530147637029438185916393221859666674549981051261051093774193594293679725083059196306516210704537577644508329769564381425612606706607012428547238805756150348355606532193849684*x_1*x_4^2+10303926009542192370098333689617505281026759941322813658361070879223272668306112789759999932333269413306275829466879948745980915495486494568042062481823764064327543665185094029717144045734759501848628364230680864760977419055914279039120686076671918001649214032088128775958715873137898366681240587651944411901382390731964899140257269853691994958432611935895421443929527452406789600930659652728529745807683124192658720504174167023542724464485603385418266231484163346992244450474597188502356466374254390557875564704060650136*x_2*x_4^2-1942575287348614757112506262757346783689896154625119342625979386898784673931747338164260415866847787833479947437841318925628361093393811010826884920146907864785915652542543259012789853748735917246465449376296793514165100138957022228890487388959736170667351736936225528144380027277611154874358204048392355278780340978925759376694033212763521746645476376417502877731526060948968201556124363417325157464131693825780560080739010538349740268290073455266097076704355177636407927437129326353195343441575885713679052704730198280*x_3*x_4^2+151852370038354147419871251616237565058602037414782878068336997600923671608228811811562621448384465052605314598934242299109838135651791125692830046464470643331703867846354169025533525914636177060644359082065788733392244186578336552115150325522254204777620629911736659313339354815496760483168985554391603023459310661290217897679476569669707126879060669632208384793173891285811758662354786754234714284302890339158149886810812322966615444316149218686520445812810752181270574535518695098173802005531644149494906719607471264*x_4^3+7821707195346608288011021465043986151076417981876345097059561594468724078912786529409129026901659910202890338381480342259027277683565912125849754224069622789727422118755453419916162793654258277227674297085822324042628022367190274522446195510257197755057216649531725841697556409638046614571494051633854615530999766242341237267376154334602674888720205111729507708978675329878104558604928265073780498314033510886483479521323581067035420910017498950672122339158427148003495637665073197810767750802028162763081155299843202800*x_0^2*x_5-64425618390935740920719176730528925239227729258640207682926617249397611506310476499733920673108008944416253061551863477728118834161890581228584748809656295162287514975884161150384226831170086227473491082745104697999607731111084481408305926973486921387827552769768443249044412613550351211543738173072987380019304752251562593654188967161137512926866681734799285948455099260019411024375671875327662507304675735086200491876729456433477065563697239240784373372458220673882489145718563022642977826812372529801734150917609617220*x_0*x_1*x_5+131792357430798293406543366337803264636120418857174968476049620320918888898228158490315611266581931367871220376043814466399516345440539665171595197576589130929821831737490965179818951568360869544179647785109544998050372055619982876248514344206983751246056099398472530233733284964239395452547993788192554295572532301085777948657172125463301326782134826853929967992949341420248200196571597341287181174917535649326937625372394099740760867775782078052798937928886065541023481084517264058875176997282495482150307732290967062400*x_1^2*x_5+60628701673521240882063199104915052361105874344530237882877571538986662495969951011459117096563018735755575364680580568559392592618118073646505634655378067605088007414956905200340970497178357238449882597311743892705225251085528674967533726604590978286591586284541292991520110161364250863150312729639633049011583327493120758341019929923372858633102422870645020258553880184115816737841141108908055989304175129804399602107843795856892268528079004250117983639094738538145540832135105201628509534137301399655555300344783274700*x_0*x_2*x_5-247012525129996829341624647393594504814585672983009176399851202286888674935440398525939120410856908609540270698507301756078663993482794754901779450814169838854280551445545994090720593094492845667080035375228093913911793809586808509231189407748980920459026386323822526383214818884148153559358695708121679566710636357458748887193785670751990312461612631198040520400534316615313386799230600963167186442950043410440398743650400103513425303900238363876965683092629014499362248748461103861977576150774086584925217083834867303040*x_1*x_2*x_5+119126370443889913561343724477203826936455451988017319748978646580284615174337300823083077083141951927849039144885241375979509871387313555687130761882957492996245307929796343108423360735055447080454274323567929327905622622362025930454869512184805078905340820472510006921399383876138897937003968629177763793317016077412664684213186673259233833584763928790703925714351302455979640393845295553691270383409490478391299577387526674787665859319280128667868694697566316223626268630581281615609902142898397133056235241861764372830*x_2^2*x_5-47588877161422634537657791579005707049829905187277543146775195741682017166704389917443560253100491760887593783858436034977899187207698954718133965953902705388381539652402332912621351487440801109552689770391320672363974192995004492344953221606281947350850917308225869007984766748901760868699569911729815813601139354483817036590277795348038178049753279358463801647914386375949217309799724583060775185658643600372131461774952415557104204253142146180281704771873170364683493757160252363104917227635950789398931709339338143100*x_0*x_3*x_5+209722651844807044429706930133586357617037876068358938185854057804675893097443911350183258603078469538436814282355724241815785785707246183351918837421933326163168030877038851895510971376322998868735363792206878790252893599372096718099005557686632510650299726080435255053909393913938339169316030196734915182684149224573009072301453262820176900364074907466028778668875332495604108770447085498023271634790318478007868327004159914968409140003855666384682576014039011927677251864626463115171088727830640946148457214080745773672*x_1*x_3*x_5-212026948893012632309846409002012874004410754434843285660631532492350766480069533442283580909204968019882932715623285953895276900452629253517777911962162484746212376097564418385635465092816058319580872931912088920856351167717413050404154378039426618742852483929397122665864492422800794511295223879223754255338338150820786930979468288525335494865891281233786583918789125298957507876010261424663815963368214462708623196904620482365583929952571440976329967405295631133324449123205367512453364206331896568346668879826883995058*x_2*x_3*x_5+31734531999277911248448068856207776703809096427324827542806055127323661230458003483907123933166354423452900966071231510722715412813553039331863483258911338912864829653119737362350954676029021464178548252048366107828771708560219612171227655058032092502502080957529349659684761837669306652086382415144107915821416631871539399315393514112383213697684845287381350245676629691833307245721911016403197644433768025674687279093336860725725692528558647314980621048353888739858122807774042838475692982449079260858750619668829474200*x_3^2*x_5+28441681420269325005397178619126387089418249193051542060491857072298938853503844978648591619974710119409943600421527712242845009639175228443869741809660561014664153407627631665132326409883424249647438229133402665231220098155144131570697008407214638475971767270418061180412925362949638338576267345640208395881605404136321044378377848687077698295372952262973171448140627121733458308911288388367267782204108914784839383162846051366426038680389413923499525607355912485130887819332749478205451794840895178952614186343651680640*x_0*x_4*x_5-132060205713195663756714698311022871040657586851396861277896133297949800885963924763441379848861039751601392791281806002937457779632496659619283831557058818226254839996736623188854282304412477873275407113562966841444402389468254112662379270017328831646677129467572277087514419948033168006869157533927611049874383074613092013649614940654269115597094818784921124511006879702824875510905428238355358349704742880268739032003240804524160847119431505958700142530694140324963587523454393302151426253090083899968970477321382983932*x_1*x_4*x_5+139368563269521958582756355595075288273741080035861361244222332615574347494479909845427812594599187978078375505380905292021597743723171067941992684883299036795825967096727069245128694256105847544102704345374488015430388763894957818064854824753798563906376171192067731476569299728051823414884201120129529136035544519690320296341343630564443278165232347275770948672258297556226354183075726078140214088835498803281274283679506676400004057830828543807092312439222435459753139051814952670156140257905166475076024458169999630488*x_2*x_4*x_5-29614908430842302225399259579247896712361927582531636015350565117022279302317983226912766157438444118882119268975056813986315450284310106196696039048374178812951790346714597867164435642629118055293809693982937839034643567436001350337647454486930520917217970044034336868123560180380892367660195154735053147609010338962033028326002294285392774206930761995673555067373877752813686514573382652938522865553498495857711565896311104361980839455590887112315877305239406023240841563973182862202852528761826724791112686569806144056*x_3*x_4*x_5+4084218128349194154070151243864496158032184587275005083202552780250913579322730354452768859809060307059958139313923752738456252878883828227110567867466676998613137156771264020610919224893015779453139752085123783345481847855730059888310197064421970124982746200648588180589244066411893800811817816542044766827618273178388438763088580470420832923749823722736633298473687457175132250994865511349662367190735409323073481168240879614498383521404034462078333118455792157593735011357620308928393092881425642394999222709176800156*x_4^2*x_5+26657769617089003707566471241422027248640503137046148055273147900461076103183592507926208790508930991986305036072914795458074770870494662462739786480751080319432756001295013831089398047538065683681031376737374952160851302079541348169027265108247854942222866023152242589799529084879396437032986596031181251318256837648439848969104377710856237293366664462820211068355121383245317308065957345820010691673897402174456853792598981331232305230808062425398871741644870347334222004149089515429781459360179825399637849510654072320*x_0*x_5^2-107937603147564008268858359490074315801528227090547485017909165442045996230575853797544085025817315521366851967823619989189480923304248730964558110234090341110787535394805230379822209963394984069502465019404179695293843325839747593155369440999720899906317724692800058782003154458494476610641978910012197402601882852992863424726124286909496932867596160226851176840855370897989431481231727693241828266505544462358940380955416150589768454761090179081216293210370612940140403427094356117532734781720668265927139348722316756584*x_1*x_5^2+100074975676632036468444902091985621181878328380035051653309406780211892459350201409819656841967162579449053534308907099000562467061926910841341956481565338089510893505988124213474406557498820105584115217314607831577253400795403577323442397428022766148347446741566468413796240794049436533839473073084879366811569139967285484043719335714276628091283082125123302299925998054894053743078294676084773559811486542956040453726921915509459687160407095784329740928646793753507255593048451650439043856784176538215971073448953222776*x_2*x_5^2-55676813863236922771684937679182866460937461017295014015467502283337347071047501344193991271850691124162958804041095726886121850529105350958633827977769698989219251105610875454276662665620302750031057421541412163264608960681138779673110983887026886714404833599834271295791786769410927260505653524176960791021037901374718412987387260468186136660837172610673658912130494880352234594123148620034820920666975551741749936712327057739081278033725509431455657761636775840289632549225170218362856189372811840511869359295871681704*x_3*x_5^2+29039729961431793912036271718141461881599507192553007476593222695647924870802919158501503174548485739406608064665437858452761159684300516015394093156364449746219823252517965153804516415020897858116778349487479970981799007227876765093179840608073057592488960727087490138677628518628529664349601337585466947645386205056542935964764919774291045286942360848472073560901739499762585269686896395941954874961000842284080522574968379833728961128972733502689844536685796634567997888840112552598939659048570168541295710473641614136*x_4*x_5^2+22114020846534395647304466805332167081437076382031495763498307519719784889455619828960067935409501423957092686624459798027225537519558667387677558308018220666978352806794229467828784339441370816588536592495322548556568536838614327577668604140778093032265246896742936765424963886695566858140992153670163329879002768934385776207643784413666926948517047588556399081142011520748594162655994521483687763256696061238142803320226298533365458874799179369686211009155813130516031290923925599046276504860945651706032479487636874144*x_5^3+9703195613007106724811550994202840532953725595125450226472281680953274048177283878487454156969569349897152154765307796517040223066629797164658076334730775583758699835731546567683549526088780068433666323283266332149918014069712002653052319015845047721662754641527195637000485549891297732107352098166821065833853200267107670989871591872473511692228729763944504822975007846607564060392582888965827030806024922390668420533813975945195960805274437730906465269404450021194189304478447222167358805689088531991005339082170630000*x_0^2*x_6-84590378680373793556718660068361530474517093917746990667411809349405265166206437427792543506846634689607111370447135192278171063602019127261523994025954260286052141455754643627214316272117855220078278796034971442080132194997764104950313451180595378637257455019716724977794208476243461826946671673286738220493698357327769811358689565978196915678963803806825597544724084852319375367838662142007832714687806500934599955156776476250428343225496856216096152972244166552448419028344564681240480490876603436799273884845908617700*x_0*x_1*x_6+183112127981118823582993686573040553057901888155274098484636494135229338494105383722790819594160067615769701330116659865540316701248197554988200866549185752073643604871987093474873737708113626513062842715931433234072854504259991986223166640507682439184919070228082489969026657778302244993710896298579670691599731240595010362394641821184570957255277815279777003905672835884327865671155802760111727959046109066938298492599722272513239561371121301459837204455121883475355418686858029908647004946355572797409092009551921549400*x_1^2*x_6+78849568555858271078923837483991313803885589073629047552779860540972020407111770424816724943329212740044013659273954170022026927483316867462340725016352462927685174661777715506790291324617095500612660787340421698224586163466061017891356628857532478072722473243257760698369697230654152762786915081225375225154511987019191857112196754428054788491254805466696611145760085515691438627244336524511151523110806759636101094166522837571493970989628340068802916386220685005213570358965720426293079469828145212155039559766972463800*x_0*x_2*x_6-338363687014217725028399884585128090697850793013687739353209430441752565853161624889456857007254447138434844840565001005914555932231083597292081776317644204370866343342213235049262039345899175278308643419441277972905227696806017867787040295740243372568173419584381516969050167769749897070435875601535102381607465966906846660537801591426623124078318163219767334283437881125503970632463433215595148780362073061591919598474352107145959266748341179632373565074477842256028919824230884309372422187734608288559393048044119341000*x_1*x_2*x_6+151144413221869325920610580882849185434949345663200054892985315234714743119159168370375627935279483323503013716078584593060167049495780347947421844547865936434100432403478476518569228541297029730077957681064025290682276898218183870149589964497286839509911203053860780030366751752507282384768867025922551358256822073670723596057408014196808445043901201639772746836097164271204164858349842078190386681689410067303984989305408085924674862506194161751932167041852176751120831559114435040186896051352291112853265560009304231600*x_2^2*x_6+13688091116498824595716263551289220756248072150370654530746517287952534862666547999365817778782282098930083020585317034626574755906747233534027794106229575822451998823046943238731411820456169199875620732529056951000151560551414383860803753204817511135800539876347796712722968358899588247257584532575484631949310825860603289369624891590268395449818049096652749848990084676872440061564495308428408213697064647655567648421685801056957870483729580797430755556864246943447312736280000948508758497321023579490240567451643469120*x_0*x_3*x_6-64120066098020016887639487931122594827378655896805327556871338665287171162114970102660226731666883047533377625489567488247869088941786417507081667955338661594901913090449794400757301064506782543990657040063680041600773133347339822998502382307633737131227320713322343515832764006122872798354947231567750674661927610087384450005267489275576862569897609031824540672020494250803052486885487344625666226388240448212211276702500700782663480189546680600352072403735875962925143855784998165174726023211559704203281076613668636060*x_1*x_3*x_6+72859486748353724342898431921935451982747181540079087203243188738564284682878004899399389716819681184956098052103238015345904933081965555893488197816568579165540809512642430491477796399747018451398344970986424938829913897158842288669512760406273511397822828552215184465477295176414385592885043824326325783966064161629510550104394837873288329119355759086226090608807893507404862694910774885601222071955042707091761474597894665192940380563976641692268718487084311025601286405514673490998713686988166830160703851684626593500*x_2*x_3*x_6-16124036402288788894259970606940296067133485233194113662518686541723227988200723401713311308718249572149582597710502456276576829800693382595865542822956420758327892010572145872272666649478552741665937229006203462726247624433268947882800249034110733143152353949686491426042015037745929186949457603791229958482038428095825659956701204519904827119008691951375264251117083810688603865689490846721594379530097237342640275037096245903748953937265784772314924760307614059408079709093368182340757289304702256458767500101179231756*x_3^2*x_6-22604500265757160041849114006023657139041009606694084312882992595325715806744845630415175513087431273003960702413684538373464507214565730562314960247804531971183498966142675235747099677779902804686573954560056768490544748847422717788105362065626000646851507404401810246511719974353608669899439037258670124468526951401567906049555700891119819810543013274453936427428268613434954439085576689021944770528737460602941440606628996675397647967005953194539000648276184931911993555003119465668697956455199903791222336173973485620*x_0*x_4*x_6+107662257980106047602300635027804444405709737517387539181655931465765751495769855924845399092716951336391602627454988380540540091710423256247740459941428319756143606174616129845903311910636987327572161067688012879494348266479462275375409824320944535690905950205163515458461240528892914482721440347580954667295303008442954770444226574422370295231983888038396981776457798691649338506939887483110537563049179467103311662200395352367704669251858982291460765646064195999608356915895060465354894816200366014237893973144794941160*x_1*x_4*x_6-116009955364340520034901642065182485988366416208478938442415716928893847412983146611692158672992902628735203102500093989302581215892044613239902561493304706862851298869577568248041715156773526524802224343960911807158265712533969354468525979375857114500330218898732054353368862906279269207673831297069488046008751641157035220638567014285200617448819242963135620279931438709166458901725348023362628156694139918268015538142882282825260327567364329448135199498784886317405154722483774660039864438871994727850419711875155934550*x_2*x_4*x_6+24120757047753037842828442646339112091142876482399028316243916459080768625247407593309893169032167241297767717969630241149086151067774385231565133937913818693446684106233823637163834451356146312850110023943089572482350625672160181166497969411072068705947553897072212346792789716612761991954449096422695108396521179374496659301367223842725011442735926018903084625924361673302309520912700160272203625350295434709549313765012671370668332346672926877612119607944401016841086198672875957936150814529391098100402944075773404612*x_3*x_4*x_6-3744875296385839542071072222749152438161893854183546694281099303342169732294637889961543447872820581100362521665870459539807716146453568760136099482525369792836936460635496533661440380172086781920868480372238919741656263482237268135275898141618390483792829919229651394336912868984934076063387796663071277707215544158639302714968017599265142577700700938479009280774098375652104989076382863796053163727444779796867415119836076619578716014887351586842265694998281689943200654193216494780241571895857528159234570728683157156*x_4^2*x_6+14875557833200496624147885657631487421633613502866093786677259465847049657656584475361817946485020778744170548382400564209078555040008815063963975532641637667060313452197051011918579305092847471711782533840831223821044881486714477530941229376905896885445945097037407362543998727983819005805104023633180017862479549153806633251863481703450325395194970640223452554219585857991772769584953280055649604078090801583700886866791957882142855730232308433613152443921936718174403005300241495347890690453683616549587423137367917320*x_0*x_5*x_6-70534736748296560037969290542092596877311161063769365467581042975856384994615395201299654326713491495537146795547897125168969429047031467089545102811557402844808798864920386154634073451674990940616611187189924232877770418270307681430015131046357000288359362309617885690224975615387813976629681175251956699709181092197531722807672249955984949299779294444719992914409701851720143597937281001524731532389491885263132206666501883143274114017752791428096491573082813690641370137926362753720007859621202711365262656006805027960*x_1*x_5*x_6+65064735546868713423697313305834522090586757669251619103291593956739633673702802385762032868927861473752012900271791891460525568014589374229163469774359507975895892016260011151092106210691563547843523196667032222817366538521262168046028654982121677203672881574409642299956940214457007279922412819462950093640182714694472865542481016135548897436538367937540982149862457272646364143743125968345484099709651269249023155993578260449845566497748632739693191122301388967333819311579926758001543126293147033436129964081659664100*x_2*x_5*x_6+45365909448276784414285495712389580640592567915929345441936922679368856231511865226636922647206149493593414861943358453597316346865112338440769531201431401477538608012723056140722658115357598864283166717455959579068113607649370886780632561741482943289174119078222454284484887244484264467021233350220386455314699457997120521835871342550531975531857425538335507119768381996048907903884046835049374964882709651983628303139983673456494219142994605693992279989656753044185939364870620663421073911661548424763721315798077559528*x_3*x_5*x_6-47731115854521133032659061039520079451344840356848008544914383794124568942224051926286826324204543174612096365303958254920217767332403894959224107133188610790557012161895988813848584301359484104726972873300636882415619485376377846562147233439885041406711467882547060184795966734082090718195249965228722848808907549595860785782343144327501305532714404317642437950583795201585814770864191042136282166183926920223051955683826100454609922278463957938557435794037729471481981459528021059010587104764051326856923930979511682128*x_4*x_5*x_6-1841466308619640108803177114230052173135042910153558606438410068693604458237338349765139437978517549809510721771016170424380911348927147545510157407934508524439165385013737926290527195771813338049644483974180752473424407869198171193035970093251173121867135284918088462433933918195759857214737318344503384386854119458903496906767178586539153458179726893093204400675852296260877362787570018148124831861990149136979409436053646523523528388714176505461211422479547806292501473817091850573717517631832534099425325862952605216*x_5^2*x_6-28706362969970685710605665596044810964322165483250921189633837993446386623316941030466340507816577191056373600488598818699728538140355648754432595661561412177356942482954590606372871493422920441196099932993350030185383163952815562551328980895287413987061452700696214874000740527717137220623253330382324105231217508806258654034336025638705450617303880521291291386457200932456033257793045516345876280458305691424219630642396866907832140188287702990316352355410085335108786660306541704402599854944475052463115836063617759800*x_0*x_6^2+125943701278814809212853306542734082578904792422709350783885915654675246090662358625508801531095464502032654662680327658623845064586953855855295109811469919617544188965607333887888719894148748382082940955548347996096868692586708546246295063430739928546311096528941353723990196101395419750794418668905060553792615421418605514543360413345152999556229152083033022947844405770384214552253230879380264009418068564665977357154679283168625630766968601481511501525762874098990850804646119620090447736161660956334189990462629208800*x_1*x_6^2-117876718467351978845108657072027299547551637102916122699010114660609038454846334961298336060541749481223782730886178880660804078798159941057941172510961526165015932917030167226706139109721202366162816289049830665912822031134189954186770120836861514045451809198177607370175331266460234271753740745967432648053792806642885669523235765548501804902171463528480898092177853090633110173888100963898412815156261189906242870273070011325719053372070516955107513224159976947713263639114669665532189546471106089419198919817538896700*x_2*x_6^2-1106262551139659714228017314545623250797568560605375077695898630800597226418183501804884015845936069268190349485685371992859302170358598331517785867524788996543407490972266934610543882168714904717394447455424048825878926632559094592966289144170127512475144082107831947383684942168940187636593126230901933977540824528002315282982227050824553818980402836152551094350195855235524882084524915303105993695784741941139627869659463337260343342632344835687547304594313786830534576797326812639032870747151795983858787408152973280*x_3*x_6^2+19874184250084284729973737862952187898848874728693182062416272573148053751628951012876063347044283152699927846583193164733218134170294091722086040877506284007309818420223957930184602072309042542484804461603395074563493117206960599315345766860381050527744904434834874414906308765617969827876277259093626080514877129761919004911871477287905287583460108835352040526788584040957565135986687074358997768365577731421277721605316408734901804503850653249919854411560166328552262070396258191733132631556061116100183591366331145080*x_4*x_6^2-39944095067615408401981689123633836205225045156332812521023175895863878410708991090052385577920272152747524932219069434700081199302999911585120172871065796793417461461951285605390207812644418394212352266518423285917788557284014312698934355642734570350893273845169066603943416483314473128950634549213240544988381367438868296462566162558309161883020467589866894650570245909838418227815038503987465723499993108809200781521936983254741012124772230153397504994636891155921786260245049720040525844059125793687359957975714995680*x_5*x_6^2+22081161430908976843051433573672673247496321916520306685173504614291560072829430385760418379608015192264940475142367259363170338610453613866864576379518805693248312744423693584210904622083012134996628364666991781602789525726174842862605759248473113208881097069678866951489998386916867982238117983996968761122420746996928198762993214817637253815635839089771939342626766293792330646004861323899084454516966764186115996391176122485730415992690582044552345463521534539219860871908159330034232072768062133513672923397391455200*x_6^3,
   250749339934995129137151130668731895333094220025941111147301780508370816237379572282009326234132144854126625082615558654304138006279519737834176443940392562944194876976379603982582476960612389915135390432916512839377652603556451060223397075133993734681101856824693938881835949210919732925639179060597948719407308340331342574441838030597145020803574503809085290120542500947783761633390796631535218590705425096779607887097464385757928199701305820028056973247394961924346365100132961219985509837465806376128736805007709300*x_0*x_1*x_2+623937847432403132942394742196761779249823018689035878192182593645197280145898510579405134884126963887192758236598301211488030199363350498444564707873371076505437938033921739014700037131234429120931842300221036590664117112252909358907187581659164078518789805364391552757972004269644420911475608406008079517698371462507345912671887952388595557498608595279746420800629005856180585324028136894116930338757473990371685822142833523510180602282535848225861640299949023474547385229571892484014097448149076023704225632813626650*x_0*x_2^2-4917158737021984327321642904979626665542758614536569001223650289067520125052892884874838340586370299585927215312345251175679279121197810485078395538384274476543998530439701861618021175931253915839271888907563895523100449097579361336054132924744865321841488345905931945127992585425196747358502987875506979997064960183392764477266181207929919467040271588645287472808168062639869867834772009210467745834738834009138913207697175754865195933904356514435155872862636090170967245597134696859704649196658977303405665082307612250*x_1*x_2^2+5076416408268162436647240000864554835652656876637797415112535294564930689964456473212054226843310502517721396068470208699067517205714954233548577475083142312960152271128686765057873952777250694791911778196247077405738098997295134179255133715328052918130372773498612418510052202799166250209826427833751080963701340702854949476329767912433483351197133282733777295007268774479427556710338768583351848166778147547909936443322627445648207829883607593477070359488465686133642332814117494776602069059099018714273640389009991000*x_2^3-4014156201923320357283090977380353179293530525070914594517687015098845848721935738100866459522423358107818457352167179723281544892133715444130058131972807215590067001932048746425063678938072594494457103469689773302079664693206995765537574971547236797695854688457119954043677524237282199611596420706536025199093895368473027855680106471351904758725464797131633239265042849175007023906245173547367501114919067801546631968214912086822567530154959591199331197549394034567445874634514087212939632000987371322622568446776125300*x_0^2*x_3+36082002608742692022322715146455957641745986901212031061868426842905449342971469366723346181776058490020801738181414660138456435899247440721083288606168113541987400966120651921081748742886313755070291880650748118823898098964060073985633313978048144063798815985824756785054974979729704570477964803664551924828212538499032266548773750046157607265679268544610485910055093388331270186101479895110753365110915633256063460904849197537365008938560148980064572472918768755977440298212283314080389224331255241688458980219441710740*x_0*x_1*x_3-81174699966295480122027586451722367128224887954349027221681003242056364573747618841989410483422102924418855046751938958254918335371801910723561568157596324082329998265460723377859711793421306136276155966984151618364653704159986241914685806899974819792953908205690481566411796608339976252050371060269738639019797578499090716310594216730866461377417147954051029259126350913638807803664255279291126670891807734718496352142440268494609165782641759652762094528464676386642609177345848321933986073714261387245037148134423268420*x_1^2*x_3-37096632692351386836616965545658068143092296659669663068828373718072053551355116871752708215694624563778773261132814506576775824584244539385964194253831018683785923740428456561002366212524217325669952803077700588715441052821701688860572328516102543704416981822699245361458247122618892461158841274864384543281482908022258542548281505325170588493832292011679459051064062190533594937812677232326130744471293697153822926530902491551771382954224853336434998504635693576952156973968424720358958481353877709727352752869212623870*x_0*x_2*x_3+167261445984506008692099381011119498705476234362576956196702454821746773826249304931959341317266211756172760826651800381912079745862857540347179555401029840305492164706716305339913209275399570134953529050026252444749833539771978433156458128153971247757487930424360302702404959923130955194288133857124605316569238500928649183131049113808894722580126686805193634781543334709715093655260175564724687419561751884960783718970139130989263883401788576596983014430204099930887412734495494660466030782632881564763754535319782452650*x_1*x_2*x_3-87031512420175313102563401570310699785545496521206640095211784788442505463514245766229662785044339683039953624914303310600557411518864257687599688556017193658123918442359227495381644041200220214352351970888875824009895147048982281994705445250809146947180681850190775132219563254776555450241634553792827099773215996292465916334752716074222355047763104379894066605005234008736581136074668581843682939357652597653339709433486216739044435945401819880111732531246488584748687643829635032709116011091613444665287396002290388010*x_2^2*x_3+6079031666897817502177052973837075777262879359400000460127703534882528377205467383717533942988890727903859895026367741634953561025631693478386321313364218723699897954873718734778791475305201742200580013312067835540309700201416333683097494852890776273497234049304696939111525888173648985019843830993717413847057877450352744156716376579572106733505710394890145359774469209143777219844982406387527698381050266691752801506183565634974592842652664970777586205321976032710919811180120624952586582507228886833448916588963259120*x_0*x_3^2-27246588673025698315528703672825622765257757207228860641475294211206186999436924488569944486594316465683552012294801166247379730474156088007811941963995851320416523439769336279976294168676740178382794406596410432132261519452993027458389274698410658240521562011044891302788228606708655343461990082679199840781185916180382963888276803242452183387160243284987769071660875186956903393869695489506581314516066866507421320011289835385768422731962239717905391188169547394355832448802005119629752371296029755458750870050793253076*x_1*x_3^2+28074896750474955539644396707058364126119887889241930364670608780894315594948316250373742563419061895391309795262609439583666024903839668336130310874377674707923989970179420299648531236395699397568009228295862080697658539596351263962515353636948422414034957695477961884940193337523246944122502587516193954922044678220398097356565304890804879112488203341942188278220278265049963996195782247241411264163346717441628855030851287418765905222084710043319292222618746306234056754865857991697865508503843890847653637027229884206*x_2*x_3^2-2275887882954017705985421074402030039170453678667629217678760286053868278156606426536663757697152634422452472426978384570850998738345041711854122881857019069370429971304403133407381119058888943124046216691473151108240299968955840676337642898967787234168356950193044172295071645631469200224678626387703508503166648272030558065742934995079564561096065655824529296725124512212432712352214692622535338820790306182240817179796522478060158386121588872085295433698968118479325338048328012985318926417402430784194244153775094208*x_3^3+3271987683491444337088994283146277095366478819200087089266423879219351620824589422063441254518329130006315868008635622730092610004591562726693318955324733556544930342454707524679939374454272711140104076172401011657038530287602168507743650584798250986724273294868757657723701461850466612039506540987866256591626079356234591325868974727582005464377740282573000703329804343795713416627675136646045376294898120292709224684297817939329004294947522280061924950725703904655067070177300324127585690622292176095124425382509963550*x_0^2*x_4-31377325355182376689727192014610269453629557078682369261216793649325469267830084794115672442504909476609370851683258567042207072037407517452904651357520822662901684581221577423160545439383625373337346237371488304217521127191779189074191313571643007888091123620330666081381516004628242907139716824484045278880942770812374951554079193180499773617900068758864224552440090615637991773367225034513392977679064900837990941437968847467240994799078099136040064630587931042092725265106185375818085613773498432644806941060445659390*x_0*x_1*x_4+73956263191723585312680250813161742207930921282012046431682277831209577839457901843794468092155403292120364490620796122712830432525311788243063213202014930965564441286907650713486265063810724276736054302701100255812812104420228871267718014025757335997089956346669328111724197932060589327812275327761719391009479011313759907119252555066199671893284374563234064513532409012547245765419532423254811618235946074266860029009994198200054300016550238756998954712147631734714036244992362605131865709411355519203455756761292029520*x_1^2*x_4+33530432465463899742112052604115392261440395713285715685731151458531759811372389015989671641833017460430090120038487825104209173099297990802301608196784742010177095866565134993540353216914086634537170951250530149456782940467670479330449183192222174031482079356284059611991658750113281330945339057917388181503242247063410305995494948687542351009891023602182005056111661463905494035485399861183132201039481282961740038120546544597607699163139694922933108397511937064044720831583307357626877273401045807831932529016121489845*x_0*x_2*x_4-157309969552340540917362344059458200851369354284259088834806573053763707972736006846821648914596309384089578627190710421355562322595830219521365254560903786518592597398938626771844814186987590637652265462845261411319722423664120125414224094483804644632468482811145510413562321576292324870615524192461208098400680387814280830703546897655580334113754838963582899237244385388594217341297370523503063290855434071617232875367764082566373692960327022795370574638907999878042262433906288551449526768602894215795097352806919506950*x_1*x_2*x_4+83764379599441503152633077947234294142006838327829338551621258175874816378629239386823277009166338820780818517309588267215985503862345848782579204286470404573154537817748374384111780349050533113432198954450939558852424097688628483098033628545614962767209184770387902084549929549795472283800709146265728640537927612288649944779580148628213369531426684390501335638379135906149300909785587470074293259792520620736070755612736542152258170385063327534376323434925785220865806397375764246580540296366350529550216556146524074885*x_2^2*x_4-7009560663264237805749878616809117483946622765905157988318649145557039860478405399568563990270066140082522675551842904809992494280120819532890646992391389826364056267672251349485166174283472966388939527327042598450261625152519820214209726205575406138150640344237706422687481631843589018802516260633101682597832486923681510896157375702903506329373211616593687118694379841465235915410668039586558817165353265814018522415364882581172103320208542203921515590512653650067611192245164844344696913513544460060988424547045437340*x_0*x_3*x_4+32896461951289567213953400269250278250178153519030021447013238400520653608999387496581367065994374715882009340800394886605951554024915724481051165109976074983776854555549559075765645516344284733082031893102266864147892275143794380559866101223452902171539861743253598449947518410483709543045298983097774738846659415070982217637885078210302822226390546674943159583378995612651504383064106632233091636817162282420101941048374427144324003389483155553515798741040154846135375333598891486066797597648570054572810930876433993452*x_1*x_3*x_4-34741911635831879295701179235018916018988089028592213464538011915999009924332255108577731239082083459864408025779555471449133915766345596996446918048409166978977483846769135355558127895157756957348276337760736184567145087283539654845244229058276704872670939281820828659184446077952834867448532193771076682562708781403651549634217823003824807797541042288888694175761192662114635540849143629941314808645032239220135900915247792117699232177265989023971005317369725734412642571834572762321861234135015712599851825304644637652*x_2*x_3*x_4+3457375501403392775190163725472021398482111642087486172985447136411043053148538566265945728842278695784890953219839993441111888258162602126690153624412170187757659805467060695930913810971039943075312228991273319724059008104439406047938462924460591374841102912369301991315590735080158292142151842488681242130584934140460255902453455359083139851688030115602606931829187474557490496855696124638521710454723197705909887890352547709876363279748619161397579882988253849328025851842598517656796652509205880363810011167500399692*x_3^2*x_4+1028750240720118064409770959683171043922826911828058796364212290131288624593051067025062683054622449175019293043054792907309516565720156598314361998746610353186956421899158969142684501864390272535319920382699467828964014628492716068117184640493567407729040903008743762399814120516250079765989628210405226032899366395989111486690947840272297440021802001813764237748900151817487859893724126077372717296069366119017930412376443157866808929822439233693725857283382481453014536676344368020516419722236444679609127490770664370*x_0*x_4^2-4823197033523449807609552459762582103709684755304584007663069985039675451807198127290424529111242184295173731422518111300639433101850588052765002159341985890200743103833575041132810617768955073246724146721330050902092231126385259597391733104996162580295484159523328031041794500642834347751673251433310677195476442187068644249527682660823951813121350895632524078559120254795135023999371434043205157888534332249648668084899553031977405912302740128041658634785378554847649564391146760816414537830785293301589474671739400676*x_1*x_4^2+5153364130994888159449040443623815704404869909844130542853833942642388197959263881158965140279290575021203554892718233071364031284354412783536173221171002852954002341466624582609501479477183274954206388065737621997645768953885799469011591027759697402775388500338210752760761984076937630076618094173316215150491589655413563534028829743493682908884285206538295629105206051689213616596210133845504003817905998138905487983015252084722839637531480358850675391607245354738629158899996529059042272081043124352015408240538453046*x_2*x_4^2-972131690957503018600549916322589587502220799015052318259312513797410290670147439501411114508577606976246286439794401877816546803291530068715264281343270278372871943431108970541179076214129575602641296727634894798684202709175948033271530126662587387814851571363897172471685375733841382263922613477239974230992127672057675267838961462448706607671393173159214913940351882290554131492737420742411819508918125612057932841013987943271578589501754231752014759549576065250422202237283850904689644240310824899068923116434591560*x_3*x_4^2+76235481999992365114579388466083452066695494870263459358756613996854956593483909847500392732902472019102493089918945629999708154737360384107240499704969475980928767014880514909155346210469212982476598277067907548081746478571319852997809445054861124884882238655936675942669769561604976966971475379716296874593825386216204711414147567270783559408685363401435948528872116111085454677711871829995683058005651464788929704854339200553838002755770410847800235482021066156471196929774535312486276766304972775082267732790679176*x_4^3+3763697995788088310697959398328064536889819847300485158984276389257989222962058053592310440433273434457908367699052801603730857574207091521294238279556965901402928040912073657661465936134920204365581676976764992721551658262869437347166763081525608895031938490234666370920976796853539508110845463527528546260894527165420914962539338452680168043812229659065714789601171355189847227961830230185548789453608350529491342522525602276483240385447038772152342439898085497308893488720966347123586740275789148861406143981698301700*x_0^2*x_5-30947382071009864656169856584046747991145524566852722725063036299889208232185004319229354882636003353567068976084785168732650452787134665149645293904678806060108102737615824333243930225308688379426601325369683886213139384311679705366393303183473120901879106010291898867354186486515840942652796017986307642571176075085521816549714365787275631755991924293747613654849058642779740099902641887711840505816127800786894724797479366526148295139808467219862106885194377834218153584075623107368138991285027299506220564444501144260*x_0*x_1*x_5+63193156860457388581573596916249701947699313091839142372810703961875888208126096568197732260364067223021847255275625258400865461136187420243119283210889424659028925276445284992263940893882602503545482614463798075213445371296191924238600782155635450770482183291567433403118481103983324190841454658684338822046617535508203873069499489519808989772624437565995486696877885322866641668935824714516848982062495300001450220276256012039318672943708472323741072210812988615826470957323210936571047446664459373600834780884589455280*x_1^2*x_5+29098903614755430824272489735280795422351634555760451869604307034626126839006059983263391022422350085028912600490108526465988889168524484320940137652784582916826861258675615138563770132590591623637763718681569951083452066154150209053263762188543819267459202516764442622765008299515791415627713286177198748196101648941259882956571698461663344821352595316032526637614241143731522379060635967251259912604592034352917893279636552957566176063485735091299908378878721941592627431589009227900107993253568750560316850540461506130*x_0*x_2*x_5-117859526264502885037757596079813350407913827609523570233851461296657346798873023309046701687947834228310626310111298705982883482322407409359252002705897597787711697023415564816674394438759918718715020413286187369360077469825812189200882148710894471067704294951004475794423868261181772647281705150271503609106269348192797790814208458172912492843395207756480050842297296493891446180578887652848576472017014874156890273097240701627731610377608429459992440107159387381533857707636268015846987331572450216969340700603127917500*x_1*x_2*x_5+56353894315191863877487149274045585824198391653758366804589407645159956614051418186386432250895377456260297201598201578212036364573000654097030679999494369812624609488009149796038354988884580036580301044217529878307017244440722278205646884225673213366968802153119397908569628876671559041454787921224100359467704650994031730613004968413769969087862619326688772325334852226489654408001971096526088253355578025569473445853974150497373495110157061266630968214131897899739288056603554587830516492824171140991386750670787247240*x_2^2*x_5-21683381384916009425507163087032488201701183221230969274931700310175940052577500241091711590622493953640871025105440757279334498701675399796238565297638932612267027440191305367515762842176551492553699868402055311859982447228682711953430633064536925489214276004641587366909364001391658383930065469909047740840533434200543757057398660867876431161813186618528564362323415562564928664349511336385786668061934600708467720158155377560169472737528155363487072801058599268922130020289719619575051990985159852148136074328237122500*x_0*x_3*x_5+95537592283227983838322318717181308495692885545860446989051002793831938529708989583825786657837364421843715499004802029912027661934103084882926988394314531868396977236713981004967627914251265390591166658259952892400358050222237748984465764532734582681236087093385093186107723798570143089551170114208108334982156854486855937943537742594726372757324361866625053628557103097415959689829576965615014438090809203633335797230164378913078332887000158206760388510982034557875711459750067993258373860068673857158555908138889093268*x_1*x_3*x_5-96270778489186646863507432824811331285738075776344398464677394257827866551267943227749582796822873849158270675536558422664363884968932349305333415797460478457313220712042336217853940536126299241211470935239618124419166956605567203550812943797249575588218299033021745652997069082122432500891599649223095930494685309701199838066765012130271587368159370720709000042185103889367232511383876014534295273722272873253365850834950795426202270055843853512821676571194455108642011397013241117558703223552052644458648163158259484478*x_2*x_3*x_5+14304820247150480038681865664223964517032545291392224834036179722303761835604919768672278971473396416613010747897365054537119422517446894267326594060455608560485009317323479102056480084263838319118689113360068727701732376461139731877661590582073659128194250335755122984214480700831149619668672595969624540610020098200800311423542108978980151818944194944314522113320550310906641206196491539578208300089245398267153759329410293286311547310126971171139273886162382822398978435463487265630972213999424074146311967842447045200*x_3^2*x_5+14151601240993962759838254461456301407826929288555239605717712333324115429614747192213790227849359135537410672424106111993719088261402594414887838634662711416983397908319386791915529840673580435764680077673684283114701999135208520634385593834322838852028810709124031645052222385762904528934943629367080529282637923531351562998089659384946833450337697607256783856444783453717250715428055434184394257480894385608829690544865614858852235499332100427113797143167249276259116142233978524222049423579405562567348446633194992100*x_0*x_4*x_5-65805924571911828852890615163767427924269880866218064445168764056015748042883869556609950811057744082976203061113822401962878561802687919046680679103757574610491551754681550089885092243619405599751072952099468701156996317192147034939516759867655206683887560756400359351838343983347034634846407776055688313202991573425955259872342980415960422318231718104323497582296960072023781990383443352593871948115214085533589745430527442225507833436543367603153102273581333370461388255034234042255372043737436490886529700686037151868*x_1*x_4*x_5+69535444333359011776379711285478092180649167356370329035847421664424405793995691206789100572119537461363333588001688675954104648349078976624774877008280348124417265828352993641546297059887453493311428001327399947054927921400520609951931158671188506104992065116249782628313957141128079397032113967875971783674264217280685763601272539302705438936825612410184522777637183491337845868228971066447524396868431362697387847582312853200588851058596134614513743871736121703542104505958181836559339441409483189673403653184860856938*x_2*x_4*x_5-14634115542159356974132419045631797759137607245893348027272938309035109301417764462924744028716423111620834541514091634290757308057645052831145729165582034900137479032268736863311040888870553956818055172096147417296912836817871129789773217229194052411037247300651890499089064775672941707338305718649506904387360452227334301200491013385850335406103715667053135846249981161736946342312824357345368612777239634983989584135294500767289601933343558413783028722246153834442423928132602820782155722739773569285559630648010690344*x_3*x_4*x_5+2047863191763286317433833651927954576079344912418158104757577999870063427113077538099199792585783300297274611747846030762117699522605421169087704013372124432698964153062651394203570067079250885842330021490267258832266044417218462257093948719468049906501979895610986590483735337826924319270950154938520010632785427262895936041771541124814091297904554962617573445048374287284066987053000044016512768309734446351037807185462464248522954193404837851906298736072415624900115222981309004342902287946716670479783388512618507944*x_4^2*x_5+12904862207257398934482228612499736565281672908945370058176485872153972174369319594304704442615726117698380152529280386722198378776235686858070614097308939826171242928862363008642122889421539764459997720321220605614281884849554468282228929978572039423194713352919575163004172239467134276697679078115362212914471738609119138729015690934316250604521614139500924804943970004109306118994254022779698037982875791862227726606358248675589119687075672685532647290363905369131116820809535594602717991233369978938703593300424640080*x_0*x_5^2-52178037076205756937055656811847339093642713445541228428563170790738484404616621331565188665446152363647707605495409880135446296300642416707887600559516748559648253869347006904842686957050329206962220733171844727307187455780558853647780303993123677270785990719950351081588285875968782861358701807362662018726568675494408992322466890520207225070992192965951304171778007058075901380120236313688673275113018800724292730048931095545453492762188197822264874867806983527350535168177023414571339461761415248917544381620033067656*x_1*x_5^2+48374942076982722383446981851497835425818734364688126798237814410775615966311068382170751168609439555625981179963495140166597040540188438790377134890282852505307604449915710116503391979008069506956446660749541480601830597273153169393908064042565116781561071987375980337951053202132261497258015858552157075379232045843643740154444329607827502740848267332015447544072162434270240860430089107743711603745368726281228128531383206780070690362448886356320435102633922789148101676094576777772821629551180331273346173378603225516*x_2*x_5^2-25669141423832568696819908165551920898778110646383646191771637410410412117835024946214528888187999856491408397337395968146287143805955487453654173749637165347944487160977958411002753088586062671732113535702625329109504359687256378342919627870861365552051118708567530724695025201448400572152393821975662579271930035846893689069888322008731297711381612052599206232094162102170732632389535429822448128070822225363058093150377498040766356101759725792955251032993459303438446740634813816331600608790488780841465143455368959456*x_3*x_5^2+14512983243674346194735731533070806457832417567644016839696788971357982256423122610500683943487560418147796088044079203402581038317365714980391349438021467026395356303402633456252567083065916609199536662476664278446440217455588695609349162798683363583527985304513039837252475223765117275065737185264244779945884577838757810776400846347584065188394046968728686794782712234471792019910853985225813920317006880054402264116265942196069852408526680763007003542052844232855626352250934416495994113296358507419896630966690113744*x_4*x_5^2+10782296323694838074002322031681488702629743980041010293194845222508293696421397369700106074705600138532702953785573980466942525566704163408001493271028434330270712242565874596409897321433089415955703704991826566745163818576967089005437288536836789419746450947798595058367180578968338627346578869991118901004743664908100760517546355684744001847751526740268477734668450820447219105086593912714708051767079758034441755901234798766921310461066097037050106264406807602029373568631263036565389881325338956616625074669576147936*x_5^3+4831210907723588223140403096825602883311340016303572378951658465249899611742125994520124391487555421507056539117100596489921337931656277946155499971729814765952012983339127806328660540498195292882204022350258460920724969451699484331778482634557874780643589063423667227287643622707586287991221333758473954266333929028300532282173969075614522372438641701067781672279819714413530119870635754584225126109885562993805680568594022965099482747648874294607990062835644694908286639652608644408458490375863358965339908131680949500*x_0^2*x_6-42285051475402261534432739327798720917877543556283297011445277146610480272021746565550097492058852762808400808127487742961759976940655198151880126266746209503667414408067169299571877069012222979966285142623177074541082509454557542252378311914809923712195847697121442918945604379232695644511980246247273620606724877524120490690242284338913022271641692745022618339549196645284741051131391353234072252797970135474424349197156683291590596016027586281435178211485081242330542304304666847574748972815134652760606290121423604700*x_0*x_1*x_6+92026882574252116187969637993864173035678788344709725492414445158822490391612511573563993242689988260239449203793615380260253704600493525452043210526585585972735057764517571842626774454020963003186077649055268423092847599436367558242022295114993975803898012534503871515629452825731875594954536172305285977463270016204272115811965281303393117989976094679908602562760380819751062954056974603364660722972268692251192209767390457753567853961742475244065875673839861972898251281672456299676000441694908262532343751222825319200*x_1^2*x_6+39607919349916448565168904904944577773787082286795239045791291856792284792963868913449012011322920045693415600231422127259646868275382208669607217024110987676574282440522167455971254283997697856919845401887834478693244172110789955019391788793874299070032954791800064748626141033096342976002254791208235841170744384400969491569115069412766511921622418817092363400461269819414846033195379142569124775751372596075506912414001619009038945926379401966985583487664979086409125886370142539997800633961303425774879453316503538750*x_0*x_2*x_6-171447859413853437137353111099728797673747725996193920349356577705850784484750940730214015307607846195605872138282833611513567207174980829054771129474777726715032473429868509343334276929952377009739212303310848263433355673668661379567672024794371414922439111352336044639402494331552903588420546814479788385024455184749355548911235299621566450384889602910514505726271256581052284304769958003368995269511392146186005730212020126005148403142412091301737454122861595925844097252671454074590635899528514468854310553383121793900*x_1*x_2*x_6+77575862733400988183870463717112019785493869097774160023893056207027773794194883971121704259146356931924448508501991826505913726003729408281663599707400280909583153564098156642915299690722141698701102706033958542670922168682095719538225939278091921084275830317999577808676362897583799486864036575563842845443929643203324618195860327462521472461184563374747175726420869311187556152314865754861028701994064800341172072156421836059872488649711204667115554155193038552962472284505952710113884121757353490641591837067845186200*x_2^2*x_6+5491207426601966503620597598853653238758301015624258422133280753099348566593115669669344446777820698637305919539616376583223248087420760236710783980619389550267312834035778782871484631592298283338199498828623013947321394140632753694752042126221130827997096259333012821039110700182007363402445572858783300584519740766173866099387055185714806195332967290077574979788432770326591136652334297818413384524248982217064503758336730022186741019546529745888219137605539868179602042702825217007094074304114105565099135011919100380*x_0*x_3*x_6-25905699369884363974894940176377810218556218459202911027764694622954117815054845510220762881187148676983122145821865554244225294737471837199206132469801829413631855935557314817537782033322146152738110799054487961997555176530587362831831690344302099060506531330874463493281486000721786972578095084384651030538633502471322733729791273012912532941820939776158489431245808932338869555833982574931466583354123588088392155154048279113607244945788304129399162405036033118101275361033595721742513922541242743113493145478490974820*x_1*x_3*x_6+29774798178225886902040857979400811534454429173628261554715401554410160630470391577007281362932501369791206871014587322506505154421435713445010098147185239885456334261487966476511317738342894502956724672410548510195335746397319470184471971768451449435934964388442858345415745117321276634640571526615766543580542231382591148731791827428938582960039779624015921862265551816502212686550919636160110933783013580499217947958070361933418288452879869718014970903408733484444097561976272464486557623329581829870390331055968426890*x_2*x_3*x_6-6986177225305112952341042510762914166424838120474041005509579213136894691425271261569521684144610457594413154681994521513565709463748913052438814793960354507459283655287881704153975603473771153214570960180203988091836332376448908231715339345965905699012482997223482202808936695788304877391087316821785942754439916814760577426333104020057649918313200857012932608136904342959891000592455361254542404474497543388525805529289905020366844648531392878401722833690961505417895635724438157555709737750053762216621074008207927944*x_3^2*x_6-11254956015867633087091487854944066089521778029658755360755874767112886928259180834482517727417419168045294744425744153893505409546173039483662724365102790842589198418914777802812334925426346886938482602169785720901286287250876392123206075955856684096223793251510163573832387145818613689918923835639155640092296587994373811868328089568042385758180311526530037882086009474390732299011132564362490629887418824010988621844547206107178082775269468758817375315715773043173816525884648225668985776483091997988028772666130417580*x_0*x_4*x_6+53609936732708349362425675794769567799121714694976512833658522940584932160210620806417356657086889827699013339125466697462123549800977850341608828732975148375186650454005617518729947940049223532792925414555579316814708741437318132375817615256939812998619095826247907337244430019677780588463924600857456895292314975875249804090533724946483048525512415988343247684645124407457210805705509593092796267804750633891884121345690954743980631096867897077972837156206483501116582110456506733509346236704781797641422621095264377920*x_1*x_4*x_6-57802511662177444485048319758066449832355866349576756950045294515889216201945638365812759491870411007173071157407876388115803687901936110865655392091930747291780921735620069315868753652958104959883671843669819188784973026813688869238839415616416842424522860818144131819761379243058880855031302238091930358214304971759923492848662300772646498349709918535134559924207715503117017184261469301126351769234384788642638215678999761752907086660569296360156128427872590866912836589950443602331947067950033680002070438607099728340*x_2*x_4*x_6+11942273510346490083814093275569253676404210504009574197736842691402793422687840703805516112433584311574528342891034588682965819820324015252815884397119829035110873556001391695318802597916992601249155670018142718465645197040294206361002573862746722675374833545996666102038518898614279048525604243382318960566970401185847142106040044736737723140053179220768023152943484608783261945610067628791822402136012706801635810224014001065117905067564629950404889416818445611492867543038119851697287492123105412019474698606715272468*x_3*x_4*x_6-1873744746127341814035879030944123417849593286915849034553791059898618178082789444255391547748531537647078825351096569816620132797878897141662896244455469284227534156249777536557229955194827075940211600304412814762675296268092986234094045716046611541047007185346182635776164540479881967629090929552218787973777277022821046631191004771870537311381982768761961521942876232803050930919988159402330469553601559668741304761062603102549315174416954266072984024142206608266011633353827523816550157098607208531122483705872580624*x_4^2*x_6+7697887992648659518114578579596993516798685329975641571682842289467203553296032469475066595839852395923523503030850314114073385780014193768101317165750247884081399232208555012123055586280181732811788922593162882257239421957225711764965700243150262775278259535174990111304622542332227666035749479371056307643984604139901689744865552059126452175454116131324708381105002826162483017894621255996113555131007466014412049556734827535076303239021043913442232751076968516845560676331507786543808054354910629242838857860114074080*x_0*x_5*x_6-36799203778572725930965439802367254426761333343531716009380331375699789348147334540316068089502068980642211990525389366876587544145919600829162046250148118321506621373204916362572281881084910043656001846194120562277600673682029069664552803993080853414656025708425238306639621304675210844730667330839210941043788511537779488502924529968823537629932948495717291261495348097582900180138486312556917412447445941398010030412949582576743549429054887700404525656848298191183396465063929944181453161629088361744062969571267426120*x_1*x_5*x_6+34363572295502356738631581793269861505754737575699837921204862886673848838755929712891434829759759351658770722200026396853534932810212667690222299479904445813296484436522356661745807312400331232321011185735225947162907196706120388043980131783136102595815367374267936528641997893147550737909405558982069047176720909678912755421320836812559498963728585846164444617455194768689637450212555947939278862390272328228068514633896986627193790625228347882230468106850556020158699980989413789612040232016324844311353057038115718740*x_2*x_5*x_6+19756848898391568932789596393421813243088554991565450230241007521427865885326135916126425975368453604980522159047340895380762506257535075077235274020266641708373931915663132751306160818685898578973685348761104473388884142506289902638473355124653902594075166231422357992378394671513361566108937550864117326333296495048081475528711404985627338235583834267792639284685170711633114146171809549404210889258586679867658971591486703328934605404335486385108371254858789916689002329472822846167408980526222761320055880419047666912*x_3*x_5*x_6-23827549531714957836407966576955755225815488417472624361008078616770627335067846817702381222505371795946422828012897748322507357705640441274056392427498870681456850042866116462308853090882580431023177167117891880995265735840229170572396546280463310247624348001877592781479267692337805186063496003094722221999489839925446521578283018622331139981918825057485177181337538540030936287495288226845725108234252068580034183160957302540681557055048738466705896577825906568379140320522109825720529448667694843787219381628085479232*x_4*x_5*x_6-513104166189641775918430536093895292907698752040858214880732386468582189745404180398822428274511982808085742670817593698381069053321705375517283300311070542879805656663378882437327624674483347288472172081687592577991591123492619794772388572177402896043267042876296390764982341461029271643722925878887657078589357888998776075753195773980188895862683868948328594400738843231091102269879053576021301472575297140638642099853302192534759443671998657817985580344508520279069879706598851138760419434336411016254057935909969344*x_5^2*x_6-14334249174175170981157233675051215906182696776116724918698636082036745796173966286729697963611039502675722113367814228138144146708227534343226700254004969419321151020973123237165990015529056225543713542397128323322982016833260857566402768339492929893910772535929241678046617499730279855457655954471274694432452508981050727147825606515390155638176324177439632333205754082991647799694843730535520430217439899026505292787008423276875305646735012357933303560855091021011811509972570913738161821718221358938448827160045817200*x_0*x_6^2+63231682977367827226372425428797587437566646027917943585432844212577804018516965599367965734116042509889097973351125196757065573573854704739808434961398336450668634000952746240973300424324094793931402408808507772588898431883196084604268096862547745136559839321938181510191541362556030648488070372133303317291131780865298341831583295917241122485394360796769186953646532247402646531064324176742926511244997003111667096225407286604432255072797520775294311511534290780297085970503635652326776820253809035733315901060864379200*x_1*x_6^2-59470124638841484883159586031528257989357829090934019386227406315257045302695224996257289710834136824209814630877223665783854466405549591322899634355108470137108926461118995276340576082815500157166091336524199965802217974279554407640927733540574682895456372589258387249745219114966003946274368734595370607617836716877954956452058708335189677407930437952288825474804575500463900925599385466796355949303510138058279109202807805644612906374553158648381009178308860741871173874644472943678133015612647907533694717566479574000*x_2*x_6^2+436703649373694288194468556861915781646516028918001899506868886543221988185180481763754828108276521273576612251494940422070194331315577091061677325898467386132020016709967163990293083644533677095123835938778151146731783481438619027626785735213809566677571866048343612426879835147392084823687087860297188992952300528434921376755217629226990117195768634871082312043127563136667137787289658186346954309739558386088398558235214828438489292866105236254080208015843907742879699409005525619040662493361715670781490446560785280*x_3*x_6^2+9905771500580882212100169869567479606183445737886912609137704529845243617066422353760593142652910234740947776727291131756697421564268021454528489647168888767578083289487521412776637291877842019823327985032203843888858258417157381452815683987751446484549757317853388669113833296786003426410562622451359836680237846911629128924820544040650430970869097377286122330197405062785479714582839310048897393438973581780428357801945199031802860587279989511450040275763367766538039577998141549093468183647337790521311312746157868720*x_4*x_6^2-20147893702202045886317673464432411809455775575734055751713607710719415809862490453644644538731568940835252492553096516130411257067673439220540539433651049824088189476774828277731477931004923975836843480014662546867738095418025210138417696249514935725324510095189855456448714163969194007117761126143406961474899042495357073193151433172185376549805145223547417161494214358314731145750614214934897861339775881083959979477290721502127745296165618422739646743474004798827704371492307717286411788831215402324347115843290205920*x_5*x_6^2+11063290328526975971203422328766516157493700391295707765770182575462790849808064924112097928792832047235257086348351416571207549448109817893279217919252421406834665723922555010324363270830933064531712249879191429263935542347605987015766876924828177045312306526392321199252545524842553412641550730512069176945138401320200524273205846118079485952478123819608422439539822720224397672083116961045233311561472936998067318724892071058032738829221581065987696197993039420715716015288900087331590080167557000125561790276323412800*x_6^3,
   13930518885277507174286173926040660851838567779218950619294543361576156457632198460111629235229563603007034726811975480794674333682195540990787580218910697941344159832021089110143470942256243884174188357384250713298758477975358392234633170840777429704505658712482996604546441622828874051424398836699886039967072685573963476357879890588730278933531916878282516117807916719321320090743933146196401032816968060932200438172081354764329344427850323334892054069299720106908131394451831178888083879859211465340485378055983850*x_0^2*x_2+194146678231231208361717877133858057919245368640395927802426170959478298756860153785616398539694739583116287064364058906522160303962415777999197954801517792556100841908793570541354846343719029219361296310814344148555089983007571917859073929625476320922334390078664043036042133466266096112242047152767876317509678519983225987646549973580221103517648421491864515023436474375571769107662898642282456880966038240910032326678552820521123965045264763524234121901637745940152943152526102584402519299963548712113569450238944425*x_0*x_2^2-1106376437967992704973327588140533667391240311124898210349445327145206171433373152553627818499191336692212982756308426805040441138289859538492211105785186984007559666517522614803623905547344309732713902702661541488275085312648348801888759243792955033204820986604701738524321628887401235869226112193558802280881283459117166775670511255655575686932351752865531090595214013222039994597316869945600480281951668594219116368410820387927324115795457122524488408472458928211609751707237280784743075281188966098491001014601102750*x_1*x_2^2+1140247748373434655977002443009045133250119568930383440606235036708384232507421011877234928087883833467634716829043819509774447706411676880959187239197906185535390139697984143376396941918257115424254984032440482301079767264129958261223000907926683841631649962412601551656562378278297094342111333499656059425101984405969187311900694260307261933081736436038954720605398397028235197758319822138352499414434479288544912860740031363776707418763083259608427604721247591912147848882789416315405447137009300596540148298853382125*x_2^3-910239671525170593450956595830850324241445783814801568643471720189848456440015379042944449321324031631008415110590289827818449455829948408848924490323418742944573025668497334788163542251640735066941139646858987059852937086325890454599662200291775143075363753633035430288491008673498914494179140227134128608944773445776108008082547768219943378541157908127447431802672496673870473563174405245949885946587409341608019335768199415494081235458860241704483474450616379293421354847412686122740956025673870698527694107805731650*x_0^2*x_3+8196790416305254316262668792820890057775951456230832805879502788390534270775817021254866163889806296659676296828374394575956623293521193635690032073143384650073578118789213780374374416951479183808891503012231907298100790787676637978270571345861632147418132101969050005967636415141096372761251658221232369461602975298002843137300382515891571231806030233895653696815441341909486151712057783357450109148260184198008478860232296517460813367681586967880544777502191480069254805448527019242746903702843982987033516851767826010*x_0*x_1*x_3-18474567264646828928188426188830540978708679897144381136681236995958977387822360175588448860727995073140658492622229513352474602323170179774872045298419544960715782183508122251263630624403876512160610057709648086868996167574847520222294099695219997970229280616280589698533215900935431673562019130571686267439612482394452639136039946245970767674367995957118290044404261633523026867616022661847279994473366012506551729784020770096533449788773272394959726467006992416665503039135245240029142585119850811089515407550840864380*x_1^2*x_3-8425937607967978740113715613063632734637881836647612311920911468020921176844387826465005580772210603564177569716316151460784547787941413533941659727646757106975585831814373061598708919486058482988126654264907249996207397008919252808913854746961069961833848318359306646892537813657863273028458926048363459082957274285203301046717663441404022709284021295960715701386479262246670049079027953861825014746130615509030775470834946130148526262453353982948646658499221050914933938634410241977009629394874451895049464733920841035*x_0*x_2*x_3+38015382594344738130068597766358477955312542623031885936746003249794950204657889241925355363202032562519733985334837015636817176700761848933960454169699497120037526083070627525318437706033682426079736126946518756638858802352768178298361795712350359047413669541422407510787251780320663313997084749152590492786004529077472583996060105724477085912339651311340047740537399877963126371878803963830360272661832620621848451274846542864239931075218382470761390494235779465820632508380549251754065843225461424326565010507621009120*x_1*x_2*x_3-19750852883574363657056477146414948211501951514109223069648484085700315298160659541421147514690997137636219497010240527089615047493413011933900020523436796544369278768419069697094550768780701613056051893622235161494378246377971168059281179309477415142985482997761672153648175174879038877069725479743057089056061669489597229266113379102946473841880167995176372668685679458587851777057195584646507983924505514901567996367607567057036127172241632410732843702067827791939791630578618764502157466728379277550377714219300486825*x_2^2*x_3+1374339434692269058796496787031830757008088808291855302928884539496965660322936466575729112420422993966844694436526401504089798026540523865701906490012568380293972582976059980993086284033967499706665224153130887402803362508855480493333787524335309821627679500625588508994236958613211058868851249667878936933670498077831970302259009290590751899263422524836056871847501963605980693748925245564114779471734356404809302990865378831984303068482703361374710134227247942948059243556374192272834195686857408284710754680754358860*x_0*x_3^2-6169764592070205380050864685629846493928182504332582749753745465288336939305498103211892705601636060740365680235731917201324762700318102851436842243946893115028124577348881457615456229401713167593356529822093353946016615851940310835151906521898982252346968174389839217808877720011483449156135061514884597882802779970405939983154868813568593433886005403219606370117638541753145855172966954370899115383056922942647335096457131849957108822951793252375959447783579107982473171603399368153228486527983026765072489394047907716*x_1*x_3^2+6348495036886579956522987688217328640786354669154788813704191347279308953600018280352583340999149269160727509219490649704338467469575866670419003983028567938771854595710929196529564859997014688102165255768276348760263103950104650603235233716234318968170928104197367163873948404132377754660492916865863111738468028300590510611103884907711533914476170518297277402509386253543202887485228711654771561770626690255310382277175197684796897655748927552759179968503737137387951276901328113354946692756523945906860647700618442254*x_2*x_3^2-512583944729387479154014751716897058365240314060801294286149351967893125975331944829936955186929713952014372249902840562839507683616259058769698057054635502612571402736572422144664226624140631936173661685243164533954233146049353939065778246420395899010383922342668000359917191112472681174179207926166735686958589920152329270396355371277372780093480216742100460886267826655489496739059576640161587007400905390225085862070483237663290986686513727527074744624334394567986214450927204322251140139712028699269259895788533264*x_3^3+824051060918803864444377969733774917119786281102572993469224917821106964531635944755454953771457568881144482626605338596379471449373434519531227946509103310529296446485984727712249487187942646776653005823449355325804272525887302639518685966093519823312441861258788329019120017421896627257666233843594720693951570202924966094307512361660253448368272262070455530059437432549488195117484120163269082851240921958180897612721457855975877707063028640421745741549245747606102548284546193335681939488131200755058745418472515150*x_0^2*x_4-7909667529149086593441789881515314206609619375665133438299873836893477187508585938937409409038766929134672145410186929466680927982762509251318773559224178228666879861181251673355356942740270605487478446412389809525815700606919385078141228497666220324599643492740257727406987259385691361409112017997829698690490216478591238933956995292190793248144772572899484297428759710859332091262532037830564358656532429592257647944333026653426649293023434868947367427423820598971447071130460823329569351812721884908806753364799624010*x_0*x_1*x_4+18653523777968804288394404345156007585047163188375463627258904155515282452749774686585124962080321877206820229271582275250058892568149182039001527757162615166979409911790202739314572751078991607159693815226272994077871597768217721552740417267286701067517839295227583810276226823657173052902501343722928658085658207396196578922980369386685099524378592292918689684879964259577789179684826642616965247437827122254074239513750251781199018537129544130172396156386232365850308769581796826453186949495963565147008253064581217880*x_1^2*x_4+8463365123716198970898151757090775951392625162687826320792678051789634074579149492906511663329170622054586576204833039541475945752812239395438350368794922148952529906732517927301531012917627208693126528033336126960166206698921853918528166092828242172913332803688575127580106750574336066827726128565236162915201961057240379988719900516301434747590749261165505900139700775123348703128063382855701598256947914396892340647810682990319811616576968636709946369389230454641258669977891612785915756857227334063646085295268318335*x_0*x_2*x_4-39716925513120270761232780082224383721330120893894587891319342619843847462229633349861273887468229099879989977819112261496649610229452267203673529859561499408761246753462365751155919440540246694188677093395500279964539014986663825029069869379485038754865524552715659976410021303728380965610673457591033749218240709246365610909656032565698673386531361909371049115244846637156818434560122535876396437585628155376108274141447135930458020796176481855537524946970054555989289132576443490570315256613228328825725748442387984070*x_1*x_2*x_4+21164901525069892670608651452916834585857387311461013289762581058217000552855288097658713143150884004515192013303599417198505552089450012961196483482708664458225750420118608103344442629979681900308642855988549810837268693171918043973059398941233267028595585028636591267719310016380892632047139858965307193920278927506313112806500737549965403190296047429740698459363228565582508663283385326200970903470553421672839435860318260621037189246739739336875884610000287727014040460452801317883343628686500082897813177350433464875*x_2^2*x_4-1751949046159585461906696314610426736194251202778223775269314689307496051025655537554155681691855049913839759329636893793011500485879710634965175680943870215331144340177678310324219729752471217522674166535302600072954970075435328537560901506995903059409841168522765911546462965005370435739930324998803687519769516161881914773355271525264354122820666233571847574100635061409808936995580152164351533939364211672688784562612273382963469369112934327069318153771799146350061682941242681766635685798264278180808135372303512210*x_0*x_3*x_4+8231463602479130141816344004042481962273183666735866099631743168536895708601254035241343311769851162699768527878951295285596732579418791143135596099311514491680936754291216017207507677699808646837936590111197281900966230602142344092579664138021283493083469121601361830769444497013835647761811727102930803431657553015341477439382464451628024074304372490242699851050450623846559252180704012482929746248063723680419189385224649499613078726067351720426507281499736741631452356165269133745627339716580810520745378035166342832*x_1*x_3*x_4-8703390318878852292758076164969918268808972007046167189449472622010096973424177539729421999317741597762748398964234130648392034169728999175778213184246179806572929353663565816981970489844105695307251152807003674081793982131024371466945095612364162757605682780017893050373233955343412953727985683738891169643905058571463671190031499420869065837104476470404811573814096045048643676111021830459129617860200487382473932350861172768816288334532520032268637419424791344149139474679737804410598033071702109566731115740741508478*x_2*x_3*x_4+860674275453466953726155360002033074743193714959691397414516869480158291684844209176592496709846450813206565432046125416984378115793570404219964446086519995804808947899947371422720348915623179797656638743143318318302822775775575039482802704736992017035583403556632623035640818196550767720260778661244950456705690768817345843221546915529957565289230321594439275681807023204471569815204563057216028926977972019431977322443808827537613614846012860741799551677839418832931578815390888171367448290093171772433777639644387620*x_3^2*x_4+260614510766934627890151425295664578308907832938419400912909254991621036365018537786835620219321647671151498909555092880879108867412100356084613991790642213237724309693938883968684492810796792706257840288749562589534796675021982218614588827797614242576391425699644146787553615825307189423775484736194978832123120535806370052760071986876315741702136480483522655879836907262427922805116123751832380338933475449915394555637855329200079989239487652686285629540897544885281907558634422155039001252212879097516909370766358650*x_0*x_4^2-1223483676719869589760562182865345076086126029420556204474289663973117995859795610494952549573372265463099933841734897330257868780817000574100393410921248077858161588090827759607624269793601783513826594893884515133039659706520027634168961903072542835028798927478214552967084109596327868540923128699435348084565393545873599603563856779703361672982414614941833894804662627235085092188096585563204212289025307189928887699400825143327383871873590673094729035910491590261452489157548500902403680788997228404661171670084103116*x_1*x_4^2+1308702848573986061965560228250261560175712277839539523925743571857043374008024654288326771863607274052874123615380182871475788095322587638319472036011948915704937318546432543731221184938146542000470220169043595406231036084824988494575380689259046506876197752394848737760428992231383875551104208000112520282405466476050469346639210085284231407102429208736574755001147967970659643516827953091616081945740401044535289624760079877935115465545592294325546050841089033929676672460705668663421112529393749690765043344974848174*x_2*x_4^2-246725190040156854834743844206333363370041992900258699696963247507323808766271792895834361027533107874534667248133885250884257551449591094642615719224691783857715423958059948351369893541391409700294340270280378103691552474947706511661869313849653598745547649502899117438750663567468326748604183621867005385829786128914023836823219132648889287202036040946890191345819014999043741819917009802118456050050666519424277110916079814252662299966412336223749067698508769688669771001206498154679063247830063337163444330850160568*x_3*x_4^2+19486746310540446714558308982284927165378133563350981453395633001034651376737771051600094745541999805637252104328603307645123449415775572963016882152932082885606761624802520644581422520135863439186332971210454895351525169213236602280480390275534504747270807893891388070355312563398988899571773499749635836109366826795846311431426377837474810586088844453241827600638915959672485092924478962157665203325978173328814159640755135391052728210241316279913579129429639284150958469553425914282716009744049444221549101639321112*x_4^3+934287997906092779614445163396985511951733069182787687354741542815831042458145989092204536669053828004219112865172822983022389611983131231770361180688586381097460458649917897421649503329107140605328487118037817610494467796889197036235043060931693518566462461131748338983830272139909664184532630467596740497994259536206347480678710193691493273507664155900614210852592453900500955406101799371717272606320303810163492156353979356674392141856361524525607633990737956711675708793760863682974642115079171802177298142386829700*x_0^2*x_5-7681705485703621675074186094663992831984898345669879846711548843694701452728120928082460494725963431319219650027141565565524764874754871359597407986154553260129797407009879061152346017048336921257865902048207309655026340261079506568224771724556438964044001157165267967544895144636761461734199674067084928294451951486384799483655367552085180724065681800075665143833528308851802704939975037561011863851613856579443199310238046182916864208527279346039084053284467251544383576399687418481113814122061014263963908420389097140*x_0*x_1*x_5+15686431881851568326076697007400370979739404245479675399551230693832410769145417219010501638597815388469078850585920065856862732409400005121338199439053545608972899423341399387338154184441977996277063019273945629000329884099566566889370604125741623072781666913069272436876929762827271741750436949798421089565636747317991928227376814208791756604591491873369337991458364511279241717876693070713511168550602813772897969256749114882984515818000094859222670221766380278322466040845986692571391887924179421907782375073060005920*x_1^2*x_5+7285533626696012795908363823697612377372002587925362667730776851805511968606507594988668146263572624526447264850591521332678836859506124959395937704551182685207000429944160327867644985534845565495072405615479701137218263535851247595815664183181965424353404072654762094047807923352656344435659554139436440639314968031684222295891838934699703858767829383669076752168551889172834368935851321701634409735430680675753798254925023503771685392364005357960938948535095143034213057543876952565680457030611270513613579021372023190*x_0*x_2*x_5-29419391351887279067884772576809021266743579921076736128053006646753040625124708940894260707776125639713019421008295487553518125675618098293838137072432974264823368686568208950366655169181529692057402529387151735029989653857091165328836526243496018931910462237078503686583842655131253150277297447802207492457492753231326244755340687614759261107577290651825175267979280487383447751445118907289322103580100511850679576255664799518814194479870910700413457554845880776374369435191732923597668218193492588713748007266391999380*x_1*x_2*x_5+14111872511617384732749405987966300887195459483191242868016471297880315654693296097323260322039348573735326293291143966643343985382810151643200462240180399434964258182320211028990634506579363564098700332866925508895574488478864402306055138199920192609753548692283844266583035883697198437723381574900387565589845413486469536326758327694887869491975498738446517038447933907340248446175368571317508096620975518085511363613754026967002338296971488903475469961092053796075677534649721851132819423149768534447707808403583158150*x_2^2*x_5-5045162374097621938791712547327438967524122992551887230552397565145845640601500400999480762039468789835479486132183948082945936893442494570085126870741150513687153037813380055523740165405157989165745167964749322743390968075412940638598180565004826776401024171446699559639202013536077499500299801667440428941075161025584206087133080119167647525976759085882202986897265506286077823891983389090949323898872354807989110601766022689177504603838433437892716600840672334047999698046287538303971493716849840354860069309634944540*x_0*x_3*x_5+22227769618136638878829194190319477334416632131871279287134219090663827419687797699685946863849365554413099587619894041505486963281995068962585615145612374166475123466077287472293223752594988093190447273135509549785790140696681431069846333097357035231025604840293327238847143033703617119594648663832161724780657531744370978153020923276546394733073748193910834968802792251673720070295752102208133185380880723347814597644299864714097233050073666815153566786657592585114314332066230167091428348420182577184138447302573917168*x_1*x_3*x_5-22370404981742155555292931168030085005535597336715959076707510578675078384883272999644497901578154398701614610735225208637869101385451115956460888349348388871195506422055536880184237666259692007316382027154827369274611899772098266960340816162610081032814333343080233671489478873130931027173210779547045618782726191391883896017225871892432620907861617082626659191984932649184235533250532111122359512903217789296393077289054930484478846137738773314718688188196609238287441884072373275046387712940627333969513702992726023272*x_2*x_3*x_5+3286467199739854666325134136130294424686705728803873327334761378884494124836322316382775047148128364930985034334796948839337059712248180907545841989029986124269945890868932870177563551285967959062052331617323169999255261028660988233325960833742407538857947791892351987310277938308658557676360734398930174107669692322479797132843993748275200669249457064195139546178406348375449869655314965713760914211540295262694303932819380736762219469109511029281218992207188777683726787900786368876822719392707703523231482932786649812*x_3^2*x_5+3578247721249983153571422021098729424684685262919684859182532488126498583762185643410930846013363084656494185793098452855807242026302529367601732572114440208808192002030095183524966786982137645530439305827026769475120566535372369632086834163667776262123462290338649531901335908544446802675222536601213116819846382577887512687016167574620499230098679228065307628141594961905825076531816484931815209858902547465753360680555748039640551768807324011257374428844908579601424059566395284950865490117466471504735189940626638000*x_0*x_4*x_5-16647061012720335686565398369208029195096977404281482886738451386453365198908301046774461700927567898903957104189965509257874658579062969128089081934900608421461843857516748650854456706861356107525548981840694352507301426345522206008324746322550121812882418581678565923987229279470928212129951572653924142607195409097950848082661112511113701697537585141535492067747868149556449980817213945069769705659733458516382407056266408300050355453862635048733355252354629060578341715033703791531688491697708076065941164711395066468*x_1*x_4*x_5+17613557907473229511556459730726529953999106528135508013898353137379226983629606673222896202191381876784474185477489561558834432419778251077025854608967569793914451349242229111169782939563879726573943840323797369791101159248014286664026495564273707552899368507197048160902765554126014429046357980128125422615670781664975280097584000155944164967727091368307900756154658684816543502068639445174820719019926575957050765245783881272989220552864837547415419631240759210373235499272664906293044433422005308783307212199961321002*x_2*x_4*x_5-3669785204883666184328852819701869001809359210822643290217074452335247154615691351296207828213371941158380629236434911934406664300252601119023953528862799380423317812979816813746588381433745875314929505156715509765464802290785407727637207107953519586206710470025598077582779493978430395730933460135399465442582060253313761625305371442228441342320952336167970306702542345992686565866152871498727438462765255467096053548702556718153061478329302276144576800635030149160853756909859847126043430410750693408327832752538041088*x_3*x_4*x_5+521797464515441753163392524272353209416927454196324170827476369449727701349673281642239992311694237087524004017152080855542034953531297736871846066654721935046972810696062697485126483570854638260133941891371292215148379802693851926453546504180985468857517286749870623160576785502641410596604053902200899157387120672658439042570226424809857886600039750463309581940500969100967928283395862611949506294988527299525794904840785442878942092020030627841492697399561727221515098758672933242152661214934314846096347753952486056*x_4^2*x_5+3226757232922680327549927674638562649435443587627181387455019545837941630417958532989499246904231186471012114299621176418021932960619724729516548866797348653765522964093195885254188251935013700375825321625481277101270113537066299498683695280921359312230193061326312802870935942455293259060829889360721586032927302145634173713821359012088983025730507705641742989497046682299447658063362831031321664234258416534279031961014345330652231699399142264798264765084937128237250562614427010291076457944584782947490607411994309800*x_0*x_5^2-13055921786356570041055950387176446569567234967471743864662552423694055740090012790928312322965781660892375141851508246700696596138239629648325226286630458627819680753039656514265709364172302372809334376255534776397282221133663839300426334852898692479906655884377077569028422612341918521351092067266456599788534572875059238519189989411371555614887509953463733502365181573832118239172670556894661759743974191156430156496523623940167797316977913237495375436786652376346569524306086129211113373925223846739046896710172881416*x_1*x_5^2+12186392294786432211432121473949007605246745184854577289154445872207079708246779927536300736896516617824132266856956617215077440084646060792806503557076568111980531556868874414625751846192166535996350014317221863864658847999515552588163361334157698632207263913254848148750640225356026073388733936231777333233478864307760000549135620882332150314448503176977593365341319386396829279252635947417877718917478690706596071505670717178701931105922677202686303082783286554066508752641325109012581678276640353665409029045241584724*x_2*x_5^2-6062096490753729870836165937411022435482364131767813746911914628158645342732931726722393337158604246520751741475830457603381724445267408583519358792687473687103894570161280932240242858547795748928366238252009751797148602583396267778627017431269392977580230109700244039201021140115787627587403141929814376059977265063924224265808232421783100421902050204559115537051979652260641640730632874993833659057584113839605959092158609069091948247410565572083047170766839192157297047824464424166321376835997480350974210795408047984*x_3*x_5^2+3685366897393315918016586254933136920301531375519913945636387929877608295620874969293321918259275357236098629288460213914055506375357797441677173908989476199842921597820622565696094590159932946775843316620461820990989908898983880772850032007463007292436553885433744549927779781752388025921772462640954376360809275223192002845770433634692146386445489936600281120945664478967797881033731855359676410883098863606310121963136067068162494320154407064356392177955969442559353352595600695021813643203117550084131677346741372592*x_4*x_5^2+2720212421707541102313324426087466827349365776061611217546419867158296031792077928944109054669852670776420219731375862902288107615254270961412572851670451268423594438862145942595040986222117778475878942948993342860930791870532699381622633938414924347406100013939940180943631839080597996547518763664565224343357015638795169784574387213860123320554571466259998229139101490410911948706607699163478693614028168282396372341539207617818987344130637843839478740814433836165676890448829917058493693568163159712104871632721263040*x_5^3+1204870037669173404213572581270101263286586902200786210107502295943666309757402998976239074525503861985620349144124043988545277046105354278299288843055190916638901707714368149774498924778107796254449807577046474314154167331173533177838878322526905175939574336696487130519292219279535460982870481124548210084264307313638354418300041792449326386746572750724804799055358522484023989746727523212266387369991455689459129952907424170016374524083293360568019706717472827175778001006482892019593836147860249641250286499047579300*x_0^2*x_6-10587697132586659037240611323487205454739537741697157004781544331349890646366065442204776487487609424172529594086076436586386718258011782864523543354287081554906776206116799079885965846880286066522132006748081646333183328062472694105191477534508344450635865258310193891826596928862790527297037540846591125042504193367246848607489644832897465748091335203963064502528034450239329776900098613971563841983427063660548487690060353306764573366472075896908020841067686128650132147542196157996947257142152992698423857112004098100*x_0*x_1*x_6+23162490017326832518817368989048610918790383905075040082490448886611544973572254477262907089659047570392751929447449422187682039902178946435458108560117040119327895192105715427411759227761069563940336571301581863029102391307409963366499176501173794042390241147626380993527767188387848676637885765943473571283299158254758510871281504832856807873395111590393879049519255661226934635959238862854566914794982873694065613641750439494939256085496657770630358696182284321998591991740348519414246066766882119021156894565572341000*x_1^2*x_6+9918995345663811766307632625447005397315958928368486276330214645886726446541548726002229791474713869114021518732110812458362577900478561791235890143350946824600211334050957448058785187403928621741898498399770690552594695721799811363808120571390132971058612600281625909415765096620142634161298153615887506177962984966336159391852210834437273961851692533249785883206403778524649321428605398495978976910309464464740493298728065033740192755701921091424481596752065167901183011759043587362854106310066527499529846523635664250*x_0*x_2*x_6-43286835009107290920868883503277868690542740650725706166587963403201284023566504161571437755504830218159987837137030760252767047600312935130635754031639749522298480134270777776058191463566687685799368398816068160606275558659374006303840514880924275821052180954620913561650237642362112248448552585001979469860826692937365788757940809338870365488773551888453102997053461267388767627987893250538438047805551321975543454905321157068928721728228301630820681830112124307317189636750994049608724869212024257690793037224009499500*x_1*x_2*x_6+19697128457522406906012579195090420088314473064252955521467220435703141446764795078675936384816492698266053543462032913085593714890276428448779473316074825759216900202069135427964051812942078887902856737764431515243033013844904337690357201630981753400221924513005116266709946333246845880083804238554045620009562112190800220132187204386768846569953976918745369641128420775464720032545268646798904962743846769402287872727268829185669069191485112283363259445721529007600466424875099774430126509094385464548858250083750815600*x_2^2*x_6+1110857593119982558026931007033856456334733936051669204743317263398418666672686766551689571927753434905984701573620368669318978487551412983755811796786608416939448793637186951594418950197051433905787337155716162337284912341263192443704071670575199793412697444211190394078455033494930713860128890803653757464722961103992277538080217696083840626411197079798951335859804737734441612932677937138386427705880822734074526087223099330184018223907734898605256929463065254002113202297617781946542688788068557001877901498190278220*x_0*x_3*x_6-5280681170395774296764688682867222240741847876647500457587722805419651385818323692650509413202120526638690742857151898741813455859674499089393049762181533426407592963227247925185667128794450214141678547314271101235630175913022459907475194894426182705551487138312764395547695587589342970942087481960921208265823211753725535347185344775272812373649372132947456425059228065596201408631942952206945533183699568797303117122365379828349460080287118389910295980750655470106463869924783802627309023704560378367573536718109084340*x_1*x_3*x_6+6177714974865337193039347841880862611518874944271152409273874816491483934188624112103776711855854211358988940266413320479902025321495196539830979016326386977605120488781678986402459377947511858061202810156451272065092830653337331093683914001841066996498955157270545448864233865027566148062281032814042171623818828544432512307135026776767576719505139496345785782871339812798279702910794950671749473307113592069646322284989689023568973954512648129215066363055789338449958491501473879362252487466968635283246541043653796770*x_2*x_3*x_6-1539143194537943391864486442770675225501565445181992021191819868669937746538846237091271118507435713496627699010486966175297894367714076275788466838608933267217632928295975143898345489616133880002542686889754436109072370028567918060625916138774560423480038761611436016819581944238256270842836004746264516236881669636265723286206804341417533651907559494841561204355001470519592190678821088193145029804325283882812801128699357818903063879994651280005700606818750413228276118790567792204044414364035415278597227788128051264*x_3^2*x_6-2841838970144572431560493696755189641612963804619964962446668898648674440046794132316435636487594975755591486659287038964729718400413530061842295585123119280278893982644814608676912021570105145129948141786777992406028192185095096499883061757551350115221200538282265428014336548962674590907516352797571108219847870127772804945967539220249820287806670296336487598423921582800149159558788695404396360706083845256743413690577175415595512691067783203253242847049268297921591253796094949890159491164355990240779432831364925220*x_0*x_4*x_6+13524150486398917392128901413390034654765604575629409283326749245589432909603618826397322468600873993653963647658358154638039976655390660859149675409568714786454213493694774521747370040471318903138282188110561771590935874048181083466600633156668121900863954108436287992389725318156657056752247863408066954386531762178331853127698769698180707832237974125399004156473781385788416826841586580641536478354417157380425973798526633484334080426701191577057851592512040441861085582959144769329088308674647525418512394904953182440*x_1*x_4*x_6-14590377270081054858365301546342059264805905234723310175654255768974533068216052330672020264966472628488462385094877185359157094305782814922885559256107577871999630935336746886713752141663582824902701037052508232312998825124878540202559799314421397092224592736943877001216260823652432935468237566074659771750941164386106492875448025550846636762744075306873897758486832096042713028585888386108237344683962092366891785870430960994505073307900570307132613139678677001941225346935012611170706267033049880111774170098153553920*x_2*x_4*x_6+2994527519997954787508453446954006326691163160512062174001113526793591475524859359217285550656478340684044656143044090152267145235474444528350921437424835552881642897148527281930975736949060197883512459644062251546585761589905999280088615857756542659274457996150660763348466281023092414509817547874315790904180891766200529663691114595685761733829162216174014204345312518247656906038731150106109980660193796474109290348230888319488003414681041507251143665155858769075338726653980231643507871303029352374981590158531404628*x_3*x_4*x_6-475219647311506642705090434647827814042183151882394111937268261213125455070635674500694024282288060797805749025328436507244811139129343087256265389171777489757033863133093678050539685917036547345180196931250431294426461883387018938987326720448253059076213500977995036042327118033108729567591275968508207444954529059408682165403036930014547957713689905861918934400661124855376406545738102532400738651438806924156211626480203873684953063464334408942716044460526686582804992896165056325276213052424866982394099879987170664*x_4^2*x_6+1918542831145648197081304612541896769143795391954913987175272877344599780455175861847132657104468167492368703964923715083590279584368127560322997113556824952162755047647083288373883634844118714320390605607541133842848561396715488408942829254787773611267983610723342230746094979696250023008938806484373885266802837035282720328426479240455058256893864096651371834427626392410556381533134993434700687500689723590621861738580906444320834555407757008668517303087178948302887501414335826158419945236961862537504748398922620520*x_0*x_5*x_6-9274392764408248961730260637258255076537405782212131695235452591667802232998225969524225091347507614121476529308055339028353214260924056307088839294739649248862495548264597240217564940929944684263703756554180927240513747676905943601457644961377185334829915114366821827114001070684591183679150087650796503996483196517153597552045750302109474197448292064977707666243987923149871404580851191317346565266191866215990778185202047452560823725785740630857002628904314912473176510149895233813840494009182716570547012202895004040*x_1*x_5*x_6+8649679269146085556855240364474085888190986567394981294805268702081397032384609035514805432938259289198536872105449126982020413405023463039674357055472343875697201804656289387556554787821551674137198914401294273958190405147108469040759769184365034168841751110958904289062800215860322899410390074738511768310239629769722297575282917424917768442529326521394339506673715585052699618087060894051323793488178664614312588179270225703632337920665786140244261290840540623743696336863691410053322866789968675729549229005591180620*x_2*x_5*x_6+4421210354853900610303150998720154043017656712716931674868211056251387360940504953932432762490517118054785471658394281630970772392166079693352670641948221361564395995263409646597257440828059749318554432157560271444222651037775341834956435183250122465142794136733396321414786835465675293320362499249402166740459291996489413481099372191289879786874938552477385086204114429631911222838351787069692814770672494566103510440357906054256123194131276279733856047663877727689274787623453330039140749867229811750975538677296560392*x_3*x_5*x_6-6030994678180643432577955784520954493278312230950393103964322388660845663263423914806007666011469503035823995501744566293359864623067179639064800728771165970194870757149906649756900737399356932195649121779031064655519203329298686918167407341662079575261489649090135135053576929618353862232846152342170277673073947362874464537231256110046737137871438056625913026773350337815870519286431872899239651242800882255408325427585863863284545483702004229297931186309536206002229503771897945997759046461901730874491727939166816392*x_4*x_5*x_6-157560248203119784086800995785915068030030826239355085382064327145688969292076595325529110300928906973376226093458505243687980347482727197177099898720246789402632760339821669193978060049505492847125899417802451564210524706621627097697608486742638543446708739280343038519176832494383231758225879299140866174991444420890264962548631443092064529362706898025704447920545052243274778985399485223153535425575733350319969372198850829049454609221574607329442263851219234736576171900390075052272417778602721386684425060802322544*x_5^2*x_6-3587010882907846762978717376203107056405852779995897464265287549239394229699344822658150612015077067437565264877036699603972671885074652179285776523059688206117970431792399789809289634002322223792602103029734654142884954176370346477911374605622042726726590684589326691579577521353931518362327418455920876214239617588903629644334607869890531529722786417325500248138104920011561314111754084952583610534561573427842645215849468547507548706606126584457245778514910625482545178732414263197420127780937482213018937997034819600*x_0*x_6^2+15907087468001940170346268842438442657605572596458261042749712747120935702506340021142742557187045680839207682823346385665048092881381592743870141837346700041112120863318630562235382763728546718077606929681190695833091528066084597760965627365237911598957225484830687848926818680015591548734377834709561555462903168141628648807652389132205674384997128339555699088257423377238111046155374267642036836784733900109269824250880720410534663854084621431003783925573572774575968605449264392394848476493498065454136985894508904000*x_1*x_6^2-14995858442199991571738523498795138146085405734293450980950632450489896173815823328472666716029989303771359836364366287076627076793633637661015145100778003659206128856857213441435028315105830276391740695979208989179082386935297924546535495517196295503406924868787405693320200923655995608012619265520368453242114310787626192186178120031897669695083607390411054130398904503437592780364820233945200041799954193559630108751828040578755630003567927213638817945313319429372455415920343081319238839480531377544501229467246853800*x_2*x_6^2+303238950969047196201088818370294700156508618036463883390161688654888201745279176362447365507367423089093427899003132602332302623397383784381871171199580940264129965589854151911584216768326639583874970096621754760353164035088163260870312800163172474399097994942289556300899574312083059075227390158239233704039234844038590723516493271568270962158683654143128870338014133249055855015253256732924764581328949652627540209245389566078599401287342657510774482826524788575005035224126134190007743998056493503955469966779872880*x_3*x_6^2+2498350818772209127660680585912792444902984920084857676167188101374608929878839088034436535742049028208365530939585888013461728611431573695018845403037813646516114246871728599352563574101152657985187326730117042701533721661409352598039632594643967448498481270314316892266139330593876009516799220380772824349541459883944183368014133672278693378319528371186947421063166569596705633303395185033973705790217371245752136466162239698692175098035144500719796517064037925835549909332299774114197293855674166669551707262893204720*x_4*x_6^2-5045817375299731970835184593786468288217874921965981691244709824227764841017903719428935578999580985819722152890152777750130034973860209615899613013168366674614216575438188236824109041871343390451280186328074686197381980732229845807458448639279631847589489991009464755244692477918548651395530139113450911596549725836783280055424316101995584809326717783030922164516506257913497315892850473576337132388618065656026945279070995958013480137693288256643287708768304634437918909086927714174202216180395271188520871230879191920*x_5*x_6^2+2779482754444274700927263797991863044358380103865310220180305596259001634444006407089902505402641017323793651635456052182424306894286959976984168846484884394860385802596774206590064619600837777646961321903122949179255526325192992032560388691212476441780985678821841395837039946065484081407266842162923323386788696217878690762402519642791463320102178979334629079997713094220270943302791718396794200816067973434325000057547508334579928596341743992379881616233806811428850410149913905200717078914087642100103605910503432800*x_6^3,
   8704584229171973768618246393214550080848842209471955715542047523362015477954748009218323753556301599936109985010797250427986505075131899470529267982502198970777050729322891966823934557346972964196842839314101802852681368952031086804897927036794353932501107315485803878326590808321927871561474358817900219830853703814359463655623805919300891436466943489372532214184546818615922010987709083066151159648774042645349245223526263677025221789631044895259692071302425106802309531333187082350925555786312992771326149088124765700*x_1^3+16603798979555926585234061201192611062626464211246732581307345038098936094095213185043512120586485686459693707551759891950266944712079416685365008154919551718636262482708923663563090844509108814095753768506118883197699090569148491010783845354661328506104925063981485510403314949054904160045870190805772542615934121795133684552462597745553058920521248505866214817794244787555960251301418883594054591463981103487026225545216932828285100693267966239432140942908800285370545308415644225715395251267437709312864740952998885700*x_0*x_2^2-131351093345220828572503436169724200934939162053443174209670994225116190947507978540975735172783566201620738988020006142998126748030865095416519232788364840771362700513508154913823513614635842185241097151968312865268145992955855024824583319672514263151568336253556628089958789136685980543000421382095554138075582372537086845438288141048551194688987018814632807802339435023549550224634452497288057607965550257365541619006822154730837798088355831631589936034849307196179724581054731441162198093257142040379334664957083423750*x_1*x_2^2+125488741415069154219326109837900576209403508478078293134513135134086435308339708291550665093098694757033745125098566372595474487564230195244307235715881943613710550474060252633166585053105666722441204912246085393273980530110768534561628068166676010773079529683238201937024906152615868127163752378661631245351400025220382336367639519735864096158802143986615470289374961573813152983262730762463134572783624269569413532914288667000301105920341538877962131323438541634243823736572514632179081251115929567469856129066001688750*x_2^3-95618251869053307706699745118276457511612433607507388847826586714216248056089281591140155314924849138527905817469126924204832242665900692034802424258755312890395975990493802984554183321996212585038772344299539479524041808676004409726367638191282388480350395609998316491092369199153213109000392681018061447965892649746217066947936204502656423478422101303736865761247535209703343372999086590407463436809435854273800119135370955016363618248593797886408040302807952406004199482295286667183319289951931330771201470574246178350*x_0^2*x_3+866616352673064644865954110893673687939781672118204880473384093068653275068512672492740445632798771080046667292841489372346601017120820012672251423538740680466539092723922521985645651321278934289675833022991832216434027023479756293259368263827499591234221560195379233336640705144084617151319677746534535759759421284602640873296793530507950279027632326039380432989551252583019173519864456488079987000019403548048732934964238350151203906574792918838379145255975173337608763097468795567065594844648591325161285497860100833440*x_0*x_1*x_3-1960343086649354400914280572476331597852485714625503857790366888951154664768802645671897770664539043224424355960556610489155276637591442000953722639627894727459464952493631248291546068699911976252836956041254256819557527793751040874598485013747203317335523824893571983021736903000336540530985259031268548531181870324025351856918151022048461297097380333558569351158933834062337828740026309131804922986737996378908998036986424425324868570843608333295133159633929054484820212654232827387446922226052231957947486775176311746860*x_1^2*x_3-890097282909691341767599135525779315759838041927030534213143153515913539036859247769867748157984427743660447950165521115749277582593672947340973579372354270203942391499355070957277821338735256721238772018408347452212441186608964317616814759134484578440321897380564971024967947948926238389609660739832886073074742336023548085959845909166119334888335263981719182573520537835246694355264551591199320904568327534688787046370211338334126970260037448044353019559469677485346681885341598229665209042484352843444082117407858530325*x_0*x_2*x_3+4041402062526844468128638848718390433703354589369144803775303727076651111642419218781758529454916206909163724179702427461031394242227509829288114677321688859799334146213937006952696795025534226633896844724256402986202090494614990758094301268616109522483547580175597572395908876931658070144134955146980532605739059466353076685318002576604554652482268958974714499021091559235825086139963039673372161152566586645802797696502311220194560616628551744725697961472658229232914684759388941806425694652012019288719397862350041980960*x_1*x_2*x_3-2100902762743450945846411919427913265873184622655980822869085458766851752544230610435505348281992455249571683326156976197064863970291450707119886931918917540091763403401988230183229264419568980493761506785928357120806782587857671089823674420265994616039016520532567431634127948041399363554009695144128795211343976063323646194775332395388305525439425374632280246226620855482499726576628486610007414706612873419312932478177592412518634777139345073652727134542945940492803747663557855606475435183559320389488785965468845037485*x_2^2*x_3+145443463754606861913937931324430870563986445093514016688083670597133276846138010870058777030049775063846114297959865403210411956022081751829063399105582031324347276119388966606118957677065312628734380529137833493448142360861740067241329914534801133403225047280888832998346612161056219950105149479360046134365538636262829440740474671629322886241978916848105192408402641401590760480710258782431744270656248142178243789906852672274091430883094712425746520889329790357634539235053427356326746912764901408561988611694707228440*x_0*x_3^2-656521026440105716609541832717971899679274169285508894954703216537255098154978872589532854208219706466954295676239051818117745577532588721279921828646609251205472152157483634351867148643370016175276708437425655839338795681544279085192060804421621418547738080588365020377867346651050315581824696815379724119992223522793914947244928040404609123026421393194427697768274244059330355877122288747131882648455994214368783903688931068730604234202693163121310125326708093894904881940534798350309416799416743921419754955188840320752*x_1*x_3^2+676135559793799618196796591695520345287191964294759514936496687701191740689547168256085081787984374669976614240383571634502980394800121637370019208332638834936868850998500702944382417449212176294897660510864430033714518759352054696390952582812102738333481905484367335951791179914464362298795351206332109819047442317953128373554235797799798329229894615641183487855001651698945642208659615154850990799371907107922968306727583121788266308569874241648211389174876174945250792429334443661878397580789750643948910380541208027508*x_2*x_3^2-54718016313024833865443722281314525287334125260855943851231598301515688390380646078479289147614903375079573971126763373829059522266151735755332608146556816049271201094875416454739026334466201128409827170915826605954536502624639601898222769903319411425101007907042341259280649573650033260614938579168849849616501416641282238553537626558258167935227448991913984665792444049141081786002515378466043645064594177812270471336587353102536802233066031596586680758497712040066675410436701205743885931143680167836889835347441151616*x_3^3+74378526838866177050708484745704738137986480328015573586924202895074894875187181186135050281557153529354029298217051864622429149848539049599468769166234143911632328890749287826239198074245153010131533304363551174228124774463080365857995723344406227905960700477367271270557362764372582275595672792465423478998852887336398696011420284258337066085104259976837263490597892080043081503659512258755646227241898456245850219378086015862593823172181612320639174016987972560638549357553977387373676402586203884609122502046150367850*x_0^2*x_4-739821999862499904085774182322825641169891008230395589817354237386706708717975358754044013326228140043486366011093433767112993930421827302358277389122849454774962310593746258979883373857262211721493137912075822342066933179169775248900851592573647440816529168457974845194467384928647388586803219071318126803361295500429024092651747508198529802366697345589639488819580173716471676579430973375931502238989775210575089064237796014330385125687323424747950416672193873314328515292994877685081337176478520206245008541518671124940*x_0*x_1*x_4+1794929513130006513107418162536989764353375369215694794808532971982596258878329654660336717538866853282452773662721035383427269414657232113865852451360208970230088690132611833713540133516555938067205431191777069189084457062518109310849489863912292645558995447269387599135231246282228949134595553241647980685637746950497032354439146255084106293076690823297242476292028824094535165486045468510318739946537117144381398633499938854092802237836601262214760803462872732574969558305737161234785191263517047572853047551542273750660*x_1^2*x_4+796001909723651799244823943592982624203907092497985085300875048097437369981555862599454276665494112314970612387990789805253244517222967893612994883151421716080393049420932571344503372286109972199050077513776578830795638304667802002322613190180258688397965836173976040549488267066770486215846050532801202497433794839364828808353615164432226771070250963307587705844903639187478739577360274930179560977734972898567070926101147152810155366687108415357233012035765888211631813704039212758956515529541167450082742634669209870425*x_0*x_2*x_4-3839202959386286524078815808764177222338556822761232618602815846355917713568662370493767443977760584503893555271917448047625598114263875424487891020209261567402300029095265111689320312706370219601958290568201341568134247694453804660540511587097663715541350834657815548155983795696555791200868292424035774039073219722817154551703379121534495663471769797222187216946722721317274621682637369877915866972032158048683307099450611018649514946722935712397750231541825291928369814583874883290626310054758367689793468586177032254660*x_1*x_2*x_4+2054687316486478540667560283461590646887915517338472279946957796801432077111738120834781183391142067453147246349586194000364892787363105405046632335679566619493262803955145999857588903651926784867135733117463364902704703836773307985533818213096107666444463301305137491748103636433720324301744214167624061437791814893657927724006528908287558105351979890104872418216873137597233115405151387117839987025764841600457195993209413296158183520705064810675907658084346141362192127592172597849425009145595782167489902310051787514785*x_2^2*x_4-169835657971199811263775164183022398123491156591909816639792767031566927199948017105969018815239773073540215204075537039574835232409935894150236448257714879233104410589920036305414946674364179022582107384650334840600941870642888975711595390258305120575672441766231462119587375773337946092191181513095409783532214771382969793801522626346482284145124037289623949388976775351849117006289761630308165539364972358154203774431985024114192415997826242094208702276056670408805221765067116430970170222233575085826522885899714250810*x_0*x_3*x_4+816148726371264849222557676786575916052023110714463415863008441707723879484983570344570691328306795340354091770735548268027829990995115495442534710717716595285476019313237521500234067526511284655497987107995481504876644175403107728165022794751550353999068032336275315853307541922010549580064846360040509903124600005146926154831076483248611595719245363921541766557740180083980585883833091638531187578924821619255585160260334575776413850429407703528370488509984234254506756551985354757760418181838109627443230952949633308044*x_1*x_3*x_4-865615578180334799695313972596312459588925741586257432756929456566146225542616327270641944477629992857722367861785919170892381090880360658883698451388083590165772234977470421932735233539872797011076516971124312417401235015914647423769055569855799474986244040660699791704954136010747103384161652106507803202258292263073132862277989112106867053660527698987748342348612725685339216337547146775467373098139859861792579377587509356620556584295310751709874909253447078508392582246631890709379267269407276141692781592810706988516*x_2*x_3*x_4+86989498214829613968766528180963294173374272479014794650926382253879541268853307303291452859827708146934501675521463172729951176742822346049182972503764241976312163230899638789039796564079513830315804882779968487192297875509689744601599983856278661095913971982213534983472131672264348254718842140129567887977024382240784136509362275163441722297849901886813627172555600966643337681348962486410948651777602072109908040323913610394852749657047214149458905955758868135204455584547081207657025720213736319438084534187731780744*x_3^2*x_4+23603724284894712828519794511840932224887965595492420006555120322984740428183748320373264061825526698132532402993301555620151918030866729610777121067736098233770045569467244167798739464303722653543464339109952051213484067368593416905401321306580917950036750135786159279412043154755173528113972661847948282592732443948155264957360533230922272241748979195385075578498874743033854333109847347315888898975849328712047745685801385718485266884412408416798263028684340172811776461867729123927321794424389556617229833295153982570*x_0*x_4^2-114588587835606762091776852520976838178826504077296595517919766167623233451085459464276094456395984478514391866857449653259923180015960833282047046325706980363969199601945478671459599639670374805631506293905850369953967419956179994569291275104091707971151873246697458987737218867967408592418397194888332469064628865794318843256248437435050580673922641748615630297999160655383437344705910766781778067416617364421702213482108286257777773827540606330429175234963893939087933720052706821108568938104437719697349105767605519942*x_1*x_4^2+123313321829668240864904898331467085217044092805262051962193872791462510183771553216670176581844743793327682571898817944956743826304113655858308326151441185638602723242884773686312685787328320333092383721875837943584600625689436609443644739245389143764044798461184759077113610521351439314658778019030307454206874011229205740945352870744664744747500537811823629526859170376550518920987665212588969961024375621965079708518060629699966429701997132766051917052875316323967818488053482604684588127039203063558976596143232661508*x_2*x_4^2-23742946022328896548102038664278135503749218528213426669163987275450403625320346645284127739071678082138885054706077726131889058521070576432460628491273667779753068825643439166621926214896361499166177231345170160737834414291746714098072958076502331887596528330191940749191688531727939271094091854886316104974589104645434105397722639528254954627203113205511903091445905168759783567122462886450303554968866840087732075027481125100414498896269246042548542201398969362358339517352022386039252729228494180856703415129529175460*x_3*x_4^2+1746531025299572557678009266291682406805673596813005468464820098171485986155069478772030392926770909010279966482780376970872857123447511424430699872234333489138803442137055055620859610913299981375427652708386928555398822499491044736697607131580418602685737314505921083772918625949511587265538085838257499226990444220300519147897359597157531613311376158896373416888003301507424690247068915769137912746336264080442333997615232722860547494386914844966857517741166370797966085630243563248788157362456964070036092000814431232*x_4^3+61266105487539147215702120733979969844592307908561889166886943652945129568484361848780511234482648380719134931965756299918791484047086944027769220456541917201317942632677604366737307968900174918033778180437633771355666739023542386654322852512833640340950885356671451444465168160210517509654105461653670675015187582682879524140619638139898236681370895191533484083879446224777134969101863927520444702581063776848087197982205941142941548738795365882667642891340183696783532870328608014651189912987267172206443784450154897900*x_0^2*x_5-489864476418775301131361090807237943816543231057869269803796662844519174077592694739344412901284352270128271410476916588573989365497453068801716476085414300202541808187912271196426862269332841835617223856032760804689075817528362356108514376166805001421055071309558248978693983936043082980982492078638159647426971792034228474452490680184368330230202447760731007482721150097984302217707584813259755208541055814084193114630892347838156727412202424090265589924715663234704523041131015089713265263250908971077911561616412527760*x_0*x_1*x_5+956133631683489771334958014697580336914435981646726730957262831438646482893246326647692176953981218580539374403762132445515647151429980169729142811142891862024826247095845160943327524230369179270167292507387581436770830048662562423476473443224703676623536799730028924101617709905725693929502240898215485725738084962231805966603074962562233876654430624746931831668142202045334665559902973376721780788824233690039861869823848371299810889624674888376110075757280560988040407602098006570831713210078266705435653771885423558940*x_1^2*x_5+435524603328686726527007678971485641927552374551920212780727965568245569938411469392453508710958533697879987444398528231409536537630529259344626343917355388520139565428593444173286006880737160531468585764674696124167056853600924371292044253915740318330116039392186837028589769408458660378565250193153355535439313098746153500942688019169321716076622047220168537444833726269385178082204707059335681288806615533856959627444418715153807872788516395827466699953722371640700138261412172845917447389524943404112797571676194347750*x_0*x_2*x_5-1674038098101596197820602059907031470277487072758568518601820671358666416295742628808859225725921554445348587067845883868802839559628799575520756380248524990408853683087614476871421850839258411579247267574927070845308325050494240423151460798644274473103748212907747152687923278983631730248838718231905430270512500707788235815722792105265668272182474120335318969309576376013482842166784375726396897267257562352633052692842177369430781618451311445223958231656818588177897081530037431147413777334938976466496098325417253506940*x_1*x_2*x_5+752474902107619950837551393815306432965814662378798680710655406796112261450378849790579526663352955245858653446824870015209606426059425916923476786976273872947280263780476252490397597666580782504887558886997988417751686357609003784368405806690789532894020635027907397709508451889947713259593820704512010125094832402359779150807572370321340435929223687731847412033232833117646540084524949403639530403664593793382007308366138338595068320528762633110136552188160241555641805373880423345416309930292908841627000069547197262240*x_2^2*x_5-475415255117601749323149958916695224120599827249194563960134761285691334517394536478240051766270121063586340396648699038102785030626645295676776766106909655170185883194709241790505508777270863041751354469837734809234950565739924763329790667893507407858598049022775577167631850597905337115058554589463990778390097035983898493283133441315309900153057655301489968498418917973110246953986734948955905164077208535849280423466153417373431893918784780337509767032726485077179460512658679537990337819950646498878698651488913221200*x_0*x_3*x_5+2107020087928086649130917134556893943259422660577800227752308741155168200241961711247070562995272180662251916832567804675513953320537243696028154721042725308829237435833880287389567325861006310287696034055859197384192577920039754165620646331707329084415314557459618545877577000201313589412170312744730834047779588493491318452904927280076297958284930577820932740121042277284552250938386454544262744934019537952302093469137724940835608495287917628934748862945306503679062178342479531114238969011900693974921097104454681834376*x_1*x_3*x_5-2115826544303551371183463251437373596208477866834444848722656129465358372593205661323161827338178236752982634953949625269035023827941636669606994141449268369703226680576310528209627326249817746051700630299766039178845224909665608841033041679057894743525163762533529994947127773589241476080298465019983168495595666544177651277976846161195623017662677051040469248624520292947146344389460383215811193125344370381593651490219249959252611727970895913860833304195019271171204503994894356616102992858203235241069229982451734914054*x_2*x_3*x_5+326654788320131388868503516125444872985440972039367362925760272389618507280701005020811299517989579023197899283723498315945353235375953773256376405807501668339546068353020060111844836769137591938227127380284348785131765697566421470429943999184577089094582788526889158896353772164417030012501376962796039920694926897462974467143145178133589849615989654516813641655971369412912521632578903888222211185824123093691443290682266705636355957807980661764550517350140470342698440111861361928974422973127310106485019281271528936120*x_3^2*x_5+324521803210394692967957952710793514228764864122672578846592599368966959388179034561611923037191440206226497637942934034936030304141982267657530676958502314293206382358203072865837339399659734549366208143815371372225276173713895436945360351717580645536588337089617901048574279134474557120258715161453719204780757539279914998947365472445296388559271884752554547824682818365099987713046554449812437843519228603747219266007752316416455634554627835861351609764355509628678038330719953305446668973569698830019594798245280629120*x_0*x_4*x_5-1554610757655089928298200326070823745442579214063255796177743035495881027522499439462100227570652428745983866950590102558920264530348753308369974935727867316059054448150772394820039895150271048259439547899038326860282422680211238419787786963264194378405555545578816425920773425164769477804822595428508376477129570632603943982887906042836561152677279025809377880981385280671306410630921286745843565088362181504981114904825274631932873326633764802560254935180811543622224786419394619579009241347911977981655448030024760895936*x_1*x_4*x_5+1652274623688744845801072036456600020895259911804203340305696881842809232648612131169284207208729033108195084208352158391510668175805463376178677017060455256391043875403104158633661151923791580558483896307568387710573623973241668786795908134885674678486893777090545522243540617253079813720163214519154850719152321227202194034502107273656720298704127458611350933017348484238033154225970630010844974334953638608624359443166149043101467304849497814817841500596975392886640470898337431739219967433581954149589174888046270738204*x_2*x_4*x_5-355259745991822145626137151253867537278896654405992921179260929854046711290737949274929852396582278447721333900735668998878433473420461396155788925989671403242830841467132023289844032409148433469502457196839909003252998821123702031067539543815923116770680699535613135450642482302528419224813672455142102361495199728125567649396754539899547255964685845371763172241779241038921642045217751091840192762854531155944603248234688875154578355970473823692070046188321219951747728731311998344950645078163027641022869102676025092478*x_3*x_4*x_5+47769108797639375844639791050948195549978529249420231059545330666318820751195875974999344801573368502097693731775499334740836219622640976125795182133457307650967973374450193872609055710785901009184280107788294994286910328078421439455463968268175694388394122867914259188841759437878987706193683492151671210198677626887109531246065194636976991538584926236479471992655947640722061449917654943545186505180634622114895462741424814252691426312046137900167530211068675315769916994130568546825271258471571455313376251389923962838*x_4^2*x_5+201901889855824883764780378268626155367863558238984884229447401101091646686582598740262974111516936133379500265391739765736006672675000085207219434741192787714528089419385417243936656193439098826037738868978721166832879573836754091593188800108870597633733750321573479176482340073912123908036499311682151657592197393930790878659682547242891643374861958187890864452094145868351540552812892504272704840837373524876945287811277197373853701736830458653659354771081412328529613314831549157236864713857517579734466623775799740160*x_0*x_5^2-777458513372978574181565416734545081736668526297389463825208643915311391683235086299361376182005228791095345187779485962020240457110245694738438766710798039164444388799377240826489518811951327483274666111411292820318959030977640854191256000281897353380937340954342848456687702543249059435866673435204260756570026442463811048080723484700774514866919014704347635498473213369013804824801663890949314487398842197439015186945326661149581144368823747767755495395876389064673040805359670191775188076202379932923416859531753286872*x_1*x_5^2+666163757125407619628676436919610580856475881206036905045262127295922351960712156053219702734158933740145277329349219802134148836459747651830222462950511414964327715949763455237969929856412369728167477073881452979871964192873571277122659776291705710063284973166136671860207783650969769871268676494462241668172091320367902939904082767391298249039671227772640780845060307233464789882037872218050684087790371798845839017747735668402276932527595944331715892900191385217151095061323001326999790063792065864634140419203643089688*x_2*x_5^2-534607512127785558072990024099769257383313355909329312469507514044553328784120710027442171041226545782863201401349976641152147784331489277184443687176035983977893375091616962996386263061399509427837705037020070808166724327974560797745546775693854117791727840300689389228120955639349779166587253988350713135421101830053447559030285065570907127064216497831200543257641401020710401274845265997446954351591060086824991950502248675990247884171545886355461364199315419751901347735709316602650756775556534654012902906567815013732*x_3*x_5^2+333883332906411259718337801121449909081274816581796021377990497082570458825598900565141217855564002691307817472751526456193527150073597881036542417919954666464851821311740903875277693837120759237024593582594019156956789984910518317280815858048914470495879284031478543299560294343103750654455840363091825061119459092150179776322066660193570083155536516048409117120385246530293026937511693546548505267226905266438727799473428881242046635195148552835036423995334247204093368780646108097134073398903760842677344064713333068448*x_4*x_5^2+157493880664114281655253669080485084452340562422240383394883871926622945606976389323187372017470260640057992809419761813311022123060181216921594306476661627218211627457873467265810545177813495175478460681875941111180910168097084298225623254071485592350722664288801821139884648881626736258737615363499316799098213345279115539450593984459841641505193464574633604648120362497844397025345456938358928070303520892932102664233102938466454455484962345556733014407847099625571386777959829452692715564386299248394282062845062456632*x_5^3+140415877604315524217975498319502618801414302629974136792461862456564609608746794587212821669957199264193597567475220908333001793982094652537204647011203559804521534499364434405703636640735760929721132133928623809959144544938071093713001456156490112646929025157000497935471595843639599407830778644360060587376476362578431818273120165547217251548944908582894060662951345563078406197862607525815212645308067665714317685328292380076570125893131268476904349352247562032197989715679042363509194371043906077737947952965254437500*x_0^2*x_6-1227177455111296511034722410111595328265373133754040614293201959047321930116657953474071904296286703268719326859219211814675275122887265069594136514586435740036585689517012025799356896372364825239653591403352165026842836132650889362338068210475423593292665969435571537807273066910580685255211909039452433543034538026768550944389014475833908726435159446508562023303759775111560433997328945571242352815609835283749267661141413924048542592239392098787327469496064800712294889332208016354640520528522673646156736035467211676900*x_0*x_1*x_6+2674918812451070581887025179073661990819185722756095324488510176644648610336542805853710396334279581644409368539499332020184586103579427610771558420487886025318492425677611488761888845269939892281393614032233813741434970518761252102138368206437873510789532052184399689875839711881544276299886888041439030881677278406118593290713526411282905006557231097331348439514284997838618809794899124078455354423590037358514449797470653460526879064426260724482233971534700438449544356542680837216778797276489246486330671715007184000900*x_1^2*x_6+1166351386524802565224477194735658255831834815605054636356547963091793758936205811684219081562468105176449404147511929679128521120140980310974645053242183271983711527774762324356782430579534336230683536119824040755052956349427162971840953293002555760999926749072561360230704956348079633708667484837962436766468899878215936269995490595764074830881632069613598415899897148602522723425296345981463496704177923270910471161438682202418911796888335837298982101982272020563524850452436029905061263900132354138349370376051535550150*x_0*x_2*x_6-5053741675121543965199829549910099778506134725179516000760461001694061352816982689905291460991511295574005278033388362191177134464400242679639231687513014291588986191144210312607912151256024936829451396838504042846771956103202391185829923629359667942147072577999164932079388521411547551201375738794798544052679177183138825627163945949427713299507059498569236401326828817580758271466163121851482782119087225232249949358015088053247413504642837853912114768204945411403149401083978707245192950970645483938740943021750185274600*x_1*x_2*x_6+2338751174059298190342349191091787992078996373025350583361100492622383093048180406966933224999434200601050396320168179031724340991491593237081922817061158532047599414410538263707126288007682855934695030084179673905227623222171919325223377922781952260698265557305927953508574082724349881404095433749116872197698834696730819573690664226410415419831842468905705557683860963110963095845481564238750637910345723269517522299333258912313235497118486428748360917756782796709862892550342732059681850181900462852653530042131426599550*x_2^2*x_6+94437456745588687953020427170170877918603776575793897491632657861993465032248369417353945282959398514390198962865106831795827029344784753345435344150989866721831811051341638482013684416857666849216316654895368776793804861468290664805977296012928378388920305017322902603682040494187894724457733136887626002079589407213561199279846913825811892455726377400835203599260201162638439440492126384485614505461718831742808346581470122595520686904980065230067554506856873950387274583585735554739803371507398460965161622007353020460*x_0*x_3*x_6-467677892253587079322825400102965135640499510603230377091868718445626540883328602974186780226694838840467055748457712024226647771078671186149622232412615327073023946755870871317249854338170303873329639728065086266307097120783712012336318033579786619647125888186856389026559877234081687987851692140253954765576974649868996490856764516177399472166508526690424810041737873131538852635671207194783495892219501643935364166221583381766902092621585997810322435213805989765785512173415929841397874607288346761105402547750497859720*x_1*x_3*x_6+555630173422575655242902626269690654025414666837027249877696604725044034833800715504403964285269606040726184764414128022133773548367227106880457852557619009101406213409044326060131764963706983563357143352625733049265323020515559750145711166012326427128923693125323059544738498275466552526156590601792738838011907402692164038991313318142566807692300319920005047682955663497256540681359094975848895641151119147116943513365855407789622161540391225238860747644664551996784122929707554465066222494202720167376928546490676989930*x_2*x_3*x_6-153663908013867855222920364225277295125200489240348069749002028725201615839578659364483766732092922155891703103201166658580900493140437397532498300278846692703616434777526957426951128586227841590788870230337541817041649187798657672305862339244839914264814214415029024203510879121352275629089976261358461844413628322743584891073888429395240464973022178808509196747098299073581557281063175715505859973905798965727503327137125844701031747050554479746208035623999892207373422891807362180781002278921697522208741590259082506048*x_3^2*x_6-266090489868818576333031135168585681534953386578254967729700910669475650393732165595515648472521507040846312597203750340354265985309849568475154013174618099686971253330974504059225654112090578538004320082499279453733248465687721507994358696493982316730294293075058354686361320063503989669026166116766821182465655295164770904499320914099033380053527958772273052721907444918256175313235774128840668622179874480209692000053348378495741654859415842665593129590714341494631894237341117027133722053682476000637790121339509491510*x_0*x_4*x_6+1304124527786460975531838125831155792011328015025240430051166740044466311172457330893815393230254874502084777007746016231871877130791138588281984464667374074402346208816850316813661249666275698459993442866378418797377761563129776138720430645499090506018991726769093777668344962486802448944804045751766977544140237209618149183116047267844003930885162896671725512401229791391609277064820222538425758672022498346626326408916812258712804460656848137311141609850745960602418244745894248975794571229917013793351838820034070624270*x_1*x_4*x_6-1413840969255797624451723116217560617086891973295346190223399039012661501524603364328734698863455284124423268496484600877963491115460648426120828203354634427417187414980196221688097848744489841221944345137162596515705068003337168070118393297537802484584186469362171319554381539056851971781658982440478462431551401251111363785269486743688672923944963641058941015499844312084593362502363211631606787628601946657256700624519284086595019341303324557260270785797536024692740191712247243967784308151759908333756416950870736222905*x_2*x_4*x_6+296797583775121668243747943979611216221659079014226698710002605122682988076325825557692600774586147091895740674937137523075152567376933775991248703052208372334762478647982502538900595801623590334626345257338045643970946372933755081160439275688549474295298261882135098046617257602348593100728872095739947307817851054572124859829738233959799810649589636567275804612260662961524641907722438466381336392958827732450188150058171516407579998839159031461569415155414027532482561443275664666766050443558023085596988172471528707356*x_3*x_4*x_6-45367231004715748825409125198317882033625102586466348758001717372905640326928211200703291824346743487368712776408336249491584643328301937415226303483501997904327274800549586703311757062497261112600950188944194955837214702764502703739910687068440762598862431431471626258551631268944546765728108048157797450925239922774586222449939592810726027574949396591565181526641384909934222874324350850792948433239934421486094921455735196662452903809883149831472927032963085993108813047757250802491668161167989682885844219127971610458*x_4^2*x_6+355875277569667860799891590762444279067539912484185380679330419516330422497503881902664380416659591584012752309457412842540213493467040315228457335209306472551934822497585846572046658452601007572339262171298663562865513740908740568981417764282525470909023412134388565832567860551920271767684940129535933900785070720233660384541117029356618954564533380089851316537132687307366273932979693924069019939389732848250231001192902550600346311568283164728696800376422952018178531927942547045059751015430206244376984782084874250260*x_0*x_5*x_6-1630971915861726313273695939725873936892250432150691224479490978746425630284600993666341187907098951011146129807716970709841433061979243032600464722164413272497793978907835359899723413375113037411773458291899757126177487107333447748562992277878112428025930926467547209373458769703569970781209720989297441511540661827526342183190371045044378311879073186891223963791792527967567668431947773270098911468261920577074587313232136796179323898698611424766274491000724984431560560211222417060732701180629921950776330108158553414220*x_1*x_5*x_6+1593543064596447598225047111311775332055534890567057202540247980022738108304868729339390902422717845857109531467925234110364754905866967328973332741693509926144042433200850738544307456327139059936616239482502315513959440267030991047461320827384411967805129550638516037241205681758340932304736628724186570310651002768704597075819925413740396009147502512721645774296556945130019839273277415400560698356986356125112431765758836005128640824868715188526866827817640398120601583516351932759598820792335890365338418306514514304730*x_2*x_5*x_6+346909018660712786499562009899311591032706076019221568938599674093863113677691018342034580314591084963027626645409012911625218620888012219909654227248618389564258244547000587913606716514392225715711620211962698011695999963751763499414659608392465185259807955356887497145175836721338497668623416508987245833007613866579592503376425169043601182908142280384832229574600741262579385197836295272575722582145440574866149495182646287601463478770621433876976863995007274238136308040404445100119541372598567478940401815183599070764*x_3*x_5*x_6-566534052459605402723315036561944891462410782125362644908875820131603879844239585399424220602422982662533845796985886735584417452240309783088639813039837353501500247163404600847523610333018771330633513787685884685628955163873803083800296959344910914352013520974899415534742013085550492784757869346395506288925565188668571569881411182772482869797732436244215485721449564157936175190435643682202721264722301808417214753359553785375644316758350060723687941866016598703457555505412137335846274225335955452400345062265823904604*x_4*x_5*x_6+222021382086970740036499138825052755123958196047210624238991759413840767163563313099966828351015597043974699636190679591675902287171211436651191128351229167065671311664435880065421059840980077363736689484639742708911092164119273176489900882422502945248633759917954122174606717727878695615956072179779146618906841171318534976195869271144547507556535391844570391473960584204509274831278391834309779801781274838163483044845991048192549536676195113046756995054235561488806729507641195271532567844439523562687986802629517420112*x_5^2*x_6-415370526663637996967839465357987852017696847999722101549975058200817557724075012242710019305199192179655915870319868221219224131363251945995578632242735609787448078978167866164397698483000722293209022094371350322017955542608553570659993039403649533504493639608580064127634977515974003144369177914934195168725375201246275954405864964119242358580069943781058189017928005243866666139798168430630029397952279837913706489367539014467543375205612242805122134327371336597024397248571730267994342666594150430587665713555476723300*x_0*x_6^2+1826844119046535865583219161569435077111902899962509922942590808675536693813661370202820024246418929188162323472733829876371751915623920069510547759765508914708896013590715987685619797918589964837065379006066949778403003642762626480762907228880540074805166542165264348318876866803114697880120055907366635315356994775603485142054281379159601335296840865994784015980893917033237016439178389469117617985461831447614887227145077997492734556886133372660326973920948778837699391457972325031212098808624865297021220323699280504300*x_1*x_6^2-1740561436849634786874941122010573324689371907882932969717149984302836019351666733348557018708946061852561059298305890346185437508715705935279649027886049851546661226332437282855651388995132604952758083175824264180524764557643773888423792954088607512471484672558035091338489193854362395875841187344987764354574536683515754690270855627571942118303695477336025267175457484013746872875596670703347459315108196138756886831521726041545445334797553891450899177953903978294909635421494008679270551928735624290700480912869319126050*x_2*x_6^2+62341269069653286664169581467088499397721371508775177678443705528547960846311418937855287752011706574736491281018557883514571554891505351515402474546187225440180611705940794191830024661994358487491608217222873127446711569897163005261923138118773010107745976305281313346156675020271578778268085148058863277313964338957948621816798389604856075090797344654641706720535097690557230297369036124664424685495143013046528064099699403160991448181791688396353612498439671866784281335267672916081285730073795616014549617721714876160*x_3*x_6^2+242334044354618965653652163298463936670357796080564102127251353833970187971992447687851328197764364796300871340555301032968223756699842799013421426523842493996184812274971238396767893792700801494640154371546037454398600456099552515959897632096297565109821505530332282575587242205896537038511132086764627418942206089015210349050814974578934021914574806545708437213495338710324414998099030281565152152402097225145783961088036706574575292446062205111227780852513307983852957180113030401685829079641268586660609291951358534340*x_4*x_6^2-670362090332072801905563005311934423041036595611257169369906705672934083463769075864098004485952476107181126528849717141384295460078828121312763654788644328513705915932939304288870823237437801096893402435836890930189004622712425770138543434648042020578638273229726630909727885866284928987088715961889553517273938086532692634024685804328387764830733922457547729462039310813687601702238363446222967605988298862769454335522230409546375596502400981384299205887875969313682756335799864742143310970605589512990475933469118608440*x_5*x_6^2+316436401148784009794611423989706545706590131353785370817604142897912243948808063229602112813011260212427656342293543388379616974349287081939003545329144261895797936468002046271254861887228191581929471969608239490686879316706521844640332850993317466703508537814987569906013263326384772097335423135382287731741365559901828068832355030902373808050166717811020962977333487426076455877330844495287261980113625311556054764001770771678414982334181075428650811185317831696881066155311982328832928719664616145000470904713591783600*x_6^3,
   967176025463552640957582932579394453427649134385772857282449724818001719772749778802035972617366844437345553890088583380887389452792433274503251998055799885641894525480321329647103839705219218244093648812677978094742374328003454089433103004088261548055678590609533764258510089813547541284608262090877802203428189312706607072847089546588987937385215943263614690464949646512880223443078787007350128849863782516149916135947362630780580198847893877251076896811380567422478836814798564705658395087368110307925127676458307300*x_0*x_1^2+2260312084243179837052365639575210831859010851869356264747337257355566301908505082171333832815440710663775454092163015864172209978653706497093746016094552497712211958359169891298462435537717553722973098929046043644594882466968796467740579605106272308527157900281538588617757087289828180942602113900822599561996564478127056538008022071784604524266893583830222146996518663157240495201997618363586940023668074934648777000230969903583263120187506241827792237785338933362688558482785242380740344291145528135752269529269492825*x_0*x_2^2-25301706790335857657457655429671636756112298218205784068471279231875134842776891557669670757569835623478135839673554920266654964888317465825324421873483798532218636000934243356351722353080897790416868146611260773461063913412766941809280606652619142913450278920988155619349053686274611791684884417957114145117126346074478838679671976433171249326493794537453381180401906069241021499985454937063903204310002212501548316014621734959891032492881394870015857833461774665127576735762168646055640425272417536176645618512646528750*x_1*x_2^2+25750232448394995268430927181222352578185992367545869089424325880366971306752624218951542480467823173562795799448047362769102924669565457909072972937211762739274400171437434998410531491542191104359359381823781534590508581077605762955738935814963792369823425848941684919815188951852205278443533774487072827864017665373650721833183803849329358623842552966789186265325900210005404520509877051886197079895979021791881865863579358285219195087532450559183184945673206723415721154972185169529953519597516512507794431984803739875*x_2^3-26800302463650208567411691374384483934212632607202016416708892291874236524223013937256890017009140573871649796232797180675734381533627863055164279765362344005894063552260979572692302919883207920328525838613355561352769712740072332782161737461256066857697568611187364520765647257891538126264105686676856545177988468333769497553666422530190674246328387016617303769246626084679925437885481637835900037160484807509289030327114888321691451025831468723172161033278151581391110486288468659768859616878281724393669091178474703150*x_0^2*x_3+245461847310634787772109278008444220040513536597563373086190301002451273645837091050586944048786430320225665038807172178735110524470343506509730369894655443047944911921299283321554093185433497717065741479558167340188661445168013255733381254437589703463021960052739364571965049450611669985713474213147597672506826790347586667859465398091900745699399267152912508841379818998013874780505547237769772650821169077152113660700107266380249545402457989560364386407916468570780047343766716930412733606631947196052224014393910607170*x_0*x_1*x_3-560641700631236048608697820843693454589501486994263023895460235300303029098987213680108652374051426198149200503755754359301511322450207743749027808410921619917033923580340658466096338263779271711028018871112050492560245643526500858605549386029326081721609492936856153606538308936628446279791608820066084263871311671948667381342890230439407813123129037910507835525573752024210486411289229489603392039840023321742196585069897075860223252720882089390323468154091041110182497419483636897496029539566074355952857573253768845960*x_1^2*x_3-250651863224765447218863284412161348783288152016916782043796295635472261836012400873760331405957898037180964498366862268495129094749159078894099727739691700172187109334300554676570136565933087008832211000216400755901093087254893846693002065544902622192262410704446165047678636196635379153697674901847441985834480710498630191096281628052066781293819008759427106107390043116811725869866449810894532814271829843129556519722340030138607924169461337473037313631388869578112408068412199322784312790358631953844376215773456868285*x_0*x_2*x_3+1148385271037656798682544551401925399368397530461426481637329121967133440001603038798531670195604097168672521915825054632562513435938828358146919713801975398206352401001023779624961253192070680627668703236081101583427012132645225293288047297875300163765371613727663543460339046171984823444586038055477531021286755222659861746474314117961815047504371119301129311683893352676079938817627947357891959024470809699970383574580246653215814679981408583269491005012757818192980406318455077312639522120782149074670524298207403823200*x_1*x_2*x_3-592285927695972631414226132011504774360182384967018212412862170494702595604256008248371221794817287256986928656056493415338452041050684907590679547332921254186536312811635916096983119473824959984650220569325888867313613590748841352720291970450815444667011365610984125870621856410194327900262750486102420553958609656477408824625713594061764814401174135406537712802788504304858894406813454532122754616888254574287299558811379512001313096797362552224053148412872169573580213305824382736285051251072241776944606696117661275755*x_2^2*x_3+40670487710016786173731339183246175160842796344334714982707135950994697605541347817058796143351141317195348166479102027686312640406881655076083100625245619124486772739109337184852217118104337921813526371628977089786178678281621351735666495179173303273500296544435110289720627213062228529082255102585350335001933357602468711621682353840028641733228139826373988170465107377730608842437910767231040171295035922966316778188656029041620660202109871580226657238433013541413393285315907969621536329572970945842205138940165594010*x_0*x_3^2-185297083388742747954688311243145975250471011864363026011928299027661676568039387886337243792922580748594682829765612235744630181657754942870851830428059322566254382708059929844262705726298258486946293178221185304324402421662164237938212253110559303234299425464107916181178210950209140624343104410493159474305862305131888646487835549457831259013282481230135712567768785458215964643204932033094058958604995313349592945809332102402476079353303717387341745536766278244369223449917978171814625271498651230209299890966251638448*x_1*x_3^2+189802650617958345011300714805180317790293852798437315372950143351181778750402245304200177001609574453092716626225857531091363095083945323529245635970100214330720924590769987589129294087340176026877948935743346123128051032510205792125749284787218709603236667467194141158246922344326788199688949466508110971244197023030502524041654027011684206638883910600901863625994154299310208426523355132480766950066236293193804831955786334352079198690484172484346612590310940439257887149104467225652907770397370514886364389942257248528*x_2*x_3^2-15248572289434901959031632304475357088215843533545513026064146258942946258092046770185639922432226391288482898381563720278933853828677504006736338021428088852210406536325485818735093586389105303903716324053030685174446997961404891742087375402061803207366747893738750497983211468299226572770040761174025288078603696191168463848839480339903080630506317181964618395592612529212299873618956971546211570626248961032662376874153144818666452260582249591059937363534317986386754120527682992804886816903298104726450432088161226584*x_3^3+24170541415004649325808099924639110137180912138626441661231502616060942757255808753642493794732680977955497590198165058849632571472870157178243482338051904614393510239720027871360433280581260213344803951410102788628334982107797488757232512197320235050075177504502633712169821259531688600202313845266699772078544563757307475980291364226420682946070291985853353616786876041609365415529597275898537623009406143627514196864098311804715106708503392271364670764790179960090824179698605030143347494345648603850166032506331753650*x_0^2*x_4-245422114415423002982700967991849118347190157743679512010780770862462713155264783862961158438206844940512388339140364876481279387889450655061594816690462912312105913370751466332013215077236871607961032342206698018212603256708536351402181695806256827534460991546267767390164185522760589070312772996566843936805333254452869547897216244188077333055714950351771133073439975528141394957430963886131874914656580836740428850819876703353451228396931514909311300767246410272975171451945232840319960525860622144179710860226097344620*x_0*x_1*x_4+604559365815734609033885576721095252747669357409155548107122473523078418969595013915621842716491656682815560022612444769680319215639190967911196207433768521859759255169663854080403352776572761848942339881307752230204594171129910047740818695202494484113846378111545688247553138377691302619027169570413401185337531835822355634882964417718546354777021847002993262778219982506160817841397908390436186818333234124741596821918835799785071584050475750788989628077112546226164826284561735587893936448494662251131751948658144699560*x_1^2*x_4+265365901051560062357333538182303600948990785217754532962051233418494411224146994441929429951069184890223283062278192168344215652520527049675700975878111342658616783018142069190433369324129867813113403214436394519793391326968268584284188102832033062001932581692176661207146499285345215958557149884797788763343851397667036211927887116594650247383306203876725098286814294246428060700152626205274515587170396381317706702242364199973826488984974891911182058736744291432014186647702093263506466129429991492631695667098485975735*x_0*x_2*x_4-1297859419087738611172451175937267344785741206738997155103430517805550686962711068738154100677040710635206311324039281556559026253036551007212869474465863142852763080150000236392003450160505261160502309745566455843876349175259213270553346432812760865065694318698436740062002897229012019427522237498165571747439158613499597932787889694391758200249702097783330675257379109085969549979211676207134419752839774788796689154729605149530632393685850517990595202667884103881462728254337729746041238354432979361527173151187838798000*x_1*x_2*x_4+696745170872838590479553832473815591542418368927843651552862311097095960014246082038275612984107831433513379364910035218621976986537200933146473687013198472995983154433321951149880119656233567248003423130280110439600410869963145506244426462219327789571778642198987069164718233557258676552284437212534244285254730246196552207138739047756527112968611471165380889158807931984013728917197970518537999776887266438490131586641156526367396811247346893542497231182745356560613864902670496962465207810521624782829131423574409914255*x_2^2*x_4-56402268606002399378117209013086000673778301918471592316662527201279514732441211541381255520474380229133101314132159644595657962838641821338994240819003387191895796478786740871570410664092420925410435789530697282084885869217363361844970347341375431719681611795013620271808178031969721030814212795369203486263283972215547015089003692937655262994934228460114441746628249948718380366213070624028643059568813511250981059491124411773113868133284596240902682543249155922953073658927893045237354477297240362900758253239442205220*x_0*x_3*x_4+274712385107715237853306412837046688345117244400451833910309572658895169878670916542301157109271951861001635743666942015630273225657169236159298324137580580723259390072117161563380138832513868306162416756536756790438820522363207861771642461205819008026296171961842507006296784222242311480851553795272210205520432241451815405934194503179036012656957233323690473711496307735004516996204143888876371365990146142358799189835922715431615959810242263414224537480041531504652375560558924489162891772900341191258805831626829345956*x_1*x_3*x_4-292328749710218294403564964573864999245547401425300096254875175825882790166434761102951510413543445960089428916104117235347789867262752573165209872777128983260564915122022892005342491568547804113650946908014664265864149060333695346325847304702636723545357203993948177239627782083394528984871793118491406846723901203219019460837546599601955000313944445230637853731169033068464681879068686431089073602439744962837156876488294144218848594524319978906342828166452795385069888070005747078582993453738639130230081185005272607256*x_2*x_3*x_4+29266099317321063544110344513296857701156595498243522316032599470304123469128617813113890505975029819663077933217526005493874740685495751917993663324397469522843233352874218023691126730342673576442018446370905948016656158851232997052709823243085934417022274612114256784041803529942914381529485143054062517463841789882241298028837297774017026417911036190033421495265270523218831420634986296288129522480746688086293778110346288194927053056857556305609929913737825243648790712402986680986033263832834607522054282825093258876*x_3^2*x_4+7780736063868271306500942837445492103808532583355926354257311471906471107656548216028346410693671954095636072091756658323928899874034869662454174416954516673454013955171192431179778329950063094753800961180522674473849043840364610418154717144189439672457180831953505856323975209989630886354678310066168922498912858264354972322832521942899033618855926844785283627384160426208943994605706095652993505038608591858528910496199097039824829378106627300046592580049011717701853502390769244983593200827447457267997959627325543910*x_0*x_4^2-38510381542580342742442735369953163949517064405018043105036377684987806378323764079796007703837877469799920625060722828741000635662096179551549102821047116040902091065606406030138695944633798438162987390459852407791536417511254173915108657097167260658770493913417860997200067947551505487661603807044733440279061312828612285994902613247019970453200097239827502978486628380175950919005841222936028120476882362842086723902248666517652605277216443470999095610833608279045361310483001518325588085226024040605910308830636607208*x_1*x_4^2+41653864975689579056806855712424898467828118228088459732917735892148685738255393466831344410314960564564840220807578025942516639599037416651096724184407624419330911030888400816396649554335115338680336630192770672028054253305339561588551606213696434377599626456916846604694384050717026525726881019598514842785596476929616148732146652858443662310781855479327276133268535652740874519041220507092822378550583125595056585192394106499489345884979517452390368511223556850179804570694762437102235699117122588186687818079329039478*x_2*x_4^2-8099573745049067017176042627283739617363725115321319328945229882950346340900859589433968162127602503599033744567815222852615168511033596167585522688187238599172948259691967597164388991342577797470693485234599188889704550456969812338111048848662315750118021310353466622714818064107630140373961532259029966715636326805320027292805081962603314917404252986953834100773150474825190412511834024793230738643582272472227747480458779445564680917603263846875981984960089870377416271625676204479449154970912784558063291280278396880*x_3*x_4^2+583365681061943570412954834391152851523465419752412299073873106805269130836229389788286499840939842762688408089283181054040158977035280076812734719055371129331480889812679280274662630440221578006243401140338263747796756908025967066955719509815875866653237022939718112484463959144618024636308043744742305023810227985421180224663980288032261254910420085478831475821520913237538885390790777505299917894421213213840613330537422308111143930617631612397879845595317520191530835173896625864809906673227717505001195330868790088*x_4^3+15099510497974824338823319527929767668313334195180221052888447420344291085731516243236911983637397534674831380225074292248518025608773800386651043035797587280431711718658497922654630878883454276722678840398275561450881560602971188599715591398494250717809668399148208068409581012070981429585913212234999772149411071673965530769828971260621699530809069852445646951993576783188353395635138817086055426305750377501578852551765330716198489832466669777471646999486293952316514094438193182800275359482334638431876365322214049100*x_0^2*x_5-117883409388583819912296062588884827428664878102859514907462945682904370408363353258559728036357654170442674076742122884452662192523546867227016500184021739163799910566122734302566807504496267665610268100641282183658116339233551555878391808601534104994809487070383152772031811512541300664888386683673393723090729575032923629927219762499131602113049119427016218472843088930807417799459508566117769352036710097243666451362881653663411684805170196677361091934149511379993212592066387247789677765689766113349431086746479702480*x_0*x_1*x_5+222234790338020056320721658649488516700212280317566649246770060161487136924337861899177995899384720258660170083899354619243766763542964517136687717533324169393491239424325481820452800744010391974251517312785015659838609991114818407019553776285543824393050779406545180913176910550601203961606818289116090860384297735751361004302770874199540911292128551436631402071762596440528080271967037814982711903915727332333248191812649054018328080431066908864966886968076318397204312793575083929183839620041372256010654318279886084840*x_1^2*x_5+98763914202143913833963227114107819325729470149902155559398111470142586187163598501165735575644314729482905666806910260083228407238613380911022625300940191701124739902457697919556883066944810418673215740725932322848358510801480946855369350717278789629171591904483521384043442983166077075944254609922518001996974316645187371288428964775449174389116819393553045423343590519888781128247399941520412919002043701353931154298747697774126752191545487280306629942880873021129558175952362265440970809770473745174964134702387100390*x_0*x_2*x_5-357044105024265975475070978204238109262895670484373901472866036464107962816744977683152548644918500966617374174628985077898240380439435226971575878988443435183592732966056830416316891555555478690014260815352098553747057260649040093623531311409618551827103867358882630783415619455054287270687812964024915663813375477126995770774058795057726306730707355631089789455148797071817489842165484376791787410465174383476807972792350608989211788575550721208808501538305617788241699161055308007764983143334866548554164907769223259300*x_1*x_2*x_5+142559503323309258988141614247934455174740600922728846005383249733034426862083071733545227440692768743059529387826568709232444151592405792597733927699681622831366231265022109046514488380751622009258598249639646099929523573135333618246410540141636293123067105510574734051418884350001235384685468121935411703310594992796888548735113648907509618759908267167900915642157452948195409465892850485661545203769660833708733971213125366649979551504779844066436119687880675450006771506668716561226048556919308476742712275632328068870*x_2^2*x_5-131035288768009118638795271504314884513691800846453261689338858901923660467623418690582677488321771692286617557748010170176973312729997817496959206699031581403831164697331796642876921087248446077955164183797736521307579182024847832548389435519850340843182034536191972858904340991905349345286070519438863681869731168990946592627427036915750438192287007625533616858712106774767952241817865954878474366393529437969843360784093475368885786242204328568187737594437662843904071576050488144002804719227878801637519344368120343800*x_0*x_3*x_5+584501268095266390429392227199365618869904532695667020822769158685974006910604200662691662122682664234706658232732926287705696928302999015532384116501925319017699026939409491034359674567116577508749239032303200168278274869813061943486310149534691121872273957893439843772211110471809671600336347885645588238226269355887398421995302670570661440451264838417777709657457399222289857557839899782305047056375790946053773626700527402263829851529266108145180458224475046978725193460098029862933211587562842784508737441083272058004*x_1*x_3*x_5-581563784833994772663415571414814043545706295589577809819495740813082872325355870644834125262513013056232797835771765000185526106537727368923678797416875911039829951531585258085225513499979446765170597144970749342688944906143311988723318311933576264812044533210646770526345980268361135273971035222914765841664679559062676691164316938311637600205275280569553204826115341231242961046118656483268375977288555105184045244752740687965407855708784339871271372647818448210961118821311867141037026243080986772657374352702189664984*x_2*x_3*x_5+90782945995662572393199592795005073236473915617968949987028549967698450370858317437608317189206342804665742947119249859755072641741057123064411723937587652849132118914666929449906339069399521038970106275283619879787822618159513811334759468351777609513214862464464263667805721482855988266622043571070260619659489000810038470864835830923482053423625141597976688302757061057577608949253186964982636772295042645829487217448396726594435145225938284008247112214101807148770185974864822628770917921526777968588777297218663966940*x_3^2*x_5+106633702594320636412434253905349697230192766617139013762311244669950373191210753286283956383545631008104826593632457238881411128317030138788734876252928069083679707665963056813626689322387374120227926018255540406312116153147803181247736633452555554356602526163554857410204822344522899009241301951373663314424831858016556051776968021715255881990790709905616535045102106421706298954554911227395037267175913865063457501440650574754064158990206711502145704270940282435692985048917442544926213489962765407962555310923434493300*x_0*x_4*x_5-518947532187859684668987648728608432958142348169722245577434648372859878294506307161357057853142891659246484460551276165813512169370463597731114709468030022100500659838080352052721904939072737941711338909250070974280238485987519988710087858251242039107927800660982879718167217527392665014404580902476334203952563159440983534835459044050936806052990332046886928248938034172444663437573713532391190468597181831508397092411235475569944342547808691579052624649987828550480911579861204234478413954717747597139742980189171307144*x_1*x_4*x_5+553964319429313756183774669466400128702466459639780826866702552138390480714339097518217215262583839018897173146607364983515988846617401161071627080979521609528835731699234992861252872126078843286188488642069012218270814706405680006042333893755417416982541631039034923256797570024703328526469687778454752884026800791693347907627635718766097390621290408885520619399243229916925669789921625037576750412355508509499259903576863710145882205096236478640488116525576038100635577430864608386808070691369071356558957029139991901534*x_2*x_4*x_5-118684699753173262397757759439525436748545074016521173500285496506172103297548719873848031639634040192208230879246680983318473665613806194557357271232865481981389437772337422695053112865841183955375967671497606620262394073310928840663244617275287127301975195223024071020106710659866586652282930356874204118498035209780874905748600253286670093976584647712279309923646309120322040990529106682846693514995350351921294747135324987653301857962174376683444483221916636242896375048417784549884848963381409519379236273290555365732*x_3*x_4*x_5+16014093942040333879578247983188311910138252877553731699312197300361004398672485214934352189982415151472540326955800418076781571091129158939601813936475211373465563514516986637752147006884056109413719882850331497533183797975992040901303338782140210628831505228970708610655302931041461759083254207561772502598106094206261008944622951442374823399503428286316073110877648715786897681928393095999570730291976741161847078701141205852679907698308923952640657239753026357009564313370437404787254062938639531644864975688665212212*x_4^2*x_5+48964106830871062986402966720870412741017719190700774629240173324651984735654692065148891682654668912434206638399522532240975230976440396588172459701705236385445413982509305546776492906994672624160386468396062473077590506433744373587717880144318920754446693021316999420708725039915576334713167816996357876762516758953482227288020980782427061397670524488147063580283007487090314029177761298761013047719215642447322553154868850813853977296260772554752188266634959875163687888801222100872047318929917342801446507728313221040*x_0*x_5^2-180339015964656115256668768517632058716286780075869819747210073952198611111161937293381114010976143447318921186993459784426326905128262610501427173867794489717346875439509598553049731337948651351560175114298079693808350434825399917709267017175909447679527156182504653814703254960559733156877523354275556119945170013275762570216734241476672346591638849992076910827562814579710941542684354373092805084470762821815250069692166296400255470581395526799252684530468569198512749370352287359218272941623901249128410086297409856048*x_1*x_5^2+141506666658005141583271241634619098536116025413597378421579744820493642586196142395039901149313404754830337097731837877709365362746383951910380042830548200854234382243986428319221925988175755668980838062343891070353468040842809956011481389720232361263718856020647199308943552063091295033021574537949386504284081436642953627433803135549457427188264396095217316094748887755930545977843155270426922971150056906884439368389140384920545214809833637243483988477378533341021593601400431874073186009449352724377529098381825098188*x_2*x_5^2-145858632655991660115182705740069675850489147430043211274867469133133535071561049072604066175735006390039112247237903966537969815868112615160416634510356065073644011484063648794208439469142776179564765496712525438808236857532472643684486534778265761621018565102041056730992687462065836703900031001335045985308196829201628522976310406871697163171090182795243289072743347656898923323543974623315414439920388071349322551899040848194378429532328534333544507408255800804901831085363340069946762256902251600658872165727961053168*x_3*x_5^2+110605478410919744470792525323907584076736460205289875936703255720165157049997833105771921584035125391033484503105727603229163329940516410966213377309343322013230791281923330084235787473286538127540324289601408408305221893038310548242964508625554122960862381731976333950060551848416459987263167494012564177410174978195956268787531637081742794140236581552572746309223811958957244075620896145882941228732262119920656205150798380374919439659065279273980476132903862915738284452476028756929266152713951450890250523539748874792*x_4*x_5^2+36609486746423242909355191951485342860495217617138107588443885203194670761348450101608452619859924959366153724393764829709474348213117348160435687324206642598578684539374703179441338075706654062282342410142030415695844844636680968632023720592557598611513822852136416666242696769496882592482744795430343577319067143677243275552276320319865467856587065978679819000288610923237531703974309345428200649690332809017762005280327938173425018570045415448227212473455124801873732045017370221615695480965334744174459858307183661408*x_5^3+50811975060319916312802473045049402447989619183079708130876629526409630514504789894886287815293132393278225120553062788755282512004473623615649765242188584600483157123545843937977316835881827098639866422491432390623042177366429669031804739595224570192468154750039857617133499295659757148731078524327173185414006382644153806383543580184230376618692650614982199963499211537537352051438115711109043924225009664711875751058815002671925716364978190639691867596789748007899106645716674288790612241433428290511941309039025317500*x_0^2*x_6-444906506380774090346280947394853036424369835744576162512022115450909360694661396939781367768863590523023290096047350663555847508856441109888812540111864969561872182997246947326417249534448176500869729147315956777205270678974230588820593459003454260090510104329545448381963526139442688229300526577623146930921683809991154914940448917887476811359973145820156372526699164279293402534123829418996869895272329271649479624735579341004276216954122849987171510268597540977766022146700249953344972536018527678183349384038773484000*x_0*x_1*x_6+972504307814162825192287384988450584296238095500664011810907230702231377103382893199968531613042411518055233580271447849614075474049271177801269766536455136173631035859505027466452703876354621740368697900803268183179660401008880039599508795070352659012351134241956972464308459643682965237768589096264130539513307316422240515287004605507938773520611758960875308394308773666043120563663711830570425461585392035163588005761856367183744948431436363325788752112584967651846795020396499756197403265780471288107039805454894071400*x_1^2*x_6+427215838076503141257307656889556163787055887571194655560555663515185107254833665273261177336360302294557658592670549522163390143338112019069797308423554100882910033105301758324760259153054136462412448756986951308341872123321425827414567048681093935944922879678816833345922932912369610723364316675534651660153959660245020389919286826522337704943908858768219264569168443833931939066159938722667440663482016390159412857248517015486860481704742611201778000973240207377380555831609576343419694311113197448411258112250717797850*x_0*x_2*x_6-1861412813347248994506432257255708820844613275233713265253706926585973141395399214771640383307117548811453419146136526939938381445301648508969124248202379375384454488681015760758067880437351934214249623660316142829977783036636029277234647753106242542359401744327691918031871041279502353049758886937663636772086882940482268593306826560637487699886880871946673688284687808803061050164916698157677512538782259988889950038862088417799920086872035251454468939286624531988095090201869527556481392839555127930229899883266857613500*x_1*x_2*x_6+878450363105330129579934871613939633729202698547379906440628969130046602847928203969419997994277325451743894949340843427257926313876863937031998880517532274637533428745848420239240366359702346297147925901823250674932431472485459051089826460808635114417919982773360140748875696979296853456957474972644961272749217037560161596031429675900923248743462958219699667422930668958934183422993828523480012074711514446930432703734583603713944013359417153619002580789804515931377371401261096906179315137953210771191717956529521358850*x_2^2*x_6+11320744962629762624044159741537903964821553644907675120014222060396887438195504201353914927963450247709815235910696174946138456588979914250508593041776859823714916113406348178471463389450844226616535256494461883520116870095199535033344749370249789056306572892047101175565122601976094100464423737721557289041919560019214613039309540240581741023984236841487831133701670790726701588676440839140423597213075245216662722216446884582332302656876088648047488559626194416053066312911172590666709285854974346072648234166224668640*x_0*x_3*x_6-67916175397740404748759124708066719586439366720461180468029655150957769082135768198148135216463147172542225183966479561980709398280697834183448776637973385777673398799937399823511757350541360261527898472314890191034908255191847067297120099656261142447578547649543768553859190749197505296326688333816892267622911997309982495412123804469527632503711115009894110136821729666896877561369203595556189051655362553256945138033653103671433091010138582768852119496689400527722576404121058315359179414816322869740742534769947453060*x_1*x_3*x_6+91108830167522071485358578006914603776872645708080471062725432994357292589168725163528633939549280098393363645150199843826987547788685175483563309344035647543574096072351803039991444228577054999731640040851957019712306177885181724319457162138649008292884299654292828232017884472030404977093717576746532108435611217287494225701588823368128183005352981097282092429300305280299881554817943281312197724081131187092899763523344302210711360427541242571077139324440065373197525724388159168652559853253294297641101276136954582120*x_2*x_3*x_6-37894245295373507367060036281996993682482264189521435278636419841107942925974832748858891626101892400307980209105134145836965367630248266026986620435704178288928130083158170393471957868474348184240536052447646525155741128753172258355559670494981114842983867804377658917522962645393591376003064921062704285365726115988848168891838927477794301053073533809612034251659084826200868414794539506183943527566686552724510705693872396390630824283842954444711691351742589924268063539364769416536912519740409042962968309447032593372*x_3^2*x_6-88588966026808897277120972048877486351513949068603384317310082847589662533514347895973592346954343289525716505160835839293094382668183882228958293040901653708759776028083470662387636763567212636035700077040079919899671666341725381683560703756761302773954786402752033632077808402548893114222121835164860246722863293697914998170166694614528412945833788734006200316863447497109161109903073384574412268568807277002020827541399517469831204975498878173129582132936598786949489988155407854171244851146918755620846805016914259440*x_0*x_4*x_6+439779367155250341494177662932571812097662403143640581781474312905508538766387742491187358678440295217801466591659170028849728133521311119499755254500570141580771809853118574277741064800042308190419156603465530948597476476627542509470446368990374453832226941328304788894525856341845061200018550868782267607225945932509267181834542127703667061506980648450044106710845778119491853785669571186041396218132034290238094631578414701452356728918527953179514160640415535708440346048965586128274170423339348746819582040676099642360*x_1*x_4*x_6-478312128548484250114221256194462149357089187661922052097858298272682510180276995147048782174638683351139752276285305772288779743273628061132186241034371716675800643257476177308138798675770746042418524994455571067339690986337081504933645756900687539480167941577226259423506577764549005424583702760147510210059873197989967970965270705846137789856020095974267570508007372045589402440996774000035145206001577886836977259353965187251893735505363842126775409311943158182763216595635401231460300537428949513098867173411506786870*x_2*x_4*x_6+100296760529723076278907957613910657988634127814637044842065128706910850269100606308126095829485986722195613716341947807121282490459080912687409858979774190591848975404253172817438448081456220227476361514198183357790307665375364197570076300322238823909899198324180666693890239856737309305759867443795660376531398799885316335459968529959691960966653721143812254489735736694013941295079913754872422190545374000917362898967028157213495660612922745439691209483701599927332021581413305437963404172187530439751093812915578011124*x_3*x_4*x_6-15388148813706384507914385023637292649285573279148235949876285810746026318891379715065046137277638521615625764232023604894212717423310523467794746186659169228740643012697583338058621383071683054764254887824505025545364200040922133030957153533816508709065536431437872099161539791284886464406752285824943338590975866516969921031769476332020551101772171615975404913176598209433084682937921173558399614224054846729123251820400600763826951854821566652676935550925591890725135511278179344659409725479584132355277778443869262852*x_4^2*x_6+147275585572124427861560791620101461419268239106208054471463039469911468196457010104697437528601147355388297075201343961255411031186848134662082217199395521997963882697287964824770411249491841385935340642618147258432900629325800436500626788438094181676845731787224338278892331626209669690400371695196616036258600476750215540878875480847956128413328032294886011613861013211274315915060908917135574500420778940981754346811404210328662002384185335681521105782917392236946768617903245141328633111468309365621374369383696798040*x_0*x_5*x_6-670718300095950079537372607409340091353676953080112836712751858530706798091788803038567061295908334027359058672355173165855047850681536073853134197075617115776956724637253003191175277811498169277624522520194952133631377743789109647055946195178869421656109872419392000016430965728764100574839019266825014851042839081115746662478040724655937683856918878761748605842433575469191731128755406274173603801842008302897224442041665877803740353645720404769932747536198822415645012690640544560859986945906525598540013422692645718960*x_1*x_5*x_6+664588363180538798566256891565730673312653848811649429861178555361823860008056408750411030194310294605559753058834105014466988288826873720390529857128447435112251633993325405776614915487318947295710505349885026916904533991680653410087035859156654470396305138773991660683713428619924349507544801255877793408712780010316574372071219976318738109094921350824141506545449517943631083051121127239348408754001605319322838171298684205466283053590243682681508879627727377600034282787477555896612612117579013294025757162250685843720*x_2*x_5*x_6+67113120990856130877190405487392884110711911543349394086739745484548993897596485770409792807672820116523900892743353704419986473531757760614683721676845485890396569197906914904600655162167142506806331895477011128594307958654644857084116485971914059050637953159269998460824318399761501408164070688799575017393081102902196641531708562806413186472495721491692055769940937688810647254255644422695314249846530103623691249731476788973423695440332388961656874716966691980778838602797516820927381949730103955701444640715525421216*x_3*x_5*x_6-189813220911257619233667551128790744548295498028745180070900762071544012753376615077999240472390131766100863809186816982256876109312297233517594823921232351778721388074254413954144361537271553766653599692472284325938019908627076322058557242519544227428980249066320386786897220664610393678620328414649537177127049462392701932113683992082028991189500046305443027114588733691600259527995930543558440263373685098844587617073972573372757730717743196050643301037826365875955371490575823104497077383658826173129309847026339362336*x_4*x_5*x_6+111931665055563992647281278675547697943261090804124130441747367788652767486272103349395554315555249904447925483572365881166203044370605091407297983291239099023779086854034483652956035559671208770583547289186381008045291569417483874036785081776062368773825654023837908334217333753431882090826329804211333917369737761191877763179879694030028547270790278274866570992253683654793950140716011836200016056791757281674962172279577220069816050452499438095463984906173001986897624310928001947878179513351508670965030326725098374688*x_5^2*x_6-150440196582643630499384166613682799812211414208582509393471211115077733816572503960722850037283774380849112301241373191722650061270560806818647962168007062490179627908181885326911782430413337929094760863199041346400290453707137298952628769509750376285808408390778541096767487256598698818191803804651298003545726444445582331936154144372034814536622985077966563452696250003941650578967917905658338359147492794553083679407353627162611166302892938704247685897958667628399882074923398422017437942183994131207725469008472982200*x_0*x_6^2+663495528730580334109194450536696316533242477010322189276473188685731449520213012922258220003468705944106069862293157687040151200206627032858320174344503713849546464264840739533024727766739980732716312005978634405372818226497403039049172827190382167795052322321112503856802605277762183988338437881363403413648687030152644476311484055036078785635581212324424217117395068960319184199713241672426463222615606083678104635209640457087670325737377834865194099933440841067464612077344208668406134481366988189261279981541170124000*x_1*x_6^2-638173283738963912012986451308037422351124402347808307655976564762644272794142732111930139978504406806023803072031555132261403170369354773244191522920810995243403086754640611148416147063583966083467523225353849282666778385600369286971911919950995874639074370849598655339840730560931961263083500660566687062510327069573092793352823967580436548495224847085480988495691403695475614851994654467501847196854260289110903275192864167867337002168372658228980979663382246165239718682318318003111320462618665221587337873247875983300*x_2*x_6^2+39487107321453139088934782789267369920305063941981270707791494504293712340222973058322361078746789054409112552586839801690403026102245388843185236925148153066491313870747968205606179382019916326363145156170729654499234556626256435843468631552828885710770694568185126056353677288369168028227588848106227666723449258004792255627234737706922162871683059197524770183505456267725141337854740089974482016019428925172125696393494793644918201944338892118808308330812809891546029677880309001263396124442398453587557352979738217840*x_3*x_6^2+81921966801096932891713064522254012538791189387808187567334426060583641961847862525535469841516421227893589524175047700711800569779535034967953260640829389223581623480342111805287809363130376444468029990181298485359073075716450569853272871007438755935855332941270286560360254105495596064455402986481162868809959148448513038081553369603062478952366953150236102142272613719189573067033063114230443970732185540607801273909624288901110487837932722053198107028227304196199135900078624500363445963361632641662493100200911263960*x_4*x_6^2-254764560168658678720344741004083363590766008687457523098226031282314300842261315761260991441131700496878352059365917334252615427900471331923021049984351277839534189588989931916890755046326835829860015882030924978155760143785643250406539949614656440599886407808174237436259555441197731536102577147392087091847805826780336882746899091705063341407874281850475366386437107708341064526059859807562875557227282635480185989794446148144336566719731985283496359113706351280148234729132340244331124338818224609948976374673481648160*x_5*x_6^2+114348299672435706709161466742060413677303211438695788097196075243359223979344931105954081369227781786167271825573048690577181454220262000904660458963734704140576734750369855606423956645608460836993492361631655850640733910605661183669808803571713943636449916864204891724913983494185018460124091664604247588849311704782412134084640968117105935034024308687557037819967478963049194444157352810808307310154466357608448079700193493255640049385056412612866571401958854956458239789214622636908316802716231487601414632361449946400*x_6^3,
   53732001414641813386532385143299691857091618576987380960136095823222317765152765489001998478742602468741419660560476854493743858488468515250180666558655549202327473637795629424839102205845512124671869378482109894152354129333525227190727944671570086003093255033862986903250560545197085626922681227270989011301566072928144837380393863699388218743623107959089705025830535917382234635726599278186118269436876806452773118663742368376698899935994104291726494267298920412359935378599920261425466393742672794884729315358794850*x_0^2*x_1-110234407119659343289874420948337310763988772935139497492237597594011201295965178706025357786351201496702748606134733377313832403655021420571802507715378306596879914935864128769278305869069804914279026800164718955842886302534801698231041982839143843977043675029172004637764769320465809002271182374576842844991376132890033142037233413463938634838429233619204695527058471458537428875303882937216574184643068534733480333490789837267705113697244208062398161771481067653646905353098389793174077305118956447124227529439751700*x_0*x_2^2-1187050249300470110753090513076742747588316031175910392228430579863779821343677279211119191149906110113876445632263411986255779171050826283727302115268247584675161598645138853531847343792935097600578557812895409211976095973863981647143461383190582573189084875959590301712013730496864431511261644211205043876128484226523790922305732923594061072092306556029764018160645353757891775682487600264556113754469528161733145479376435499286206387312293934585406709997743519966148548033455402221491533944875923975031917850537627500*x_1*x_2^2+1128563335571448613648433302102276701373338169379942296426595931849103288505644870301142199072268548333883855067626371970820087748161368492549771558190733426169342556759872329243060152350176751583112467893991664567120995909326314736569747471655002115211816304507387609152068403973085292757104171933949239115021731803763327127134842927117560098079155529349054661751378819562979073662201594812991421269107460940991571226499559897587843522353112020634975426405293358603421654332479624894264210741043098986318069416945229750*x_2^3-2502507932862791823682236200472427140072870355166389692754337356666616104428642220150223374979693412473653573716968859759036384606750927151097371499691168130253851716220449297129799068472703965596315532753580380089458445252991883661567976905185535864503838307951361837003447486516213833886785246213388101351856943036361073564655280842125924093173243925335389795487018859345659546672919899826778016980307116872352260227511559605577362186471297622068228784340197790710284628057102368585155765391107860624690153522077561100*x_0^2*x_3+23661407895419181318401524301963051646914105101463104670371262063384047061916179286165116976207100885566416812163710710710883740812632710707026318719770458442506579643248248846491795244973112956802967968427735909042187465967335198570503561182789465202724419330953770883270004394054326123654129526234646580634655710567689054756748752630034036701461798551474286053672399944899822779261163535004530318149428396357534078078521239498113407186317068168895034553644060368484844561166712105243003210677829023553410489015110849660*x_0*x_1*x_3-55609618420860050079986588009135535715922286607070389655503297165272106242352051506733961967704666637949961835341555651332082471132899341102040337235579018670720692120793651981079869592329316897783362229108416926240596873109716356020011457157857294391529846677823258236363893943985885362539241591147658483316205942985011110264308415459528731578669271675851984249813128434780874382578654139585361408283075702232693936950111119649662554860001465228526739814435385001807192123980336050060017783897869059770075808800324748620*x_1^2*x_3-23907453804276040597518379745514248429159477756241327986721974047909040457846051924827238860702647996779256526466457656362810942105414365194739948390828031921393953087080038251970544231272215950807593316473034395053268843488856331790219335157514382244550453541093751350917572410196531341416065075091026684187008262693397384006500198232361395157936233014232945040967757036488546546328187926169517919107934392809201081813998997738877546659094540815859944142573801338147471270979957770520443832826286547010297363971133187920*x_0*x_2*x_3+112719616540447562058062127183102720107288410550185744464616868372308076559657859652697956927892560703184417306064887253067689395297879470172410114022820667152637666058557311508477510436705955940677110517928930384665908671892003739926645489794861280434632890505707688486964944270480826693101778924126256391043480092922505843754251637016914691556185959332046340908485639150824357364734839592818234036897309615462641208390962915422202604704611762882119492089134901428871956418361723518576910167208218332671194733601059916270*x_1*x_2*x_3-57251170104762310279820669292579064255930476397651541882757303906812414882284304193741750787668332967597511163295428326914596942078210012922578398936041326270321371345272643754306505947880430876894164375224464354219139666354286290484055512739913374785984694355816003627167691965117708450966525850423225161439203206839292176511988449685365236638822671696714627847321897502963264075624476703429786905676384655578182513890106128591922194828729389988528067479591012982555733802929231107017161783632722332810249192440136599380*x_2^2*x_3+3799439755582053955750022004957339467174194517460385797201751088552587876611533504562697924581068792226122718742806660758397304717116596521853251784368864057765035481190240187510279012287862129501798943295491841855967577434226498352220763164360429247430794307744742474761758814882206671147192787179752308199205092578197571955972554622585484010357050739424165167277504807925213142077503509302825405054134054003252274840225986592492560639851643460034414101589193179233518586694386919334030571881115756570868808520647031840*x_0*x_3^2-17836636717113441053736855263388049568614594867893000048442887188911915059561234948267761827401252999981364106887299514465988868444091602522709807217145764257308092926140076051658977494823419219866892209498251397431704913235299579117898298856866376063688133061578729364951848345802706112473143042535600130673799096295742042921019438650582833890835019465060909134820957376681838065150206219756716753553021409989128688559140899713416716047580543530737865559269166600567305824461172012448098134083737694101276213642409437020*x_1*x_3^2+18069485179974862710287299570600311455670068665490517136880442680887518051762338473503878560823633372448441889235322435120677289716390419042452564181837502103256977081703387673269456405107896721047084686579603990267057467064135085634787590333679486421565296937669647852975888084774937391590185406196720917195502637936972748110748233070472399133027873415743841088946000673656265279985130388138339085482237184275800433416316759189996619918197413380103038319663566544285888052165440301336330608423967963554659952975149912362*x_2*x_3^2-1422666033965082800720629644573082537983445666072387393435879973965025616442541383745134187278264684813357236258873340704407499010583340956469658617132050217986727497152660612147178105299942614239993360437951020140600863730101620818067836868727335778719406350264694206940072121666956041222870367543312705626936380536784123970745277313550718915699658139785322179336673394106468645332814168551261040635818616670660694723479571823794484261252585940422630870489169783799336240865749006754954043893243471649238240073420805216*x_3^3+2911842244652943872130894194665828017401923748028430863045964514608410180851108398504799620619050281158636050559454271111633995038722315499644392646005902149808586985016912499834141220186206921243411362228499070120055936873242152134225789991430215171027905927133995319795955546023822565089172946793082301451741271353880828448414412638066479111961520060093723461927683313754973639855697097758282758249149416625443100626715555350423324661143547517736341168391179259953120396590042860570347877727912880640676082518942985050*x_0^2*x_4-31213972161176469042540048459592037476591832777234217842905988860352808563856819951052664605565207091053164320114060604445944316966035526913384826323785750904414082869879265231858472043354463819185629265459380317464188768857005534248842894896294646687990264315454948024248613879978046610142564102397118928688807114834916274031433656217568205952322215128723699385226837528772538628342145131375754293817835718011368937912497383585638644339622796841295947624025690956454939182549081143620640077208035517071038346341725252910*x_0*x_1*x_4+79868610356935613446158993445064612465546747180946769298887601175019173697912261227230749014106066602545936077105330384408605283123317614848433991856836059104262417481867651000791957898306907349250326246869819930310875163582833542387427493214688085524162372265443979362854729380051421777909203112452516667830277398581534989772429215490280914465780048285571529207711331609271068543705504764465524732503895749768139500803538521010480889995422112136719188820367434532865309248274681489548001537292702055363180805778211639520*x_1^2*x_4+34140130796438524094111161652765854018212249635878706010970441551385595638974242270573931533782802979059263316145188537578369452089122891527280231002535818589949631959929844747210979526444122694377659775573381193233541085063286714494623040366962522468210764003203757224703505090835257536250535160827307968998074108813746670524153514791084853950083753795659856324645272887120397128606086715972503003231951071537793465938263541041941498885092981635643943774297867208195963046759117510974858320911561801562852295075822820045*x_0*x_2*x_4-172901984215438025764593519533209689451988249605116165873736752207877836505260747673171115204267716098185350538214164998237797655897802941826364691821073893861482011811852882442212454650139458699710959060685343017848281589644165762671229889861775332988484519764116311474595488140807015781840100090580117351499380627567427642531298083397293803183505895728908171816252724286400133108014945001555977632588560660473328960317626902095407984889514982629697854733489159419769579350651333140763091051787956247191362675268075552270*x_1*x_2*x_4+93488226156458879044773629046877417600543688690937007997905528035946552214860479492471859779766406836505652205215924089344219482131737439727742254835319031669665742622399402609419734539667019020149037307612439701564296790454819351307630741646763158840477657175035564762655166839904697812712009322169967331664124846942728226786661393374644070267968125455772922787861475177160786230547414640766655693864162137172090970374407674488770782158532912319663117457510300758279445151303631388647578898750373746538411662172453947605*x_2^2*x_4-7300350576901232312694025761821893757827259075390398417845786082580727262270647054291424076980487099744714041684401704690505017534766256967885958719481563443544161042314384060431965025896496024673644577129112405512112100937950494824769574815327595559944500580875575935642473662963453625029893259684986837846631169498313791508632017268494464303762243571446071074505263388265046908001476691935627091992161824601551769395930285786919707652515650438573536657467622232352349274524040584986722412104123939956184038433208334290*x_0*x_3*x_4+36700253873928094155227488152994098061345675585690874964636999122692961109781544076980115751790125937602770808331300007792844224806965322555380655719655291632509563394426124074270188721825538845539675903443350491283483669438591513489965841482874390510886268287647547025335971119661543501417212478865212506360299151316511591484639170022036463624406955344930700280268802700346740531949470403180261806810276145014906188564773532819597309514071573839728900894419736402327286200649318562902944671743503620922105982619792733660*x_1*x_3*x_4-39325718948230276137381018391139190161760991224581139357973856636157901106375586194439349698602280914219357201364420196638591891728599455780747066960792407347672590888706592558234901294890027927867876346133444711555895660554842233814982118460286689579642309819342308534909557449171288892373447013154132445906511546433833736069173580612521667784372609663443727385882876253288549088026980043760171435382812146550759068595002557136171150568122918242484756519606668737105239849993092017310000994474089220151080355270346140874*x_2*x_3*x_4+3936826839327156982920767630265445250915047958788894489194241783903818315837492404667342154252991157916790529616309861272658292888749312892012409441579742683213952710395376170912761431468690679430849219653882151719705916977160599996767037992517166862765987921116267511569940558838658725151182550568509655803501888151650738083085575748688610490265450938552185922121361062963507486001859419616849667910029843158336418976907900639510761151050870494953482953727296852303644901476018676917980812739643529173397979821074897388*x_3^2*x_4+968546908420414312349522843062368462121643745297458955157117674517439030081732462534066728450135015277269449074194537985926068072289780221678204781384015200985910593127641487919189959826065846028562417241873437388135143134251814221994667625681131157037003591525647401265534775093289408338456387590824292092447476307544656918755304303431761970182437857460819758717433914930880599854065091926620893818261652851662211571099893926841375563423686167664743000563641215987258256459076664391196473485477318309099478633582068650*x_0*x_4^2-5032996226606694748159542796644496414135316663324328623497032524326740733422031995442774868352618994812720380258969961087722181180304497487103256012318858195960650914289800787263974702569302982993918116708823512635725058969055395794235765035135400523476873096320330198511977568881298113259126801557412792618602160638006504928713124510865241612532027114589437069850298469838947758938206317909114748282926353397485037341451413161194779606396392172351857852358478767174704949385691581171071721244797230333195136927647832940*x_1*x_4^2+5504237412900621592139571702031439127195472984735956069868342520779757696410221298934116309776167710071120716879368052357906555935228137499321871861195340120583727041953640481836236143020245321279905348742466527433091105383320104160195387919902941215785439329660733163540470221792006535176510355700147640552034138839713985599807173357080598002644144596628105946893230953932650310525294768308033563473964530854871046154276698076883023378994950679541308776036944272210815877105372698093855706213199202258614515847082765662*x_2*x_4^2-1096464384101370865567368475041060820081148780508398233860598583754576290279567549745879028118683445388573452935567368824023444548748944005808798234267250856881956029720917508341142782018174731145991925359914937619160395607106714482552695673293488859078938672982540764712392106660400145557896466769706872132128223525993109858269411976812722786442900867514638780369654514925272932170369698257849031328428646354780629772711386771655176068683743643360206415001000500930890968917039284881796620088107740355885505881418358488*x_3*x_4^2+74426367393949655174947989871442530973282354798014943490259959398443023689548382690703708208766599975470186277359958369734733461172023324360375618340029475976733703289321828820634919765892151954426591755562980981885524290851356381041756022964090821576778615704023799576110525100725616932286443509327200018174548115828260354866535382507083051195207342887158850226437676886194036230254640163436608629695079330917404645649624519274896218572363620204483683084346793805154918642582740592225513466115882653095647736489469816*x_4^3+309391219824606952254439756590736042114937870291771895346877900864716224951216057781239381062206273600317713113169456402650912229016000015005388227697048697343421743335170780572885231591900113894913440035303953291319405090391059599583529805691216749352004542941657421934163557874322024259888878252687622812463744414580785910146756206508977203779460376564619957094064875315682308820060640246366475774511247404629765485819574440914166508756925414041041096332880256136393786628978071794133031628977942715425184022268617500*x_0^2*x_5-1103048239946951385472627764396351864462924058819732651622887039779753260531351627492709664962137836288228828780648855751289996394188034324397675270879175668354450526756617345737930726545878376121980872836561328384245015063089443705273964788434457123048480980825001733547680740851306804287973730961989733285890804625583797773701296880666689907422211958009828465522883599947942462872025545098253942759878527330414441497038542749117170574668078497737475396474345551708760018836464304480789694125582338234504683886471230740*x_0*x_1*x_5-1614186588582452822045996624398961833483603408482524148604134342931371468432731531671991901844063336045336142782036086610294618747290657817890712724797253663440146021842855016245792131842835766073358105724046488377257692649240050265792339545794213870629550333212403496016292448709376216925946204393894772409607973012226386729314513845531566752732758511278093632146253096773273908354548728970017912913294911910280810632722829426912176677173447040291866982279565412061482122722173991273273536151341782602190333883925512920*x_1^2*x_5-1558118807224278174179348870798366020391927070227217716025512895239500526438616138153664723283638515847078624448054595645710558763667385446968986753528720989804943507527133362910093515381270102983700233241716850981219924494393146824982624894766229801131558128398553039457328947819220925209563973510330685460652249093710745089799320190907087967737270556187891065116191218438530154899395724032931923496086563809166904806370920690128068082117405512591314525512934794709689481880427727130606573888493358427623304869730074870*x_0*x_2*x_5+15797543378686946022504219598579661267722328171692963056496787316954520854635785545290989222380328584376995993419538871639699951088209864230483673335403766580576448277894375417824544260203386186579237545013428256747068016052120874564898285384481922650587287378044116820042165140861127500158175084284233716470086715440779387664220162859718208321415165568778119218156578496688565188013091666318107786089809664597123529215198207444064850399564189198992913998394200057639411142078716810938882685595339280957828695252743552920*x_1*x_2*x_5-14001830485228696502355167616654781665609842180014191146575222832991629982472832886236194734077255896710200956480321193044786764420940087091049566197120014533212941645715111572576344121826987116966102176203431945710526839983188543956652152796754045795665119455299332384556569897753477591722560942524547449229709379682060881286302216164120253728103744081012206209137162893857415234036055529301285637968492569942902913044636476921995044419047660357232642706272949613127665585659945321031109116659619153657508709958199560180*x_2^2*x_5-10891563770142643073431906962402548601027968838760180038390381903087985088421330360516185261431031844402966349585708680937445859412389804982376202502886340681656057210907971752958820603353783724711795288621985394062154150230407935188845712803274429268506177894139481162425183059618753603894028723816191158596838368635043251603573393044624043395875152059551617661746808986598303001694664587981833864070321495741870168677394830648132018087450671174916481333882044663357890367721072940875754218108110346797460407705286138740*x_0*x_3*x_5+49913765237589865696673425125147390274629117274240897675414243668023356333371633425467992675843136507622007732561847112308135401000612246805940095998134146966820349610154607908000951499619504307624447563886069940161270736410401964548210403143669517525896991539321579330812343222790061687864841334787615237469389029028371348213179845705945954992470177207727442436303585562881831556815955889954708193816900916764749110792040262473766523759905049467203452786739648165015461499030445165692552046926408405300988804039315118520*x_1*x_3*x_5-48426987028072548903994877279544697461157481410205227637320786807975981581997324103341876559379004266753916094975073683099183088635423778486883715922001503074643740395138520763971759515802293709522245416904690921315507137766089268428993135557641595204735094594969659392204968759384799278675888800725959654175144609919328955243782327310051627474456444132614536835633713580852398434944526818733748049695136090530393672018617142406661108914836431326864690452031153064342633211378457570568252375976252575532174683311893587446*x_2*x_3*x_5+8061430235306489230908972932946619452867717445488269557495204227882619807636480998439570040350897899858147119313932620129452854767043260074922239752094885588275275547161673584868937794857692861018566708124789256846587236654669652291618177002696947080691310705530200910224742203400440024114093233436496859556553808760915383165519895671178253739743153166242718977795326556295541510229841066467378049453438002362746647240614010152592350680554594422220508098076736080719931528828394564066468033636825076123109230418164833612*x_3^2*x_5+13158016971629210398760447006195205942191654215937168744011815386627815622493831261752406289708230411202733884252248281659432331118060501979561011973705334234179870949751116069931667807783891119762075837805016794667018184105496823262612911190335466916107893503241534487057285564867368288670662088301229241763660858348958869994946958343378133628867803016560534966531227374903816908987778316339670031994355212739836786111478296103921426611045484290528606587940648318367793257905350264105272965942695919622469056511345211130*x_0*x_4*x_5-66748321624441950405060139527440623669748832520463512936295701072332357336809427223487039808029674673716768041596857847926944650245265571243219214237709749720201674447896029512746487935454584266831195654819017836221343655703200284526526519120975504837110467406236919336541206315525323407825499970842414049280167714413002152397436502059340927202851201975370557666434473302583946464180218547205311510879175552052202940269783956636492943709519215206305236885248338180722988024034291727282685891492081601571358164468043820300*x_1*x_4*x_5+71964845739988405484438954319125133337165804802042229169752817523039999516262950891790133575534062987984906361972590402480863400998031530519895463190151701032702721677899503258847423359625851137595492222781944932614934415964017524656752071766207626701385684134454499577936101660533547022805508224376705140397732502286200220671003054817729773902272377558195420648776822100756400029096725305971202444478740612129402932513672134578178008299960111986753700275712095229276715815240224352767737765930365171522287917388351982196*x_2*x_4*x_5-15524588439500226747752677056887133380652669468297016471938982187161806637571470832849978387706063826163083227744264342479189421524114899618473944158256073800317494177909157693402846203323061871848479981281997650632035895568849058141442153670645851759706178925281030394443156521270783205939639126503686972393844770478805995974949054666329667793565366443626313613041208521910216880992558925126355375406839441931225607112427521429798249485555458202525534030534394229267614899205824487532396204458593601139688812933257235444*x_3*x_4*x_5+2064499269525801793090597020364456857342391739621201508200125458475003959639869397452384791675885307941995805108848198952843810876603033460541381345787919743151365482406928444523127472296724245763595333318918392502510358881464529102314637410669930662638891886085229161364887458439480064242559082545486830423360751124026108290415664179087629018944242102618453975555170016207098793887778756271876924014748750560198882135739839388322514444229760758403769003237847490413724965448301550278100507447882137353462580263670057072*x_4^2*x_5+528792605296497701630300228844285998498616537179473969333212917620635528313220897465106940695677528180180703792951992233313633414671504851150097396021851286106407372622873801895091382522485268487704741721676113944377600494436733073215184321460443538677235150986972893628286645322615330403264720951650879028809099894079223985239471952713492461832123319004494348926516159229847220808359587208363608145792539755705158003890585454572789116889756531424667348911939423052584832172997764742994870214050356747549366416932994420*x_0*x_5^2+1750414600208205231707883138464753113870030716329516604195499209543768429075214365054122690169050269045532278072397724710735054898615475923443990608635959498890615654492042354725690832308884996807553708169563335276114502474583122564482804562982429786516482265425210077523530123437067964835367440668817415009399975141658260162562150473043459701081650373930076730567708391352766031430448359169583634017889027456404082091576918779182307040664911771506088010118761348290536100455162079286470471867184868906348317775021304440*x_1*x_5^2-7322419204820480714174013167946596500928913148375026441528808526530478853485029884772630909120250756330548273951996058511968661964611459772888423091263189080621606303018167637294489050430950367077297976409193006401476778349785094618423316485226032419253070037147545174857125944471485187750876450102597969146016235880186069483712062282516867514752234834090535272450352441259600138078269837514924054842635402857886946481488133330368455359925965832994772845583486391679622566666000872730108928827093598715854309823563839708*x_2*x_5^2-11164913922149956349792159224910768635232017234363847924112794077088166945873031441553381810517967150003257788502033174038270589696290847680287731484682369947368954822697511767276550407688586059555858808404340081426540111109262790007708585669106999855564496455931288321968650298156766970765199488261539160305344717995689153479175464838257729082285707581342640680426570712282678675116754196336824745402845969132895369942972958507922728680139894749636507760652866210059652191672598495656711681055884518647376540903849892588*x_3*x_5^2+13855633460944458122738988959472289283292960750813489400669450019297002169871864899997430805704938067915991815530900458460330093229377336245152548924996636298471725103061151101373519062709816310578782424275723723019963571100190673297222191117117374792960450753803598719977410699465565822382784298858723019895471927259022492598708878290853842185705168616267099239269318130846561918239140711174359604568899063319377417985395742360831181315366286060580510125340845271249593415265867557235107032346459068798571634296777920228*x_4*x_5^2-450487056524190938910159911420660704015832430330243068261855899063733150773613266289042204752992516462443441352994765867408585278499032275273745692412658589661188708863752932119371773537135443964363571048809455120228084120877403256369495142924771175532473656528171174213336555798144473119741312758745081144812806628342944917736414201526974457011867928408299068599800488374224522303391139846212177405304687461581101460444967650241126416074107071383168036695574511619768628400972364662042555162935104339801112245237378616*x_5^3+7926019111750126214854820211825596121510056788462882471155373131135661798192667238065904612684590097668769098283213141211311494192096364858005445270716945110615213311452581654024996095640212127932123589389026406855852388222209675380585874594977781324313214963091672801924091963748907975394729630986939345443188257137032240656227908033100369757864132325938471248435933186125763277766446570001278327959673247378182084034115848893755466838215331987952351594773339535707302403996809665043979285901787326350204648764620691300*x_0^2*x_6-69522268504138756066946424761399408522415014243432363696707689556686061475066783850568359046713836165854752941823150255964343398782624881676664426022734487854977281385308382052400354451100278973811577588636743556955798218641403446162467498955504793560056144895984234513685102597944279214576063711760077715132080979181838094272113598885987808910071782442442082849829950115061921338487213878022571707139756601195286528619556373611938928952299899908382525588367417871096698469465924672356246952326746849574630183464770747700*x_0*x_1*x_6+152306174738087195530330491379094582898275805368581645942624680470956242600842907725969984549704132685756335808906078307519690124852090058559692707254491715278821382184449545536891675375259658031692323152098959066437550075463602364752608761717969122355700992611385417881133817832506678813287768785540369517358380255439050902203626519287384262586064194565789863256490623043803502381745002482340840319374844568783071879807002553812571086903252559783573910759042365262195156509786366704178512889464479439535336874103681958000*x_1^2*x_6+67716339951885764302089360466660868327810213775406816290042147256485935302953032095529734347094857704299184288907846714426200948830212917773274517800633518348696814501176087974780810984704256206429139093075346150455014925708251452741427043140713179874532135022794865671863081923467150646423339094268186978137727945380609206835367788565574084094791964522499467612984810249924460988589165664585672946612171934949562886455533495733990550527901282262929746200651762387182263378625979972906504677533697837028851754017743003150*x_0*x_2*x_6-296396040967495897248668231679337931062567405870404381107672625460713232100930199382968018596090142340884017459777499830853462326083561982672790993630516111693006639845111971323725676290591849813369241301779005902266736283730724116248114863232428450790155244069036667169359251590835059047576025235640036617865011317370650416497909994949448911770633104499436285259716363537814009501645213948819403183638611632505070850030212041378021826507256116742320124967556171361184040962983597803583917053113765901760040773190848576700*x_1*x_2*x_6+143379395354437955064125912396359476575074577941240226251457778631439178593614703273232549066417532158324207860658956313822939709257005021051724040503669269628102183411962552940461210868541465482394573146908555903090546372056168515994449175941380791951357005336932107289625164789389129835278459288163936354947419885165078234085881289039679206735814599792581350132940618385154191366035631430527646094897876679096779803681735952630784916061482178253763883290701164410924456956603861486516353376092216508532685781027926904800*x_2^2*x_6-3197348633611329407731897000684354132833553954767881295826287177397484629837191911894899738882236529587378783958940206820150678584490104534213659408850919067231134555847179731220063806589936087347345232979890056324743089914964129957111020165264682224064836604226093803208382925698604983590724425170043964887977963764093622065296218921688210079711569734634894207500970491912517271265248225873011051212339147373613662201889222579150869872126747344192599761789622734625195540411158457657661933905440394575760284856733881960*x_0*x_3*x_6+11246146775068465813790223796541990667806682550841009170121248491770080769614184998857166051337553857316301917219085803777599999814032195418576130893260233680527415442222574074840577370883946906604264303560668569732675955412343928482641990928287715957258527022177701580574176291890180699410550792167338483085336947008626519576908236466591197090248362918475450464662418027073003892128137526653957817093001771668447229820438569401680563790429053399444601830511251047809363640083958943945097132548274981431470768890882857340*x_1*x_3*x_6-9438235128791765596293780248838152088598562332987920886426671409488361385250970667320602762908894009664883701916085675550403661725284051781279990845348243921605949943581936816106650461107465324901826983516212692305439660422166618775325964759726625067139970264691048369584451971248434989249791527444509986517297621374655969439326962256386186361878864999193766927030338544432256437792683186199254124706996915639980635252699404220463117495700179946195639830836356107466523959425376798502057512167411016990329906447499277650*x_2*x_3*x_6-2099637701821586667092183592478423533614447560159088834624733590010860695073728656200926270970506364596242012502713118801574538528689631493958561096678718889368468975228574026244316404954047346123959135606164733434000993971197156770939072180862091651197357378383052573891503989677722886989013597244840045467612450301871492080829066749280391818023226652788859513886910271105897437128818703511247073739068335932813176806165329749869098237952714680390008369100237624384299302085325054726420818433386690506928463859540729960*x_3^2*x_6-11310364538206583485045739147693192120893844672699370002089981384114056327193821478634336660245966828245689565717381144986018732168155468727213051546490744184101617711925547855668995339700287158843650941532586769818004449036070436452788233699997814243870449277354154033310531086137652124401437099129498305628705466713692730664339030318423295705066750246384100303075803547098157956365878756866511021358826351131893029334854171056624307047251893452179065273655441202870908885877736243660646560693492749697853684220289105440*x_0*x_4*x_6+58110523772660927436386770011161407988759363953980459529494663355271448291040921282855128008169746898995481795677067800422341377966180252372750502084755449568655164291966024353962043605383209676238209839876289405601817278344673456647288432015471878046378446256529697861675947237316607661569837553361298581966956863033692686920834319083709739119404866212556251379272496150129173119834307665160364815882276873033750755579400750082323915579754926040965719773109192455966468378462025263339705198474689109299488999571540248760*x_1*x_4*x_6-63681988706399216933190856131543416335897750803567464037786759409931664501038209139982650317377801067754545174023984716708359271568200791949665757599609502899063078184805534715292995638699968101358339008594095607852127859505431271256906624991537658286316157512349734191435554909681636246659966423653995471285423964874706707217025092902718412646087870845028774759389438945310949150447607182427652959511830138298475032061027496053676356975002686235382384449281955532052380279391449108587474152068269723229865992456783829100*x_2*x_4*x_6+13453033405100262321743927086115461236839390801555654547174193531822127485299538086599435804094520714231384532467739698952840416984635054345491424021197372096698198585942160377748878176769290617452544403890096962277259541171564154729218200159719977600596274960938800058942453011119473941546356350935482840055085469143415796595107096110556222608514157440169627735655076848817102338881742900994201232023003040560930482602233214844228680695080788659359967586260773081211624691955043326041276367595757845801726005036704303120*x_3*x_4*x_6-2051172495980255798633735852585996077185887641157710223666414163743721603973782903982942857387230311779493865816457967517163497577372699850158157312217162110138724620231445040228254427805533607794280893900470898534384708566059428276829637844265230313701309212729701708573187362732375660868202275297251755861229691290732821152608718079651275051109260044902582882303843588226576911326450802512564525721318046428505685690466557172778819001369389245203718871398480448055642013263127936218782431762922663533465938598881970360*x_4^2*x_6+28428623637505445166721589135372051392426204349634473654449438222114766502885680314820414837500971467449385513858926460128971210065616730037829190174769612377219845132447475590683926069708467472436297982556516654185653857337382984053159259495154905947710193059458993920364376551887148856363398571178167783908471505429136000151394141945025345480491844265531910953884352067069754881224107067094806461339269681692011386626436665898902802258149412890587702025267124444720474795587942364088387936662700988467834481121379056740*x_0*x_5*x_6-127869938113396561245281191261488894099935007900472720250305882617135570599391354748389956729939456334570517664702398427444913385419195536687278184099852600397292135984510644675115434763621979846658280635021687679155529568172875162925404648603742539673209987255208990695053674465027439385734582491784433348802775693029239806160283865954156867211793652568319348950882207162780806477451797473011483958129071620309154593063850313850925238814656752897310346467499099746092537895450110881778871199712308349369364915753111306960*x_1*x_5*x_6+128548591995201911923298873214599743021219570954717654322849417849726318421765962116160893548195579556118298446277349246080295370687626991032730412839370372119402733168262847882761376751903761164457223782259623098855400698692268404684482780841686323207415772545906856452180516665876131110315225146233354346674040105787696812820536552089150241756838532434433574843624492074719267029894307640341902137794608888448319666503192681942952183785734454431108088618773830637541672343187697679683511955134346761543201243798631767300*x_2*x_5*x_6-3218528420952740643742356563277392626008755119507461032309618347860025086177219053060554691141364587973799311664906788249764497622512641656982450816853111848181382612448281055562150285182682818856342266101883215837383664096121744060888303090920147626872683499213712131898425860426968372641199270662101359986964936784000401029301664234965503640056971486668687117799201075311760897352448353864580448395833124996947282284040394460868432019537808322516129474282037271333859736729141141192224986908024701399243185052612509460*x_3*x_5*x_6-24550183086190516683676071324136543188289712314603882702022555415674122372278277796113525886065813771554822655474809636960126015487977318787674188220160279050266819848920030194139486285253700734614370332912953881229280996200451510160820444670320019398392376029133340986382507771150575774833287375075585847928737026279875233461097099570004566566353389949975659750089869538800473774430482673606790615196067875058318701412441592227833354598796559159951911305057093386124553383860885481370043105569637913185349370831320113140*x_4*x_5*x_6+26943525108946306916380307468808771675870199873445032494004779887612338471246178940760446419604777260630383291252963382526423823891192003530418564330120493905340892415810002566412829547402073540281274044947483717652954156915341216904244100442395238551970707102816221449938743440128593722669190244668852777655524566501916228869142287942698597263290869723773451219568354884316323447733264967724199931469833362562563147560817610211501614769881423131626504755600393634771239217870802379354423049520110046918973298731767926800*x_5^2*x_6-23437593034700463609405684859773182937669717656399226232000027441117214708727357088742839758263591677647485284462029509929803855289436497559618676072868470682428943042181055417193766824969657373870949261410159692581877210828179182837640710622891616074758052827002461256600493393793880780730431696461163745579397804141876331496315520504044799975098009177164521041179382823843564235507523087114103657988251918935978062220553351631415129786516322522511946817765221509481255709153323591781677835873779261654951691313664489400*x_0*x_6^2+103445198566507104507365862781859648830364301740391829374919065201297553563686405475757200911644066223516495038147889499444003602328980389524397453913586570120550530921901666014116880116187829806374689046201949936440431471409944348554006353783160769911025482359692303427139879229404370884086650443561979908626319024961681409083116511179352829803195542865094898423637829910965860739457306835696182971336263152159761567650923468261893368637735179339640940135761785439617963913074380775248666215436346523331297047894194455000*x_1*x_6^2-100885883446453898601882313103464109658719484412333524273633020172213946403381589355084556134930645945315026473740441195659598992234102239175558560381280628207397445968680686005708997119516100754767010901800937588067655558227258989607512299370205568425412188227391563789535747849700458998677128561167922101164905609966862821901685646775944864383534015898844792164960641022916686997540366085170622131324429784513174097734290864543447611961297126340549889292202109225603704471251635241377072059650091725045552468531833968400*x_2*x_6^2+9834059361893428347979192274647841870197469329998575623584330589505220160173364029996699526098063703209259216687336743073701050090382756090831204966676179590229571692546087082126967338385955022862195842954961278572640577060665577737307356070373117082681246864873127808699650267507897885411954566913407174879429002635942510547626517302131039939259298343949307659020982050042721004484709076894341587660242643785936363726838146876073816066904147121900766736809284823809210979171942549596742233447629412143006144260729345800*x_3*x_6^2+10865860159452639538055710195824838252620234680072537930981698593532034362149073225691119618452206897728333526069466407344240149413649047336062683610376931992517040366134168655110221754416119295953185397932166995649820100607709091263213077093726009166150700773808393942588840598225342491811075431517601018160356247854893686662952142829120454803140245592453134133690159350661773118607040772626938539015698372457023820354376491018107455825493464362167795303686642424523420124871988740560160234463730671319128463831606434200*x_4*x_6^2-43221122140616019886510672287281225566765147754564811189977016676283466676826157978780122303587311450668495473122124230260843398719850291584678341429465445537801662480981765043116402401505404282583195929117080573576837798444869064538824797485331205166371916646857518977409113323920422220553476540091786554905575253340740136845915630973650356171065495311014251248369601375144860968877723329186485996772382875516093283860096523068884775434635871261927070776374819571149480093267535267907264652251321288727339952710477454600*x_5*x_6^2+17656951800537009225434360600680518564384480577021743121551454093599357007322653086814191010878841225864804856981858283588318432936326861916067810092949759105133495341593557804145303373517824416796844774357322469537201187474865880144789810753351194513655592599589274850976116606558523822213159124451045049781646017894215839848408571275039019024468292173889570229855750682793059619569749022873203895311923699843268673090627284455500614130986360315364736008473825197977741079113091195469445579136776434928890168503464374000*x_6^3,
   59702223794046459318369316825888546507879576196652645511262328692469241961280850543335553865269558298601577400622752060548604287209409461389089629509617276891474970708661810472043446895383902360746521531646788771280393477037250252434142160746188984447881394482069985448056178383552317363247423585856654457001740081031272041533770959665986909715136786621210783362033928797091371817473999197984575854929863118280859020737491520418554333262215671435251660296998800458177705976222133623806073770825191994316365905954216500*x_0^3-4141376456541812066118031605022331347666517977531870373037037134932263028227979964206188521343596234894606426283727174354034893354672632067104931503679604132123447877850982394623784070255265867421163008216873191699914481533052893957909056388512256432153383356556599953778984660523861040160491437031642126201497742758814623827333590212463639044040699864129614385747520385554469059290096582322881809660227641974018114382824756859060585209763516969426031987946570356297425840993250788174854708859785395807812382123354528525*x_0*x_2^2+14782595801632333341986950554690577781938616233583101435163229721037574907924731242816046437210956635178161331380459667444930670083487695326120545190328915602218277634249031499181405420622990942747741249059835524567288657392607628385318249329529853574821433525343795393474489355310199792243984196338277317026787012613416832294663862868113886891893437250416785061141251233865098651528772629422063940053782709497723021823998337902755346272186677192338768565216403234912259264993817221635832162890959088032280880012296651250*x_1*x_2^2-15687934575827131799430239881643964869875057814825561744087457204801483845384512216821071165899216131937139228530681368562033560032960342443447219307208034887217445414478899868672245651953130202275146591928572621983734705342809910510006613190214544830261751101408198022858427450793743636670021670531946014689333871541432271678366693108387954425822483284200924135257246571883972202837119421695255613281524760821087660805080319005935677011856764390817404495813335851303552132451170847327110267933659645664327444588106690875*x_2^3+4634269465554761751104008381934682888909424387552692335819363233118127132955177412594318635110606762072795913156878881658691396606977236920565663117390875966309343593463871250107315783222083832067509922849153243987942113747538063581504022408424474658061810531925218694698992470257859506501248183580260164925944658130275212436224714111420625950446391657281333134045300288303747859576239087496868931814947205545874290146682960720435904475821961667076874320874552688630336602806197949636835779024823328520649062958342363250*x_0^2*x_3-36724166451589590407608768697735861122836026107861127451671842547246218124406099828699031411612600468516426243414816050028919234627823380283692687772332628711286110255722495566657570993299590395644275073889817760653474173233932980652816594816898649013980109524640798179183766709390003268361847528034261666867457007233769575041599046234380629589291896396652184472371187947026756211763032616960741240685915461188912033256593985306003829951983555003095309334966161849529705005694403298911822107855167870587029366698681638210*x_0*x_1*x_3+71714631811615311141071221533854450723665915205513903832350163519112611523053033264566221943298377339925177452364686836223395130859079276907236205798268110297867483177459545477233600415108665735982882344975374447396910616751879366352151539033403956525773379621463541443810268044750976109320951294391788637161768871343367743006462336414901497847244600981242335178778296195413702422172285349654105181453078693150731296169621501574402105866360905932921136636183161061310054988307027499938783398367040240912826524001025580340*x_1^2*x_3+39749129915609507461265631071735680775168009843467538488163343359535778958433445139983913322730545379251840171861792229183561877177341527600349520653594003881839753144384208093570403081436581691099241830041860168215618586029673130971288779685815533048473391183774344785303276740923908900989956937277262433311991506556035977685147265246034825098049142713366461941149684439446657508925187095138231554083545294604522021823682648373352444480687780471512136679950780302209067179524993648794144455248948361676944987427574267555*x_0*x_2*x_3-155807159126833015252203031192630831694914676528291299109640622037774212677372570077382250355721995584824358996357288877257607884163829675777848138644817893007911274294630675044084072076000024441656523198377538055536553138953922782213745083363332320073006259492873814711786720841321929086643984877580018510809935821004266732751831587781194376093168243830785102947798487080242750659417830407780259158445950028370188194287452004353072451864586704750670048235965303825373514226377369381175992893748480464725475238098267426540*x_1*x_2*x_3+87301306857843533417262203294640656140212443108878589124462894504283037637658052345367562374455139402063918656997443397095950982971974407658875460047851500903705600753217251365797825315275129083906388585445803491056764340429716702150293615566232446255563835977171818923831466807970983929874334552947458378919790946642927940101863155255028364564570649364205621862423323816104667782202608512193333791572406860551081340184913721252291960929349270014538636425156990650399472590507901813146790702045185285390901593123088241905*x_2^2*x_3-6970141672028766005026757016719512361451960593807546559949511594536356226552531740666815467061273582213217132569701761278885295950069154977926246787019416945016186187353208390057918842862952800117638065475449957369690454523237774780837467635433699507143202540945351982691135317671374599910123312353422121934368727205535417361954476627384916449415863431838230722111949586915246526959962396570241351322774898614817658030951108574987889613047848559186777162356255757150245412652856537574001728546735521082240470675593868700*x_0*x_3^2+27503893660730892611986981893400710184152247226444740619339491320754314770166146261274894190722196869027882371782694635158556086696615746189415786382839614126317438425585764025642909596773394731666015010017395230972270068327574238069907921626293309800030751856402667361750279346914408219461904749523285889949862458478239721185646860602880432405712960537915563900133137374819924670343732423432133392935902528669707301584345528067300347344917482813700846487693528004337679767187988533490963364928476043389770597415523244124*x_1*x_3^2-29669305680982557213619505809340404092766070458286182533574164334442385712612413228949760890729891363826234007124043552470667895408147397700660778924492854142470087924104962339148305940316262828062732782563287772324627382214173262263475169583173900889960483028037914905019205129515250088614275584785675428285945578103000796651208741113105718210769278581541875610861153991588744452679573783152973510587375645365257402629359448843341541572728411935862322737691425884493355370342831024200725186579102059715238386177183127666*x_2*x_3^2+2572336484336388990219364718447268013570677447900179831044567556689301317366133427815736321838393638727752862212998997437937077006142529114244701980990699410889792060678935119807284882646258794202781239720043487898208248355163617959861724992673758461621190246205236090616053247615263244494880697454408563457017963725973102232235319558271270308309579212671353337615114877294841974061242446596405872289150092012088819795796309068055843856358130888232051618298303638524572164441362182003572640952390016323040933972290067856*x_3^3-1272971327995752733278649529030779173101495481291892426366099407203642340250824348807207987066297199510507531774375754011154617232356740173677809893974916448206333218733806547365091614039304157535984330172887396367852826877997150989946376137152763815121786043751444106827897480979587125734382080665539178950629906752345806026276710423959218738818203753020880775133467893714312096970757065575731109937177429720741271676612353111947788763301228595949182149143346914991362615553656108231438840923076037201202672619579069350*x_0^2*x_4-3267451860803595881781359635387799200186172716197681082922067310583229665908671188777644515454726690517720248666690490351787112170343551152610233963198288898556652732877800452218923425205132346177930998342814972915908047456959671390012887132037816472039855594471065691503323094234565196908900694726270935241683600024746100092786871860610418758581341128825759932628399542479426222781660564317193445995882907397908997903717790370092464501622383323513828832831115615616589810170045567698470404947355479649153714016433622090*x_0*x_1*x_4+37448353317941171694152727464725296931154132737005093193321654154513429011456509936886785987893164389718301448823807459718806463965748360717271154450317900641627953086817003754771126515260313031001866051928253673571075767591389459190231513622871177529984546395965814058091115629282418787928303479687562530800032483012850527576063158485977186199019152867354914996839743902369324144398852627346233099201933378207142551432101905020512543707515656413204506969434390289697391909550758255008632624789435819117643430354162377960*x_1^2*x_4+7000548047979979185751628104545293439036032706298193544737975630559134884734094891912809566055247139341544613918003718805649264462247506523849197035001432897008838724925740881399773453455378173061090057706426958311900245434524982768890696945309222756206181440987862248845714965212064216177754863607200223412794172834786583988786568090604479399801836630909621595413773834520670612874048589226249784760424628642818473411313224141022602820064110701782525325774808463937142958018696785185529764191263530072624566420558950695*x_0*x_2*x_4-93272574081456521448420792341939376095297835775954076223963429053965462847380566448764645783370427436704798991992687859774850148108021999778579926450589083436319801400026689006445018780715345771631287218676208830588114260029690413846827142756260875331743087940771090130609742184267592894977656675933006461201200296158901326924958873114672128523235521305281426941294499964612233706856259959216889275146708332531401777412545801187776929961595473407236094169072030225203221040788703850393030629068990599009901857858896154510*x_1*x_2*x_4+56115967498365472808020522688237466049360384996969457349466756910597729647557406959135520273168830841696018194828173917732064626329087991084394968626471060496837234623405159742448216306637676741998640587203185264708815334991794680254845590576913112188001301181410881913568109130364540356531696229711423502436808816109927216721696428389130770956845760201890134865755896664773988695562140703764826230584043035971248773408908155554798758978836043291903457377538890500880740236794335463583928386800216668235294137440049302895*x_2^2*x_4-2609485679515552350573758231453428737101322572054308583130983523572700881992790162779010566859640183982477697877814303834626167325010021090091194815332734333982974633345615328557654725454352025111788241486113299261230923563965055797807865655267260093944991139481029213109550890995356166344339378690355918483344365275638283669553073332162660460059498332871349412151267849762792205931552354274350114919210164191551848325345397074645706791241073137072628124070914364993880560355213942499497957007898201322344253312297622930*x_0*x_3*x_4+23681421083998687761966788382204070310087866049690348031915518107430830239627459293861111467623266963387730974510287839821762000505862469207367007806384438551886480298033423897459280953707104879514102915940759076399684550461430710686188112662503322034891509935948679302155122860148569989002116288354107584626906617350326360040394384582934556326469183252717832659937569347462332659096888461944531972570054002422383212395333138901358306156856833382268418069306448087897301456776304625666127638498164599100315452447072081592*x_1*x_3*x_4-27505385643984422639059114143311512758421690844812488923883422740174928938706201072621353277177403315320548543415712751847956831562526013352717698997536678599788541223202695330623228536482971160584629715145488485951027897904035721777636474928645155926654324338073504743351443091507591327350775036922006082865577051453251371324608588501758673216257264837377361803184503439533057061410779783709907993885037633552826022181423143687744288817122513900993131425730378231780763518647771404518269476982312333399849321004543900918*x_2*x_3*x_4+2963991291497740297158197566024185982798204176936872261340778307875126079072225115123091980215802757775145875405698833955589997451065020127651060008842894282652793377469494818242523663941238965872475637876269570784546132342971766681386138669126490090076191240550397763199219362246642811687277377242464463110394583017602067213848487905755714668623728142981113618288932558659631555307994226029288358709417649593868459096162601611819079598167307685321140315462202485746333423575662163761696388399235414854487526911215577380*x_3^2*x_4-160185654444800773690813900437320044992657320065361171896508886703799966808804488531133812910450103888537741899272883815614601477705621444785066655679885512380883809811069276591622343751400116869064970822978221017532141273575027129426551003543246902607127347790595232556733572871864015780551398556183847959529669859418805707962647950829362518821156186226235625579970734488425677558684694340095889743065728071413895695912407488497227980167815559321120332465961554592921432328132704973385513479516130695580274896169712270*x_0*x_4^2-1560270666408393117589339072794065163867270741117839191574088593296669479822061806263159474162598170396034333651543599510257035602197807025108674151637892961569622690041722211791149604951440484925721082985022399966751245332324785076845428498711651342843391630790024146552838902280970259702724818735002242389609678647268108860862936325823399938369387709133680115618876867931025604203408169687005497449311401325335532773222916571868866633908124312893445051512904210595419639348482470747260277886758292544447936996503571516*x_1*x_4^2+2238953986304934255065276611928817849388837533998045326691262162514073765746588327821086379823287335011102327130785448817790876291883442407206798575195733642847390877161667454309233135951075115523928273024830514418687382353591951952539192826534296355493172784452598051712554188127502900663921430109829182119186949386589411704810207107076757870035561441658385354667777083214529750177778369366938953056972512617803694676412879743178576525565712113104641702876477176614156664853729015538696419766875471877860028557912405334*x_2*x_4^2-705381991407310755908281055572268216220309126647868721863668971910689548838307151438191059925833743080661991588500315968888672154018567230982105597627904292982230834560837383164848434893138672330431409907922100609787618428200638082082874575436649153285088613659752043471925134771203653461328866328710584932624934770297652066941916313089387826816572837229972965903659887565531327458660879350555569732444928481138726992108202194807328447535502211028684526662654189697363247924898847812950563555410003234259319486229037848*x_3*x_4^2-691010412321073312731740064385748697117586766705618430131966000431672720967525713984670420742307708473683583423252613208111716959081681054124829043422993399909655562295837527667497335358072446037029326898100840240469901477425765042749140707843631961637046181325217320364817489499517944459689557858810891673921681911456365171379233017142740969483804379388656929027890332692535531403256146824858678459597361675876856556267683818119491866059203933890466597545945670241125446196517778830568584451992598955367976186177288*x_4^3-15146438274658581388884454065249592750186340743349247229575544579761749052192814699190654243692308489878747740887546019376368150736634268078904186478082608747569157127377573586891010345312940860918806048003855657819949435632229244263389313194503629160690955825089909371533317837143870683403822322560879075064788745559354142329333164317038669446643623055887556289631073212128150819230328344912351854997076752314174644418516829482632407504431520644143048363876629873401117846159426538160411369386904755172371549121673415700*x_0^2*x_5+131845969900276871102107291850835648636952234399281563624243524865373422778475623591968228698677288265985288762373540355990876730086280938989260751128214212818033863479125377406758440164321042966371236860234689758855290420898653055454746801860662720113269371974417483835789446683444167622796933876546865016860891931775766088661262337804149521054689234656753103340130453468283229522317923727242827565575171563063987644722576206136226890183920396065025524066069072385883023939009052407853692852794196297680492491761829416140*x_0*x_1*x_5-286700927360548042636382595933538304892792529557764369866286139067075603688590517652319405532218168068334544107858327829279982989516817256769864707912651588609074791515603306542852251617789379052858467148858441740349447239014773648427289258643566565077426051539096661177867484422991730696878645230575056635888877091910211206566084854180963986905532188306806144912602864900930785275223356894839756062087356147597206183786762005848222317271162025103720535461112027309007655385063972624468792194217801421756572359215329803760*x_1^2*x_5-137119029193886272939450821398552153979481779450828129981175936428043730872194109194972968945577368728969173225435881870118674777796017674376315154452078608995797429259665366402671568090309708237211842779738081191151830545853350587668332852407491428830565536453836917011546183111829313530587168310318434282781558700806958354024844855376884740590163061701197691067286216994467983827814421111307875724270913222972576798803149788595718521942886526671442533043661636988199772736925412943436751481865291081177146379441000632570*x_0*x_2*x_5+596770128514999731577545413705652498869995771919065726451830094663044009167020167684191080139033402994237633791655268079442970750681245525566495479566638074506621226522847983258423634659727532456212859585123624023889394398895928573330500880759965705554658289193371900526033616726471210746961624930024005615416996787768906639699672450931719078118934952887445797536129592552311667004406548559790786149000880623845803144930670588152511003032067456712156753228359423793822930205850516729907579895382995622201682057380870818660*x_1*x_2*x_5-316197245512870662944900497051929116937037744954498632831227894202514261726410971985474084136119940277054038711676216997089068714909199958887154817616251122082799803555974970877291023869894244306071282817310123155357291223013154248119632045107689630209126701279912897653052393324668862376027436133634525413326089536361359182115289177422135813028088609427863549781779208728120828813117024492802055490845087948581243872105596930777130834009194886125217128369623648401137576603560098214648602275371415696901256789477841071870*x_2^2*x_5+39394878647658209881768738854357297611889421451389181358020655382591753380928138636141962730708063042128445384408331016762967470877106534001580839130146641492137189761177156975588154119475441477109663602547305794417072306883122834808653318678393589665726013008583548886699836334375899839373521938802266803438922507724413160598993246175482324721704105986211737579069066299457342910548564790529229924144221277586699284138607441220009888305022269297308503703935143176576421164456383650482345707691265814492263510781645091220*x_0*x_3*x_5-164026110972782946573443770221623396297763018512506864792961966230141068621844122551494225778122044153682098759638118064195695368461301658136183971264609773301931008146406468284202132638275917289827645032812375918505700501214791956318183985957973843965819946046197297127103292487484743218820552013439474882293654727159527873407873413577630576589605792792591615858792107758203536483773638589787766601923019145487360189135760203730273557391685094652491933285419815951973755214642191080832196244830673747637191542795881909072*x_1*x_3*x_5+173553464411599313850090992701676494865762985540871240662705260205026882933548603180615106666148691656758481151723398968744684031782893210418751572493537923095444860939103613122587960452981101157246724041907781168251286578965732470721641608784718164217720715147095893957723742458757797539218928475506999239622132690480226867277395669120078618589462758524858644600037336431031112794021552168317522035203793711979644195714537492866781591427481436302242286664749628434904074731838401853289933483081341597585532964606489214468*x_2*x_3*x_5-21150870544218598601850671150369199679790059506054236296874299126569484321601677328612763892137706334642358694874007876110203008601779406669500312333295333446156326863251715443524580306180197626885765184339213705492387194735066843396430905488002626633953781941040154268537040391637063593439731846865998650551370179322103545719475688495846756033886236675950167048972007008214331017253207076733515445706168064601679020666843386037935442284497279367397135655839537581445849644719706902736024082576713324808826994505319470428*x_3^2*x_5-3061461698187956495031279900450228616163848338695995882600390557830929164112490543331332254014309261566620463504256174618134919702075074340618419832800327536169169554405718941129848134520275839262727930962969100706576676136613679024524709682079466529987324572107533322862136525461099764441351134624214854048891571853715435399667182979875072335574139088746565928480080892201943905231545795985659722458836929201667776224854917337469971415147072225287353421918319660585163775510959296549488656702755838539671916356887755500*x_0*x_4*x_5-12055780818565512997829716152019345858466246986556790536072314235381974471781647914273016647761598720976276600560524698338012515507669623562232987474000155500764892618954183571294601879697172403354167109178366347128791120478491828211494207116339625136930546197156560747880947038283418621069228598478593087580371338800598819181241711987509830354885769835739274001095739203728785195753774639100475363756400870441951553837579251257048108801823676225972012189967320295373490535501778883551244677170810337210361376586991462788*x_1*x_4*x_5+19124231541682048858711201302365192537121504651647229142353428944196660758961260357805092131172370260965590646668004781974389551968677433686525431443238201281497597528571612481941701542769558746039295390480428010708089983427265145809161502215442235119789297835651974147637479013257428115903417901810695714294288141933257973328021921946354297878947446132116756116081511359694609114341653816765566686516823865138254112457248242078469846166315229198921599784862963603924609125188608055055876196141927081910313858265649278182*x_2*x_4*x_5-6629540583679499041409033956290478976499878793106939492100797925000178899366966156212229444905194201889686794517070232753351547903776856670914788296697600619018255649863586904272842985843408977528551766859363972824377835325894970933860849892185248270930234186272479835936773086963761185972031548485985728523547923253779153828329731996336439432135058546734942403792767179528107994422977511445623744438366993808442723040909798151355970807336044923158321996302992947533348772994059004241022888858300778837579554697104313448*x_3*x_4*x_5+269716262481576163414708512980643265806500702991700547831435407255633538934368851233952336280533508229254706092374927703877719612245894758472259393159486720270119818544852643574110871564980233310589254877485673927108647452741508880348518546894179486563034504017947285009096510876779409951314306078092288872098530695172379882253899008301819496076088507358504786451809346577280288390237868808042916230848734855729692552900079934552511500982838357457421356140532076933536032012706341002727370963290340296638372024459583256*x_4^2*x_5-55193340416824096655554894113427077685716734556237825086826185521139015269226237733567904456899604753613547554475918327924078443309249716683131304541571644673967356712186102426510585463467645571885104514309664652656736676481088909193978098098142273482754317776455515441308302460621465445644314591011316054708357865052531906377146703057715044367032336444003597266029000666983884607059275397918725524666131256865537959384431057904754509160735471726915965469061461615044257671710996635862857815695561292716934692715669414880*x_0*x_5^2+241045776950617496921891701182444425462970566243115729406634544327722435805895080070585166712774668398532770419421308539154371791338779175379381756109505950359091690470270384131558747586316654658129575620634226600663737650527797449876991776736487647151258176728233462821193548153669664480582352344619928188061226719860575793500321375012981542993896321781282321808982424651193301272322658797294089625391522101318756440467041850079009048718828645243311602393968119398558828888099505824545610913873015923195666852235189316104*x_1*x_5^2-251403330753868179941580388917161420182004659728264219886274062696957777336694182414891877234619239248336045524614444420503215862167914123578204047049813850900639055891963316681388148274573865491766631202210667810976394776551184897798681528761735534436856528041868086148424195478048718347437633003004058312732014192076045342598700532459921174783097259472205372980736884083926063085362690977797152071976110009502654814449161724509438956527547124515854250996748997603157186654758812260989736558183757317092747581665706046916*x_2*x_5^2+56000583171532676374628721685512311957486144366371120767771140129093170414072083790547826357382445122177124604260761187386355665759990901443115174260482844665804493625518274038528173355207936183448912296108003215989310931150905540547374449610968877127290946303295673486298603805054104470711959733570457200138593964690053366499086816563542112800876754831993334749282547296321555672606508569267749136912526895421700259119468548595947305343555756754096031250872123897708390142335728489616579660135897363819744094619967508536*x_3*x_5^2-1714203435241446905421856967493052067475855639879577122617822992345966437644447887019379939223252332851842062663971285211527358830224411451043834312745434538666983034341585885210592710188032667327277997533955758426700880815369724027156240878297680190705819281371782176260620772223856986983505306297713197858425878943592974141276432855649416408156823468872974619010665898596060562139657196566009983240813490841562812289047042874346799121718241627790935501873477287534977226716679993275287220146709288370236766251641332088*x_4*x_5^2-50756281078018144503200483403743295545204407003140608630668855378565207296834083201075275534480530742612652729674178919792209822405582303951509866396551131548829161731270751839890311588383642664565135135682197588741261509312115632608336119459134300349131316810822863664295850490806195102837689169458680180624511723628677573090160655294545476292549477871268215768178738072834566167966363356365973995315486414903764125260552558183665264061419473877447469271419206714278843148006073424702034435566444090922750200666226340880*x_5^3+15714767069918831280396202306763819428524038662160490724716312256854272145416687803183228263367718851826113764899063380377170892170619931715496315019382064382108295489033447694498733384507470420907176891701662780681026063744095541752459244849531538342233358793384286713100591232111587315991427710235479963051686449293240280938793417032456144812044258108957435229773914883365295513114880510310165706660286738416403320790114074206105982222668277507730875028374288432888389134457794616109962539001379984790626052263718246900*x_0^2*x_6-137938085718868448262944951725996343242279180203660495473309592122949613519991261252906336878607258292803047555332823139189349489898496220137975705360449488183304345746165434741366072946527536410031309565401737141588164415951620254356267671354150487099375425563306043038947667507226271845895371796282940450815185365782634432710998802323171916476112056050273123993561367879146659195423301421004484591868086453387865784305445672642936537152087425903766617745041977548193541027804004416413549974158776851875008609216089592900*x_0*x_1*x_6+301969685911842755431594583124364037203136784353697326792949885332872515124405019922971702342314161361752304030380871340984282429954985307139380237262114293789643080043528064273496777855337721846378378705490724239938316906072879830115406930485777573954318111058957455554290829034232379541375247498111846992639168117392547868887382243153094146768330696366577814805912422587743253230299387111908350905408298848221877538222961696207596096238051557032227455060585987327598398522365747272151716971272647473186553076001263368600*x_1^2*x_6+141946488018775126655725134446703830426052088797518113411676224305551846828716551238142294526560473236693344375161170478178061457309754040105685700998423501130419048223913312646219554466629537740824429438482112665321787980271432557191049672033888375956044854597269972479892046278350057402440015115445839086210382000957902151229918600203682800413096792543908467004149558691059431268885001002843414829977992889030417792689763751431937342458265435290267620079913816969507290027294346774953963946044178982498377006295187486050*x_0*x_2*x_6-621776350206536652771558389820098740222894698570925973048987430480016000273316222355416597199560470458569077138980568612177501730800158965734408622298780642043679558621286563405358144631276189010198238212766920814830791577550775005244506907121432514215112637823653363520941473058524639683864905735208756802769947383634614531596959509611297950000202152037179752880561704971654071719317550701798509966592732201640190708549848926788650253957457574227459839204004318512850443790323740518349829335678470007496495041694068561100*x_1*x_2*x_6+324397270947061880616810276504652882954283819154845469246724494516129115872916191135994388295627127114854565914502243649610908084463384188960921198354280548675500977368674926747482527376725789108548803791090998881130652184684482662857725938725428979035702785608514386933786170053299620769470604757607065341820242687294677626732370069127358833052914517553179551169849377731645718608689757824793096599389947971046477079459579066724663410837145174269843338934937914504739894003367703000466829191460239680898269538767067996000*x_2^2*x_6-35518621954051051793626308556634268792978336952790920186445883555785901531906250029934742807186466974066211424750683407567986209418684399739866470319270119419728774242160469552060162966780756301931584831014376200329858366317653120843713940375026507680646039956695432212900576508504943749256532944719205271757234000179871650659177566458761163603724937837975456966846781243587128585188432979348656286100840153266752959736138505749839492614734800052399161010791747533613781060523710727495625889232299840709074991137937722860*x_0*x_3*x_6+149637968822317550266212258315630420538054144666541561095547559027354862148016795626291121969987654384775641752253425372222952359922519929636868754481310771545904668333465251927406007724761771889233886954343862864965984046214123664366648595062383391269088449849558908403251809498438269444945301001867285581467386409877307716992016112976738230642955158807785029338527261574680736935013544474184989662931233198250481318608946189987106465269374851575932015748151557288321463113462901357807482713492894864069012143384999082140*x_1*x_3*x_6-157738513325530667629346624767815152426113929837802306620060984406653555931940282003730648652385519173651657093128798131087558183015426613379735795503461844464992560204620848588390693698678661101120691052605983470625758671564283492335756413802913177536745661939699192817225106083857502814726387385369073884441447774759924815522616467848237492587462171164397338797894901325858358110991742285445161590849002457547053752345443041188292112264752810518239928198218329649975324222175481812193228379134651910280048859775814812670*x_2*x_3*x_6+18071856183078478514336056178382741165590759280654730716607934468912769779509731246857737598600254928244966381824102777951531787171327689884726531041122690515302654317628755285242780461474940025430690508686847481595542438537533725027208039289466638776486197737649950190402403476639284161701189833270022414302700756997625992872348008776851532923429852694861505696467496787702805053731382750614648997972764305725949353329813612404512567635519181614171596970000591910385857174849376069551406454283510739722669136627260220656*x_3^2*x_6-1413038332978644514143756229785603155568125904869701473767590128364284020441750035172817243688341928150062734497339247226665670845418920045432961231162208806643426169533135511604660554563330741715056094457000423837164259755643488721346258697460494875846952332167020775035755801444876722018700576635241260415116873790186545991688735121800067390993559983174509061486232970576624223694724005915169643735094882964464728254769241505246048054975132372170848779752300873299331809267399734599464253336688874273085877675821927740*x_0*x_4*x_6+27193005835344120647575371115455953407279958866140768099855581735867622255947115957540581981036879965672017483497764662829992945760646330503536201393531616916740127578363526657314006795386186731507089124947263900043226927632170614254930476570353487023918412187075045625741494130228910331065160743502070736850400777940301379248893190126602335396959143884350302214873153927108464146729553027620263193393092617909320141452242026009283285459049300901776003217853372512600810367526052635523215970360047853223701113589734229160*x_1*x_4*x_6-34043787076099044830410556498022742846352270116554940746747644510630971072988082810043812127831927947828084101293382595466647155312058557041999663679653937755347838517338574225074264428861410042065050108251095853795525625410199803421631485987967923021492616308983459512896611551066346606643480356859498384958414757706669740562774114094970733278023261157358662396082032975026229243266995915441320067701443784063196765649952846984278557078574314677736949600694917102104861012648542872380747522840236196262943908971118027080*x_2*x_4*x_6+8919258628856809416879064818212327004215127228442826896535224423831422312515724381389051738639265030033482047735199882912415546644487773479174355049350654679069537429862488339199104618706957698279104712355363251172781469331526858078711092179051115210205931703501287301248434527959366797616936193886816526421686034959113257194127803283598541884899445494069671999949681755775385462916763307880158641231378849079167134986149384687308445481538587080882163955887902346608287064422005038479597297754242594044561504099265500988*x_3*x_4*x_6-1030947240847474162667300248158048290252154619621769737480708616964105757578511452337778602196571555975757375936203097527605712697200535777548470937545487612668286477189655448337343180322684998229652208656108969414701278270009953502186344544618010126835191583581444753285497967513350223992395839715774770810131128065954480970773512975843725605430933770540388137636020415521507639908336105059180358718952731402709774990902459390778459487502260763985637729627944539578740160274818451607831990664975631014474333698821577544*x_4^2*x_6+99800747914626043727211457204544363112291668600777552124781554548662668179923915636968358363016043450307716389293915826221889751790306896786543384159760891682314401804768433143513223520350483455011076647443440272248683954791703401615761654531385360004702370884682938350634932656143131113862264453889114304052026891548522521471537108164464692196980957636039477657767952537475481316042864216352197825918500050222630801882401378567611971588570629598867740213328570336366310104276674611994533894871531034194398471827598059840*x_0*x_5*x_6-436112837400043222682179991804244250375584795085846159191811838979056244876502082113544817411400420801245185710105786110260740842030229762796407245506606088586435834429169020043220806886496907814858059474477095160793563591892608276274519272743923182521634768465766663397736908019626318371821000516286172027102521933267829977965761482664851262904719897910042163439252217240540338206598451934153414968324900046848888336873598661858732543888306205894631611989093863560774269251400147715911001012504476831568231807095508262360*x_1*x_5*x_6+451150436545470883925784265860494992281068802151676905042358946190092888769158134224783883484974044657895175714871081003201715779262924359944583394253921371095266013139354505452731870644341460614297305840519893526865592222432057040044334977489287929380907782555652195878971737928458485861106936678736111232455103297738667105084492361500582041835037370649360538983476589481703808793724390899798624774692359460186194239495468017214966132012729157897035306922902573732614158216551454286961752216080922254255657437925673607580*x_2*x_5*x_6-95066382841780617185563749726872383554055502047468280563096957327581736124859291477024289143557752225207131323535575397170652561736129777688466547337003758327420467867686974642382659994980415079696338879315687353605698472993418519564254382617660577393633382958054024468761894684420779227456080567461208181046113302231244013532603063943861755664454401623449800856722035078585633506224307068966121326184694049390124976376678787834511004444132129068963497160908769150689985870481941200892020866608938802514440705666952221328*x_3*x_5*x_6-5626904604131833188925388051360931006509095953162908163553891279445109532891623198022684382764253384336953111819658635713376087052911227095439210068788282038144962287100133240437522843289326653063630456935857862873129908819931541188253567936614033581997966886546154140350197084001546818286035519956251451732315907771946174771345989482681800251713699550846021339624593977111911007968112699348761200223456856600485960454230483744217810326756491101482536580381482622707829900652891312751085600555429958026747304880622926272*x_4*x_5*x_6+130042950435788790933318081097272029441187850503511209926871638968552013416362116368227513119491626457701112842677138769928765643571047395841695455257954371760634883765171412630516820983658259172464824598022947138580203974987815131354580263588227008475391761369822984619818295451394266856886402927322415200642901089729788760692420801198934351305876592463470516728052714328488326505339066662021127003751908341617113011054529053011159594688514557522378545162802515388278139058272740147303585331826479728836102784390332115216*x_5^2*x_6-46153320018342367833022260914653618206590011278212776461486716207954241007897465168634047426340706549596517746366447862696941642260665671639808431413254925351328123617682911381209496290619588865410729745968048973837887307115992635528317298553205807532332556741869866630672659447828266994198957811054204245693623116464716043183337855946592350928221964147793723487684643051699218440899424823696329559125834185621156301494125805543789950869282670121527139992214669491036168840179278841091696732296851672370735310845089693200*x_0*x_6^2+201607897070981142292755907298741448705282664760136022478817577391037616865503977422619295772206050839465986774925655995691548030139119576992826161408797793386438816686467560017756524815689693298939399480487309181516842429954203348439165575064912401594590882578829656653294365740241980285410396572922002361682136807391387381432663994282908901287649278236405563040235122274941901170197218343317948694677297499175337918008364156390251140142664548004524697624258280673655658549552962172354115160073608110992735022894693049600*x_1*x_6^2-206511208493087445162042312387357651916072672224542278764443610983421964805736889301161777895201766579873250523379119685880431983398540172817248579529637078776478949353183398673553385144973216801726358846267477798005299382732984554958063830924953200831361220838961133190142912414792905787149004429758508948097639524606298251813223341276679533061509675371627594812042514973535762378884663967568571239748972145382386179489601107008998489858222215528469044926304515277731904867822899056097830573191915281403838348707310404400*x_2*x_6^2+41277841850724902893363143200801321906861707672968766427248029766781704991839597709048332387670373912192202786267965153182418528159583615414330672415378810655205345856594125306615248611435592332718707416491436068494188228821410601262295812439315027001296057528732426657689391818683726348814197686874145795937486482750650961172279040982154958198441086256602634977932673600501437362578346947452977527001683901214899015962567488828926426258044998018200941673256486105733228892177629601054520388501292274323633375775604009280*x_3*x_6^2+5492020710422419582165013586440709443992480583440195157092702370822742551742561192085832771214800487058455427857948671759150687183000290100568365595677795067438217682266896373757647355123043531012534874594985564889836968704320826840779381974688480180088245522195072919789867666344880376627837185112630831594397937901463864840548366118129610774610609705253968298975248872844350581767205351000028814287114066399262911424069098589505120068590354562283877045517934080150089458883789822712571754247958999978869771512916687920*x_4*x_6^2-113299798520254294261588690376672452335143445922882945957851827028324554312251626464820064525915110370779428508444698423024432893948262317864360909008584122882087591542480068793334331658801677084448517123413240524243225008530132005090932972581176779079504203120902708831318716443243603044609091669126345513050071131601379064419115082010779917977485037158358649977529371933463966568668064513681154012124317837484294926395972336039771874758014510265567004603982466467418205703723643881046311293455846819817718205297244981120*x_5*x_6^2+33164360880087970421694262800182113973418142037413741031656335867295607896922380045779491711883619894427454643023232970209712385664310874766140978945015907140613777488696270305396104348918456541204823935331813463261850672358499989609866724592716875785241607641392012161158299709537388702711135417572866710630459576501084956894732444798528989656751524512153415157681489027654556353279493832751500706817550541919065918176019321344044381206609916608291498254599108892759063542294981011201096996731847608808162554967773076800*x_6^3);
   D_11={1, 3, 9, 13, 11, 5, 1};
   T_11="cubo-quintic Cremona transformation of P^6,    dim(B)=3, deg(B)=14, g(B)=15 ";
   x=gens P_6;
   C_12=ideal(-84*x_0*x_2*x_3-28*x_1*x_2*x_3+84*x_2^2*x_3-28*x_1*x_3^2-70*x_2*x_3^2+28*x_0*x_3*x_4-154*x_1*x_3*x_4+90*x_2*x_3*x_4+28*x_3^2*x_4-84*x_0*x_4^2-42*x_1*x_4^2+204*x_2*x_4^2-124*x_3*x_4^2+96*x_4^3-168*x_1*x_2*x_5-204*x_2^2*x_5-28*x_0*x_3*x_5-84*x_2*x_3*x_5-28*x_3^2*x_5-84*x_0*x_4*x_5+112*x_1*x_4*x_5-96*x_2*x_4*x_5-56*x_3*x_4*x_5+84*x_4^2*x_5-28*x_1*x_5^2-84*x_2*x_5^2+422184*x_0*x_2*x_6+21952*x_1*x_2*x_6-566412*x_2^2*x_6-149184*x_0*x_3*x_6+296142*x_2*x_3*x_6+13496*x_3^2*x_6-891688*x_0*x_4*x_6-134232*x_1*x_4*x_6-554010*x_2*x_4*x_6-132314*x_3*x_4*x_6+742396*x_4^2*x_6+81340*x_0*x_5*x_6-67844*x_1*x_5*x_6+941964*x_2*x_5*x_6+244020*x_3*x_5*x_6-178238*x_4*x_5*x_6+81340*x_5^2*x_6+260857380*x_0*x_6^2-3783290*x_1*x_6^2+563445022*x_2*x_6^2+48510196*x_3*x_6^2+437406536*x_4*x_6^2-444996930*x_5*x_6^2,
   -168*x_1^2*x_2-204*x_1*x_2^2+28*x_1^2*x_3+84*x_0*x_2*x_3-16*x_1*x_2*x_3+252*x_2^2*x_3-28*x_0*x_3^2-28*x_1*x_3^2+14*x_2*x_3^2-28*x_3^3+252*x_1^2*x_4+204*x_0*x_2*x_4+192*x_1*x_2*x_4-236*x_0*x_3*x_4-70*x_1*x_3*x_4-174*x_2*x_3*x_4-208*x_3^2*x_4-444*x_0*x_4^2+258*x_1*x_4^2-220*x_3*x_4^2+456*x_4^3-28*x_1^2*x_5-84*x_1*x_2*x_5-28*x_1*x_3*x_5-84*x_2*x_3*x_5-152*x_1*x_4*x_5-456*x_2*x_4*x_5-89796*x_1^2*x_6-277956*x_0*x_2*x_6+1100752*x_1*x_2*x_6-978096*x_2^2*x_6+72856*x_0*x_3*x_6-209212*x_1*x_3*x_6-703878*x_2*x_3*x_6+398216*x_3^2*x_6+299936*x_0*x_4*x_6-2768184*x_1*x_4*x_6+1362*x_2*x_4*x_6+2553330*x_3*x_4*x_6+1090552*x_4^2*x_6+154196*x_1*x_5*x_6+218568*x_2*x_5*x_6+81340*x_3*x_5*x_6+501662*x_4*x_5*x_6-63485772*x_0*x_6^2-12467126*x_1*x_6^2+1651801270*x_2*x_6^2-488180140*x_3*x_6^2-1320747316*x_4*x_6^2-169154566*x_5*x_6^2,
   -294*x_0*x_1*x_2+98*x_1^2*x_2+532*x_1*x_2^2+98*x_0*x_1*x_3+98*x_1^2*x_3-266*x_1*x_2*x_3-490*x_2^2*x_3+84*x_1*x_3^2+98*x_2*x_3^2+490*x_0*x_1*x_4-98*x_1^2*x_4-532*x_0*x_2*x_4-462*x_1*x_2*x_4+210*x_0*x_3*x_4+378*x_1*x_3*x_4+140*x_2*x_3*x_4+224*x_3^2*x_4+1008*x_0*x_4^2-1106*x_1*x_4^2+406*x_2*x_4^2+868*x_3*x_4^2-1092*x_4^3+98*x_1^2*x_5-56*x_0*x_2*x_5+588*x_1*x_2*x_5-406*x_2^2*x_5-14*x_0*x_3*x_5+154*x_2*x_3*x_5-14*x_3^2*x_5-28*x_0*x_4*x_5+70*x_1*x_4*x_5+1092*x_2*x_4*x_5-28*x_3*x_4*x_5+42*x_4^2*x_5-14*x_1*x_5^2-42*x_2*x_5^2+111475*x_1^2*x_6-601867*x_1*x_2*x_6+1423450*x_2^2*x_6-22099*x_1*x_3*x_6-494214*x_2*x_3*x_6+104762*x_0*x_4*x_6+3251101*x_1*x_4*x_6-2476901*x_2*x_4*x_6-763175*x_3*x_4*x_6+1879640*x_4^2*x_6-104762*x_0*x_5*x_6-1458926*x_1*x_5*x_6-900865*x_2*x_5*x_6+596967*x_3*x_5*x_6+131271*x_4*x_5*x_6+110789*x_5^2*x_6-1065167635*x_1*x_6^2+608667220*x_2*x_6^2-2586835685*x_4*x_6^2+456500415*x_5*x_6^2,
   -588*x_0*x_1*x_2+826*x_1*x_2^2+98*x_0*x_1*x_3-511*x_1*x_2*x_3-490*x_2^2*x_3+84*x_1*x_3^2+98*x_2*x_3^2+882*x_0*x_1*x_4+49*x_1^2*x_4-826*x_0*x_2*x_4-462*x_1*x_2*x_4+112*x_0*x_3*x_4+434*x_1*x_3*x_4-7*x_2*x_3*x_4+126*x_3^2*x_4+1302*x_0*x_4^2-1897*x_1*x_4^2+1288*x_2*x_4^2+1302*x_3*x_4^2-1428*x_4^3-98*x_0*x_1*x_5-350*x_0*x_2*x_5+350*x_1*x_2*x_5-1288*x_2^2*x_5+84*x_0*x_3*x_5+105*x_2*x_3*x_5+84*x_3^2*x_5+266*x_0*x_4*x_5+21*x_1*x_4*x_5+1428*x_2*x_4*x_5+168*x_3*x_4*x_5-252*x_4^2*x_5+84*x_1*x_5^2+252*x_2*x_5^2-314286*x_0*x_1*x_6+34643*x_1^2*x_6-841281*x_1*x_2*x_6+384160*x_2^2*x_6+203301*x_1*x_3*x_6-286356*x_2*x_3*x_6-523810*x_0*x_4*x_6+2277681*x_1*x_4*x_6-5103791*x_2*x_4*x_6+915467*x_3*x_4*x_6+5666444*x_4^2*x_6-104762*x_0*x_5*x_6+127386*x_1*x_5*x_6+1746997*x_2*x_5*x_6-541793*x_3*x_5*x_6-1095381*x_4*x_5*x_6-173901*x_5^2*x_6-287466928*x_1*x_6^2+164266816*x_2*x_6^2-698133968*x_4*x_6^2+123200112*x_5*x_6^2,
   -56*x_0*x_1*x_2-322*x_1^2*x_2-358*x_1*x_2^2-28*x_0^2*x_3-56*x_0*x_1*x_3+56*x_1^2*x_3+476*x_0*x_2*x_3-58*x_1*x_2*x_3+280*x_2^2*x_3-112*x_0*x_3^2+280*x_2*x_3^2-84*x_3^3-28*x_0^2*x_4+70*x_0*x_1*x_4+490*x_1^2*x_4+358*x_0*x_2*x_4+388*x_1*x_2*x_4-612*x_0*x_3*x_4+434*x_1*x_3*x_4-732*x_2*x_3*x_4-528*x_3^2*x_4-432*x_0*x_4^2+412*x_1*x_4^2-394*x_2*x_4^2+176*x_3*x_4^2+436*x_4^3-28*x_0^2*x_5-56*x_0*x_1*x_5-56*x_1^2*x_5-236*x_0*x_2*x_5+336*x_1*x_2*x_5+394*x_2^2*x_5+56*x_0*x_3*x_5-84*x_1*x_3*x_5-82*x_2*x_3*x_5+84*x_3^2*x_5+378*x_0*x_4*x_5-530*x_1*x_4*x_5-436*x_2*x_4*x_5+266*x_3*x_4*x_5-350*x_4^2*x_5+84*x_1*x_5^2+350*x_2*x_5^2-89796*x_0^2*x_6-53802*x_0*x_1*x_6-164626*x_1^2*x_6-2226938*x_0*x_2*x_6+2242620*x_1*x_2*x_6-622510*x_2^2*x_6+927808*x_0*x_3*x_6-358830*x_1*x_3*x_6-2612218*x_2*x_3*x_6+1017604*x_3^2*x_6+3381396*x_0*x_4*x_6-5178970*x_1*x_4*x_6+1294560*x_2*x_4*x_6+5634188*x_3*x_4*x_6+505490*x_4^2*x_6+473266*x_0*x_5*x_6+654822*x_1*x_5*x_6-729544*x_2*x_5*x_6-177454*x_3*x_5*x_6+126604*x_4*x_5*x_6-162680*x_5^2*x_6+166042674*x_1*x_6^2-94881528*x_2*x_6^2+403246494*x_4*x_6^2-71161146*x_5*x_6^2,
   -6*x_0^2*x_2+2*x_0*x_1*x_2+11*x_1^2*x_2-4*x_1*x_2^2+2*x_0^2*x_3+2*x_0*x_1*x_3-2*x_1^2*x_3-11*x_0*x_2*x_3+2*x_1*x_2*x_3-5*x_2^2*x_3+4*x_0*x_3^2+2*x_1*x_3^2-5*x_2*x_3^2+2*x_3^3+10*x_0^2*x_4-2*x_0*x_1*x_4-17*x_1^2*x_4+4*x_0*x_2*x_4+9*x_1*x_2*x_4+19*x_0*x_3*x_4+2*x_1*x_3*x_4+10*x_2*x_3*x_4+9*x_3^2*x_4-10*x_0*x_4^2-5*x_1*x_4^2-4*x_2*x_4^2-11*x_3*x_4^2+2*x_0*x_1*x_5+2*x_1^2*x_5+6*x_0*x_2*x_5-x_1*x_2*x_5+4*x_2^2*x_5+2*x_1*x_3*x_5+6*x_2*x_3*x_5+5*x_1*x_4*x_5+2275*x_0*x_1*x_6+5345*x_1^2*x_6+77420*x_0*x_2*x_6-62016*x_1*x_2*x_6-45154*x_2^2*x_6-26068*x_0*x_3*x_6+15893*x_1*x_3*x_6+96572*x_2*x_3*x_6-26068*x_3^2*x_6-100489*x_0*x_4*x_6+146815*x_1*x_4*x_6+40310*x_2*x_4*x_6-125881*x_3*x_4*x_6+50274*x_4^2*x_6-7241*x_0*x_5*x_6-4755*x_1*x_5*x_6+30010*x_2*x_5*x_6-7241*x_3*x_5*x_6-25544*x_4*x_5*x_6+7015575*x_1*x_6^2-4008900*x_2*x_6^2+17037825*x_4*x_6^2-3006675*x_5*x_6^2,
   7*x_1^3-62*x_0*x_1*x_2+6*x_1^2*x_2+102*x_1*x_2^2+15*x_0*x_1*x_3+28*x_1^2*x_3+14*x_0*x_2*x_3-7*x_1*x_2*x_3-126*x_2^2*x_3+15*x_1*x_3^2+14*x_2*x_3^2+38*x_0^2*x_4+42*x_0*x_1*x_4-88*x_1^2*x_4-102*x_0*x_2*x_4-58*x_1*x_2*x_4+117*x_0*x_3*x_4+99*x_1*x_3*x_4+25*x_2*x_3*x_4+79*x_3^2*x_4+134*x_0*x_4^2-153*x_1*x_4^2+105*x_3*x_4^2-184*x_4^3-14*x_0^2*x_5+28*x_0*x_1*x_5+36*x_1^2*x_5+50*x_0*x_2*x_5+86*x_1*x_2*x_5-21*x_0*x_3*x_5+85*x_2*x_3*x_5-7*x_3^2*x_5+42*x_0*x_4*x_5-6*x_1*x_4*x_5+184*x_2*x_4*x_5+35*x_3*x_4*x_5-28*x_4^2*x_5-7*x_1*x_5^2+28*x_2*x_5^2+443513*x_0*x_1*x_6+22955*x_1^2*x_6-19460*x_0*x_2*x_6-758495*x_1*x_2*x_6+489048*x_2^2*x_6+158823*x_1*x_3*x_6+143220*x_2*x_3*x_6+328671*x_0*x_4*x_6+448721*x_1*x_4*x_6-88981*x_2*x_4*x_6-362719*x_3*x_4*x_6-537336*x_4^2*x_6+180523*x_0*x_5*x_6-372376*x_1*x_5*x_6-390901*x_2*x_5*x_6+302533*x_3*x_5*x_6-184803*x_4*x_5*x_6+61005*x_5^2*x_6+371607572*x_1*x_6^2-212347184*x_2*x_6^2+902475532*x_4*x_6^2-159260388*x_5*x_6^2);
   D_12={1, 3, 9, 14, 12, 5, 1};
   T_12="cubo-quintic Cremona transformation of P^6,    dim(B)=3, deg(B)=13, g(B)=12 ";
   return (gens C_jj,D_jj,T_jj);
);

specialCremonaTransformation (Ring,ZZ) := (K,a) -> (
   if not isField K then error "expected a field";
   if a<1 or a>12 then error("expected integer between 1 and 12, see Table 1 of "|"https://arxiv.org/abs/1509.06028");
   (F,degs,str) := Examples(K,a);
   phi := map(ring F,ring F,F);
   new RationalMap from {
        "map" => phi,
        "maps" => {phi},
        "isDominant" => true,
        "idealImage" => trim ideal(0_(ring F)),
        "isBirational" => true,
        "inverseRationalMap" => null,
        "projectiveDegrees" => degs,
        "degree" => 1,
        "dimAmbientTarget" => numgens ring F -1,
        "dimTarget" => numgens ring F -1,
        "dimAmbientSource" => numgens ring F -1,
        "dimSource" => numgens ring F -1
   }
);

specialCremonaTransformation (ZZ) := (j) -> specialCremonaTransformation(QQ,j);

specialCremonaTransformation (ZZ,Ring) := (j,K) -> specialCremonaTransformation(K,j);

quadroquadric = (K,n,i) -> (
 -- Input: n, i integers;
 -- Output: for n=2,3,4,5, the i-th quadro-quadric Cremona transformation of P^n, respectively, of the Tables 2, 3, 6, 10 
 --         in the paper [Quadro-quadric Cremona transformations in low dimensions via the JC-correspondence]
   (x,y,z,t,u,v,w):=(local x,local y,local z,local t,local u,local v,local w); P:=local P; C:=local C; D:=local D;
   P_2 = K[x,y,z]; 
   P_3 = K[x,y,z,t]; 
   P_4 = K[x,y,z,t,u];  
   P_5 = K[x,y,z,t,u,v]; 
   P_8 = K[w_0..w_8]; 
   P_14 = K[w_0..w_14];
   P_26 = K[w_0..w_26]; 
   P_11 = K[w_0..w_11];
   P_20 = K[w_0..w_20]; 
   (x,y,z)=toSequence gens P_2;
   C_(2,1)=(y*z,x*z,x*y);
   C_(2,2)=(y^2,x*y,-x*z);
   C_(2,3)=(x^2,-x*y,y^2-x*z);
   (x,y,z,t)=toSequence gens P_3;
   C_(3,1)=(y^2+z^2+t^2,x*y,-x*z,-x*t);
   C_(3,2)=(y^2+z^2,x*y,-x*z,-x*t); 
   C_(3,3)=(y^2,x*y,-x*z,-x*t); 
   C_(3,4)=(x*y,x^2,t^2-y*z,x*t);
   C_(3,5)=(x*y,x^2,y*z,x*t);
   C_(3,6)=(x^2,-x*y,-x*z,2*y*z-x*t);
   C_(3,7)=(x^2,-x*y,-x*z,y^2-x*t);
   (x,y,z,t,u)=toSequence gens P_4;
   C_(4,1)=(x^2,-x*y,-x*z,y^2-x*t,2*y*z-x*u);
   C_(4,2)=(x^2,-x*y,-x*z,y^2+z^2-x*t,2*y*z-x*u);
   C_(4,3)=(x^2,-x*y,-x*z,-x*t,y^2-x*u);  
   C_(4,4)=(x^2,-x*y,-x*z,-x*t,y^2+z^2-x*u);
   C_(4,5)=(x^2,-x*y,-x*z,-x*t,y^2+z^2+t^2-x*u);
   C_(4,6)=(x*y,x^2,-y*z,-x*t,-x*u);
   C_(4,7)=(x*y,x^2,t^2-y*z,-x*t,-x*u);
   C_(4,8)=(x*y,x^2,t^2+u^2-y*z,-x*t,-x*u);
   C_(4,9)=(x*y,x^2,-y*z,-x*t,2*z*t-x*u);
   C_(4,10)=(x*y,x^2,-y*z,-y*t,-x*u);
   C_(4,11)=(x*y,x^2,u^2-y*z,-y*t,-x*u);
   C_(4,12)=(x*y,x^2,-y*z,-y*t,-y*u);
   C_(4,13)=(y*z,x*z,x*y,-z*t,-y*u);
   C_(4,14)=(y^2+z^2,x*y,-x*z,-x*t,-x*u);
   C_(4,15)=(y^2+z^2+t^2,x*y,-x*z,-x*t,-x*u);
   C_(4,16)=(y^2+z^2+t^2+u^2,x*y,-x*z,-x*t,-x*u);
   (x,y,z,t,u,v)=toSequence gens P_5;
   C_(5,1)=(y*z-v^2,x*z-u^2,x*y-t^2,u*v-z*t,t*v-u*y,t*u-x*v);
   C_(5,2)=(y^2+z^2+t^2+u^2+v^2,x*y,-x*z,-x*t,-x*u,-x*v);
   C_(5,3)=(y^2+z^2+t^2+u^2,x*y,-x*z,-x*t,-x*u,-x*v);
   C_(5,4)=(y^2+z^2+t^2,x*y,-x*z,-x*t,-x*u,-x*v);
   C_(5,5)=(y*z-t^2,x*z,x*y,-x*t,t*v-u*z,t*u-y*v);
   C_(5,6)=(y*z,x*z,x*y,-x*t,-x*u,-x*v);
   C_(5,7)=(y*z,x*z,x*y,-z*t,-z*u,-y*v);
   C_(5,8)=(y*z,x*z,x*y,-z*t,-y*u,-x*v);
   C_(5,9)=(y*z,x*z,x*y,-z*t+2*u*v,-y*u,-x*v);
   C_(5,10)=(x*y,x^2,-y*z,-t*y,-y*u,-x*v);
   C_(5,11)=(x*y,x^2,-y*z+v^2,-y*t,-y*u,-x*v);
   C_(5,12)=(x*y,x^2,-y*z,-t*y,-x*u,-x*v);
   C_(5,13)=(x*y,x^2,-y*z+u^2,-y*t,-x*u,-x*v);
   C_(5,14)=(x*y,x^2,-y*z+2*u*v,-y*t,-x*u,-x*v);
   C_(5,15)=(x*y,x^2,-y*z+u^2,-y*t+v^2,-x*u,-x*v);
   C_(5,16)=(x*y,x^2,-y*z+u^2,-y*t+2*u*v,-x*u,-x*v);
   C_(5,17)=(x*y,x^2,-y*z,-y*t,-x*u,-x*v+2*t*u);
   C_(5,18)=(x*y,x^2,-y*z+u^2,-y*t,-x*u,-x*v+2*t*u);
   C_(5,19)=(x*y,x^2,-y*z,-y*t,-x*u,-x*v+2*z*u+2*t*u);
   C_(5,20)=(x*y,x^2,-y*z+u^2,-y*t-u^2,-x*u,-x*v+2*z*u+2*t*u);
   C_(5,21)=(x*y,x^2,-y*z,-x*t,-x*u,-x*v);
   C_(5,22)=(x*y,x^2,-y*z+t^2,-x*t,-x*u,-x*v);
   C_(5,23)=(x*y,x^2,-y*z+t^2+u^2,-x*t,-x*u,-x*v);
   C_(5,24)=(x*y,x^2,-y*z+t^2+u^2+v^2,-x*t,-x*u,-x*v); -- C_(5,24)=(x*y,x^2,-y*z++t^2+u^2+v^2,-x*t,-x*u,-x*v);
   C_(5,25)=(x*y,x^2,-y*z,-x*t,-x*u,-x*v+2*z*t);
   C_(5,26)=(x^2,-x*y,-x*z,-x*t+2*y*u-z*v,-x*u+z^2,-x*v+2*y*z);
   C_(5,27)=(x^2,-x*y,-x*z,-x*t+2*y*z,-x*u+y^2,-x*v+z^2);
   C_(5,28)=(x^2,-x*y,-x*z,-x*t,-x*u-2*y*z+2*z*t,-x*v-y^2+t^2);
   C_(5,29)=(x^2,-x*y,-x*z,-x*t,-x*u+2*z*t,-x*v+t^2);
   C_(5,30)=(x^2,-x*y,-x*z,-x*t,-x*u+2*z*t,-x*v+z^2+t^2);
   C_(5,31)=(x^2,-x*y,-x*z,-x*t,-x*u+y^2+2*z*t,-x*v+t^2);
   C_(5,32)=(x^2,-x*y,-x*z,-x*t,-x*u+2*z*t,-x*v+y^2+t^2);
   C_(5,33)=(x^2,-x*y,-x*z,-x*t,-x*u+2*y*z+2*z*t,-x*v+t^2);
   C_(5,34)=(x^2,-x*y,-x*z,-x*t,-x*u+2*z*t,-x*v+2*y*z+t^2);
   C_(5,35)=(x^2,-x*y,-x*z,-x*t,-x*u+y^2+2*z*t,-x*v+z^2+t^2);
   C_(5,36)=(x^2,-x*y,-x*z,-x*t,-x*u,-x*v+y^2);
   C_(5,37)=(x^2,-x*y,-x*z,-x*t,-x*u,-x*v+y^2+z^2);
   C_(5,38)=(x^2,-x*y,-x*z,-x*t,-x*u,-x*v+y^2+z^2+t^2);
   C_(5,39)=(x^2,-x*y,-x*z,-x*t,-x*u,-x*v+y^2+z^2+t^2+u^2);
   w=gens P_8;
   C_(8,1)=(-w_5*w_7+w_4*w_8,w_5*w_6-w_3*w_8,-w_4*w_6+w_3*w_7,w_2*w_7-w_1*w_8,-w_2*w_6+w_0*w_8,w_1*w_6-w_0*w_7,-w_2*w_4+w_1*w_5,w_2*w_3-w_0*w_5,-w_1*w_3+w_0*w_4);
   w=gens P_14;
   C_(14,1)=(w_11*w_12-w_10*w_13-w_0*w_14,w_9*w_12-w_8*w_13-w_1*w_14,w_7*w_12-w_6*w_13-w_2*w_14,w_9*w_10-w_8*w_11-w_3*w_14,w_7*w_10-w_6*w_11-w_4*w_14,w_0*w_9-w_1*w_11+w_3*w_13,w_7*w_8-w_6*w_9-w_5*w_14,w_0*w_8-w_1*w_10+w_3*w_12,w_3*w_7-w_4*w_9+w_5*w_11,w_1*w_7-w_2*w_9+w_5*w_13,w_0*w_7-w_2*w_11+w_4*w_13,w_3*w_6-w_4*w_8+w_5*w_10,w_1*w_6-w_2*w_8+w_5*w_12,w_0*w_6-w_2*w_10+w_4*w_12,w_2*w_3-w_1*w_4+w_0*w_5);
   w=gens P_26;
   C_(26,1)=(w_21*w_22-w_20*w_23-w_15*w_24-w_10*w_25-w_0*w_26,w_19*w_22-w_18*w_23-w_16*w_24-w_11*w_25-w_1*w_26,w_19*w_20-w_18*w_21-w_17*w_24-w_12*w_25-w_2*w_26,w_15*w_19-w_16*w_21+w_17*w_23-w_13*w_25-w_3*w_26,w_10*w_19-w_11*w_21+w_12*w_23+w_13*w_24-w_4*w_26,w_0*w_19-w_1*w_21+w_2*w_23+w_3*w_24+w_4*w_25,w_15*w_18-w_16*w_20+w_17*w_22-w_14*w_25-w_5*w_26,w_10*w_18-w_11*w_20+w_12*w_22+w_14*w_24-w_6*w_26,w_0*w_18-w_1*w_20+w_2*w_22+w_5*w_24+w_6*w_25,w_12*w_16-w_11*w_17-w_13*w_18+w_14*w_19-w_7*w_26,w_2*w_16-w_1*w_17-w_3*w_18+w_5*w_19+w_7*w_25,w_12*w_15-w_10*w_17-w_13*w_20+w_14*w_21-w_8*w_26,w_11*w_15-w_10*w_16-w_13*w_22+w_14*w_23-w_9*w_26,w_2*w_15-w_0*w_17-w_3*w_20+w_5*w_21+w_8*w_25,w_1*w_15-w_0*w_16-w_3*w_22+w_5*w_23+w_9*w_25,w_5*w_13-w_3*w_14+w_7*w_15-w_8*w_16+w_9*w_17,w_5*w_12-w_2*w_14-w_6*w_17-w_8*w_18+w_7*w_20,w_3*w_12-w_2*w_13-w_4*w_17-w_8*w_19+w_7*w_21,w_5*w_11-w_1*w_14-w_6*w_16-w_9*w_18+w_7*w_22,w_3*w_11-w_1*w_13-w_4*w_16-w_9*w_19+w_7*w_23,w_2*w_11-w_1*w_12-w_4*w_18+w_6*w_19-w_7*w_24,w_7*w_10-w_8*w_11+w_9*w_12+w_6*w_13-w_4*w_14,w_5*w_10-w_0*w_14-w_6*w_15-w_9*w_20+w_8*w_22,w_3*w_10-w_0*w_13-w_4*w_15-w_9*w_21+w_8*w_23,w_2*w_10-w_0*w_12-w_4*w_20+w_6*w_21-w_8*w_24,w_1*w_10-w_0*w_11-w_4*w_22+w_6*w_23-w_9*w_24,w_4*w_5-w_3*w_6-w_0*w_7+w_1*w_8-w_2*w_9);
   w=gens P_11;
   C_(11,1)=(w_6*w_10-w_5*w_11,w_1*w_10-w_4*w_10+w_3*w_11,w_6*w_8-w_2*w_11,w_5*w_8-w_2*w_10,w_3*w_8-w_0*w_10,w_1*w_8-w_4*w_8+w_0*w_11,w_6*w_7-w_1*w_9+w_4*w_9-w_4*w_11,w_5*w_7+w_3*w_9-w_4*w_10,w_2*w_7-w_4*w_8+w_0*w_9,w_1*w_5-w_4*w_5+w_3*w_6,w_2*w_3-w_0*w_5,w_1*w_2-w_2*w_4+w_0*w_6);
   w=gens P_20;
   C_(20,1)=(w_10*w_15-w_9*w_16+w_6*w_20,w_10*w_14-w_8*w_16+w_5*w_20,w_9*w_14-w_8*w_15+w_4*w_20,w_6*w_14-w_5*w_15+w_4*w_16,w_11*w_13-w_16*w_17+w_15*w_18-w_14*w_19+w_12*w_20,w_3*w_13-w_10*w_17+w_9*w_18-w_8*w_19+w_7*w_20,w_10*w_12-w_2*w_13-w_7*w_16-w_6*w_18+w_5*w_19,w_9*w_12-w_1*w_13-w_7*w_15-w_6*w_17+w_4*w_19,w_8*w_12-w_0*w_13-w_7*w_14-w_5*w_17+w_4*w_18,w_10*w_11-w_3*w_16+w_2*w_20,w_9*w_11-w_3*w_15+w_1*w_20,w_8*w_11-w_3*w_14+w_0*w_20,w_7*w_11-w_3*w_12+w_2*w_17-w_1*w_18+w_0*w_19,w_6*w_11-w_2*w_15+w_1*w_16,w_5*w_11-w_2*w_14+w_0*w_16,w_4*w_11-w_1*w_14+w_0*w_15,w_6*w_8-w_5*w_9+w_4*w_10,w_3*w_6-w_2*w_9+w_1*w_10,w_3*w_5-w_2*w_8+w_0*w_10,w_3*w_4-w_1*w_8+w_0*w_9,w_2*w_4-w_1*w_5+w_0*w_6);
   return matrix{toList(C_(n,i))};
);
   
quadroQuadricCremonaTransformation (Ring,ZZ,ZZ) := (K,n,i) -> (
   if not isField K then error "expected a field";
   if n <= 0 or i <= 0 then error "expected positive integers";
   if position({(2,1),(2,2),(2,3),(3,1),(3,2),(3,3),(3,4),(3,5),(3,6),(3,7),(4,1),(4,2),(4,3),(4,4),(4,5),(4,6),(4,7),(4,8),(4,9),(4,10),(4,11),(4,12),(4,13),(4,14),(4,15),(4,16),(5,1),(5,2),(5,3),(5,4),(5,5),(5,6),(5,7),(5,8),(5,9),(5,10),(5,11),(5,12),(5,13),(5,14),(5,15),(5,16),(5,17),(5,18),(5,19),(5,20),(5,21),(5,22),(5,23),(5,24),(5,25),(5,26),(5,27),(5,28),(5,29),(5,30),(5,31),(5,32),(5,33),(5,34),(5,35),(5,36),(5,37),(5,38),(5,39),(8,1),(11,1),(14,1),(20,1),(26,1)},pa -> pa == (n,i)) === null then error("quadro-quadric Cremona transformation of P^"|toString(n)|" not available");
   F := quadroquadric(K,n,i);
   Phi := rationalMap(ring F,ring F,F);
   setKeyValue(Phi,"maps",{map Phi});
   setKeyValue(Phi,"isDominant",true);
   setKeyValue(Phi,"isBirational",true);
   setKeyValue(Phi,"degree",1);
   if n <= 5 then degrees Phi;
   return Phi;
);

quadroQuadricCremonaTransformation (ZZ,ZZ) := (n,i) -> quadroQuadricCremonaTransformation(QQ,n,i);

quadroQuadricCremonaTransformation (ZZ,ZZ,Ring) := (n,i,K) -> quadroQuadricCremonaTransformation(K,n,i);

---------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------
---------------------------- end Examples ---------------------------------------------
---------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------

beginDocumentation() 
   document { 
    Key => Cremona, 
    Headline => "package for some computations on rational maps between projective varieties", 
          EM "Cremona", " is a package to perform some basic computations on rational and birational maps between absolutely irreducible projective varieties over a field ",TEX///$K$///,". For instance, it provides general methods to compute degrees and projective degrees of rational maps (see ", TO"degreeOfRationalMap", " and ", TO"projectiveDegrees",") and a general method to compute the push-forward to projective space of Segre classes (see ",TO"SegreClass","). Moreover, all the main methods are available both in version probabilistic and in version deterministic, and one can switch from one to the other with the boolean option ",TO "MathMode",".",
          PARA{"Let ",TEX///$\Phi:X ---> Y$///,"  be a rational map from a subvariety ",TEX///$X=V(I)\subseteq\mathbb{P}^n=Proj(K[x_0,\ldots,x_n])$///," to a subvariety ",TEX///$Y=V(J)\subseteq\mathbb{P}^m=Proj(K[y_0,\ldots,y_m])$///,". We assume that the map ",TEX///$\Phi $///," can be represented, although not uniquely, by a homogeneous ring map ",TEX///$\phi:K[y_0,\ldots,y_m]/J \to K[x_0,\ldots,x_n]/I$///," of quotients of polynomial rings by homogeneous ideals. These kinds of ring maps are the typical inputs for the methods in this package. The method ", TO toMap," constructs such a map from a list of ",TEX///$m+1$///," homogeneous elements of the same degree in ",TEX///$K[x_0,...,x_n]/I$///,". Further, the new type ",TO "RationalMap"," is provided."}, 
         PARA{"Below is an example using the methods provided by this package, dealing with a birational transformation ",TEX///$\Phi:\mathbb{P}^6 ---> \mathbb{G}(2,4)\subset\mathbb{P}^9$///," of bidegree ",TEX///$(3,3)$///,"."},
    EXAMPLE { 
          "ZZ/300007[t_0..t_6];", 
          "time phi = toMap minors(3,matrix{{t_0..t_4},{t_1..t_5},{t_2..t_6}})", 
          "time J = kernelComponent(phi,2)", 
          "time degreeOfRationalMap phi", 
          "time projectiveDegrees phi", 
          "time projectiveDegrees(phi,OnlySublist=>0)", 
          "time phi = toMap(phi,Dominant=>J)", 
          "time psi = invertBirMap phi", 
          "time isInverseMap(phi,psi)",
          "time degreeOfRationalMap psi", 
          "time projectiveDegrees psi" 
          }, 
          PARA{"We repeat the above example using the type ",TO RationalMap, " and using only deterministic methods."},
    EXAMPLE {  
          "time phi = rationalMap minors(3,matrix{{t_0..t_4},{t_1..t_5},{t_2..t_6}})",       
          "time phi = rationalMap(phi,Dominant=>2)", 
          "time phi^(-1)", 
          "time degrees phi^(-1)", 
          "time degrees phi", 
          "time describe phi",
          "time describe phi^(-1)"
          }, 
          PARA{"A rudimentary version of ",EM"Cremona"," has been already used in an essential way in the paper ",HREF{"http://dx.doi.org/10.1016/j.jsc.2015.11.004","doi:10.1016/j.jsc.2015.11.004"}," (it was originally named ", HREF{"http://goo.gl/eT4rCR","bir.m2"},")."}
          } 
   undocumented{(invertBirMap,RingMap,Nothing)} 
   document { 
    Key => {invertBirMap, (invertBirMap,RingMap)}, 
    Headline => "inverse of a birational map", 
     Usage => "invertBirMap phi", 
     Inputs => { "phi" => RingMap => {"representing a birational map ",TEX///$\Phi$///," between projective varieties"} 
          }, 
     Outputs => { 
          RingMap => {"a ring map representing the inverse of ",TEX///$\Phi$///,""} 
          }, 
         PARA{"The method computes the inverse rational map of a birational map ",TEX///$V(I)\subseteq\mathbb{P}^n=Proj(K[x_0,\ldots,x_n]) ---> V(J) \subseteq \mathbb{P}^m=Proj(K[y_0,\ldots,y_m])$///, " represented by a ring map ",TEX///$\phi:K[y_0,\ldots,y_m]/J \to K[x_0,\ldots,x_n]/I$///,". If the source variety is a projective space and if a further technical condition is satisfied, then the algorithm used is that described in the paper by Russo and Simis - On birational maps and Jacobian matrices - Compos. Math. 126 (3), 335-358, 2001. For the general case, the algorithm used is the same as for ", HREF{"http://www.math.uiuc.edu/Macaulay2/doc/Macaulay2-1.9.2/share/doc/Macaulay2/Parametrization/html/_invert__Birational__Map.html","invertBirationalMap"}, " in the package ", TT "Parametrization", ". Note that if the passed map is not birational and the option ", TO MathMode, " is set to ", TT "false", ", you might not get any error message."},
    EXAMPLE { 
          "-- A Cremona transformation of P^20 
phi = map quadroQuadricCremonaTransformation(20,1)", 
          "time psi = invertBirMap phi", 
          "time isInverseMap(phi,psi)"
          },
   EXAMPLE { 
          "-- A Cremona transformation of P^26 
phi = map quadroQuadricCremonaTransformation(26,1)",
          "time psi = invertBirMap phi", 
          "time isInverseMap(phi,psi)"
          },
    SeeAlso => {approximateInverseMap}
            }
   document { 
    Key => {degreeOfRationalMap, (degreeOfRationalMap,RingMap)}, 
    Headline => "degree of a rational map between projective varieties", 
     Usage => "degreeOfRationalMap phi", 
     Inputs => { "phi" => RingMap => {"which represents a rational map ",TEX///$\Phi$///," between projective varieties"} 
          }, 
     Outputs => { {"the degree of ",TEX///$\Phi$///} 
          }, 
     Consequences => { 
          "The method returns 1 if and only if the map is birational onto its image" 
          }, 
       PARA{"One important case is when ",TEX///$\Phi:\mathbb{P}^n=Proj(K[x_0,\ldots,x_n]) --->\mathbb{P}^m=Proj(K[y_0,\ldots,y_m])$///," is a rational map between projective spaces, corresponding to a ring map ",TEX///$\phi$///,". If ",TEX///$p$///," is a general point of ",TEX///$\mathbb{P}^n$///,", denote by ",TEX///$F_p(\Phi)$///," the closure of ",TEX///$\Phi^{-1}(\Phi(p))\subseteq \mathbb{P}^n$///,". The degree of ",TEX///$\Phi$///," is defined as the degree of ",TEX///$F_p(\Phi)$///,"  if ",TEX///$dim F_p(\Phi) = 0$///," and ",TEX///$0$///," otherwise. If ",TEX///$\Phi$///," is defined by forms ",TEX///$F_0(x_0,\ldots,x_n),\ldots,F_m(x_0,\ldots,x_n)$///," and ",TEX///$I_p$///," is the ideal of the point ",TEX///$p$///,", then the ideal of ",TEX///$F_p(\Phi)$///," is nothing but the saturation ",TEX///${(\phi(\phi^{-1}(I_p))):(F_0,....,F_m)}^{\infty}$///,"."}, 
   EXAMPLE { 
          "-- Take a birational map phi:P^8--->G(1,5) subset P^14 defined by the maximal minors 
-- of a generic 2 x 6 matrix of linear forms on P^8 (thus phi is birational onto its image)
K=ZZ/3331; ringP8=K[x_0..x_8]; ringP14=K[t_0..t_14];",
          "phi=map(ringP8,ringP14,gens minors(2,matrix pack(6,for i to 11 list random(1,ringP8))))",
          "time degreeOfRationalMap phi",
          "-- Compose phi:P^8--->P^14 with a linear projection P^14--->P^8 from a general subspace of P^14 
-- of dimension 5 (so that the composition phi':P^8--->P^8 must have degree equal to deg(G(1,5))=14)
phi'=phi*map(ringP14,ringP8,for i to 8 list random(1,ringP14))",
          "time degreeOfRationalMap phi'"
          },
    SeeAlso => {projectiveDegrees} 
          } 
   undocumented{(projectiveDegrees,RingMap,ZZ)}
   document { 
    Key => {projectiveDegrees,(projectiveDegrees,RingMap)}, 
    Headline => "projective degrees of a rational map between projective varieties", 
     Usage => "projectiveDegrees phi", 
     Inputs => { "phi" => RingMap => {"which represents a rational map ",TEX///$\Phi$///," between projective varieties"} 
          }, 
     Outputs => { {"the list of the projective degrees of ",TEX///$\Phi$///} 
          }, 
       PARA{"Let ",TEX///$\phi:K[y_0,\ldots,y_m]/J \to K[x_0,\ldots,x_n]/I$///," be a ring map representing a rational map ",TEX///$\Phi: V(I) \subseteq \mathbb{P}^n=Proj(K[x_0,\ldots,x_n]) ---> V(J) \subseteq \mathbb{P}^m=Proj(K[y_0,\ldots,y_m])$///,". The ",TEX///$i$///,"-th projective degree of ",TEX///$\Phi$///," is defined in terms of dimension and degree of the closure of ",TEX///$\Phi^{-1}(L)$///,", where ",TEX///$L$///," is a general linear subspace of ",TEX///$\mathbb{P}^m$///," of a certain dimension; for the precise definition, see Harris's book (Algebraic geometry: A first course - Vol. 133 of Grad. Texts in Math., p. 240). If ",TEX///$\Phi$///," is defined by elements ",TEX///$F_0(x_0,\ldots,x_n),\ldots,F_m(x_0,\ldots,x_n)$///," and ",TEX///$I_L$///," denotes the ideal of the subspace ",TEX///$L\subseteq \mathbb{P}^m$///,", then the ideal of the closure of ",TEX///$\Phi^{-1}(L) $///," is nothing but the saturation of the ideal ",TEX///$(\phi(I_L))$///," by ",TEX///$(F_0,....,F_m)$///," in the ring ",TEX///$K[x_0,\ldots,x_n]/I$///,". So, replacing in the definition, ", EM "general linear subspace", " by ", EM "random linear subspace", ", we get a probabilistic algorithm to compute all projective degrees. Furthermore, we can considerably speed up this algorithm by taking into account two simple remarks: 1) the saturation ",TEX///$(\phi(I_L)):{(F_0,\ldots,F_m)}^{\infty}$///," is the same as ",TEX///$(\phi(I_L)):{(\lambda_0 F_0+\cdots+\lambda_m F_m)}^{\infty}$///,", where ",TEX///$\lambda_0,\ldots,\lambda_m\in\mathbb{K}$///," are general scalars; 2) the ",TEX///$i$///,"-th projective degree of ",TEX///$\Phi$///," coincides with the ",TEX///$(i-1)$///,"-th projective degree of the restriction of ",TEX///$\Phi$///," to a general hyperplane section of ",TEX///$X$///," (see ",EM"loc. cit.","). This is what the method uses if ", TO MathMode, " is set to ", TT "false",". If instead ", TO MathMode, " is set to ", TT "true", ", then the method simply computes the ",TO "multidegree"," of the ",TO "graph","."},
    EXAMPLE { 
          "-- map from P^4 to G(1,3) given by the quadrics through a rational normal curve of degree 4
GF(331^2)[t_0..t_4]; phi=toMap minors(2,matrix{{t_0..t_3},{t_1..t_4}})", 
          "time projectiveDegrees(phi,MathMode=>true)",
          "psi=invertBirMap(toMap(phi,Dominant=>infinity))", 
          "time projectiveDegrees(psi,MathMode=>true)",     
           }, 
    EXAMPLE { 
          "-- Cremona transformation of P^6 defined by the quadrics through a rational octic surface
phi = map specialCremonaTransformation(7,ZZ/300007)",
          "time projectiveDegrees phi", 
          "time projectiveDegrees(phi,OnlySublist=>1)" 
          }, 
    PARA{"Another way to use this method is passing an integer ",TT"i"," as second argument. However, this is equivalent to ",TT"first projectiveDegrees(phi,OnlySublist=>i)", " and generally it is not faster."},
    SeeAlso => {degreeOfRationalMap, SegreClass} 
          } 
   document { 
    Key => {MathMode, [invertBirMap,MathMode], [projectiveDegrees,MathMode],[degreeOfRationalMap,MathMode],[approximateInverseMap,MathMode],[isDominant,MathMode],[isBirational,MathMode],[SegreClass,MathMode],[ChernSchwartzMacPherson,MathMode]}, 
    Headline => "whether or not to ensure correctness of output", 
    "This option accepts a ", TO Boolean, " value, default value ",TT "false",".",
     PARA{"If turned on in the methods ", TO invertBirMap," and ", TO approximateInverseMap, ", then it will be checked whether the maps in input and output are one the inverse of the other, throwing an error if they are not. Actually, ", TO approximateInverseMap, " will first try to fix the error of the approximation. When turned on in the methods ", TO projectiveDegrees,", ", TO degreeOfRationalMap, ", ", TO isBirational,", ", TO isDominant, ", ", TO SegreClass, " and ", TO ChernSchwartzMacPherson, ", it means whether or not to use a deterministic algorithm."}
          } 
   document { 
    Key => {Dominant, [toMap,Dominant], [rationalMap,Dominant]}, 
--    Headline => "makes a dominant rational map" , 
           "This is an optional argument for ", TO toMap,". When a sufficiently large integer (allowed ", TO infinity,") is passed to this option, the kernel of the returned ring map will be zero.",
            } 
   document { 
    Key => {OnlySublist, [projectiveDegrees,OnlySublist]}, 
    "This is an optional argument for ", TO projectiveDegrees, " and accepts a non-negative integer, the number ", TEX///$-1$///," of projective degrees to be computed.",
          } 
   document {
    Key => {CodimBsInv, [approximateInverseMap,CodimBsInv]}, 
    "This is a technical option for ", TO approximateInverseMap, ". It accepts an integer which should be a lower bound for the codimension of the base locus of the inverse map. In most cases, one can obtain the optimal value to be passed as in the following example.", 
    PARA{},
    EXAMPLE { 
          "codimBsInv = (m) -> (
   -- input: m, the list of projective degrees of a birational map
   -- output: the codimension of the base locus of the inverse map
   k:=#m -1; z:=m_k; d:=floor(m_(k-1)/z);
   for i from 2 to k do if z*d^i - m_(k-i) > 0 then return i;
);",
"phi=toMap trim minors(2,genericSymmetricMatrix(QQ[x_0..x_5],3))",
"codimBsInv projectiveDegrees phi"
          },
      PARA{"However, sometimes larger values may be preferable."}
         } 
   document { 
    Key => {kernelComponent,(kernelComponent, RingMap,ZZ),(kernel, RingMap,ZZ)}, 
    Headline => "image of a rational map", 
     Usage => "kernelComponent(phi,d) 
               kernel(phi,d)", 
     Inputs => { 
          "phi" => RingMap => {TEX///$K[y_0,\ldots,y_m]/J \to K[x_0,\ldots,x_n]/I$///,", defined by homogeneous forms of the same degree and where ",TEX///$J$///," and ",TEX///$I$///," are homogeneous ideals"}, 
          "d" => ZZ 
          }, 
     Outputs => { {"the ideal generated by all homogeneous elements of degree ", TT "d"," belonging to the kernel of ",TT "phi"} 
          }, 
     Consequences => { 
          {TT "kernelComponent(phi,d)"," is contained in ", TT "kernel phi"} 
          }, 
PARA{"This is equivalent to ",TT "ideal image basis(d,kernel phi)",", but we use a more direct algorithm. We take advantage of the homogeneity and reduce the problem to linear algebra. For small value of ",TT"d", " this method can be very fast, as the following example shows."},
    EXAMPLE { 
          "-- A special birational transformation of P^8 into a complete intersection of three quadrics in P^11
K=QQ; ringP8=K[x_0..x_8]; ringP11=K[y_0..y_11];",
          "phi=map(ringP8,ringP11,{-5*x_0*x_3+x_2*x_4+x_3*x_4+35*x_0*x_5-7*x_2*x_5+x_3*x_5-x_4*x_5-49*x_5^2-5*x_0*x_6+2*x_2*x_6-x_4*x_6+27*x_5*x_6-4*x_6^2+x_4*x_7-7*x_5*x_7+2*x_6*x_7-2*x_4*x_8+14*x_5*x_8-4*x_6*x_8,-x_1*x_2-6*x_1*x_5-5*x_0*x_6+2*x_1*x_6+x_4*x_6+x_5*x_6-5*x_0*x_7-x_1*x_7+2*x_2*x_7+7*x_5*x_7-2*x_6*x_7+2*x_1*x_8-3*x_7*x_8,-25*x_0^2+9*x_0*x_2+10*x_0*x_4-2*x_2*x_4-x_4^2+29*x_0*x_5-x_2*x_5-7*x_4*x_5-13*x_0*x_6+3*x_4*x_6+x_5*x_6-x_0*x_7+2*x_2*x_7-x_4*x_7+7*x_5*x_7-2*x_6*x_7-8*x_0*x_8+2*x_4*x_8-3*x_7*x_8,x_2*x_4+x_3*x_4+x_4^2+7*x_2*x_5-9*x_4*x_5+12*x_5*x_6-4*x_6^2+2*x_3*x_7+2*x_4*x_7-14*x_5*x_7+4*x_6*x_7+x_3*x_8-x_4*x_8-14*x_5*x_8+x_6*x_8,-5*x_0*x_4+x_2*x_4-7*x_2*x_5+8*x_4*x_5-5*x_0*x_6+2*x_2*x_6-x_4*x_6+x_5*x_6-x_4*x_7+7*x_5*x_7-2*x_6*x_7-x_4*x_8+7*x_5*x_8-2*x_6*x_8,x_0*x_4+x_4^2-7*x_1*x_5-8*x_4*x_5+x_0*x_6+x_1*x_6+2*x_4*x_6-x_5*x_6+x_4*x_7-7*x_5*x_7+2*x_6*x_7+x_4*x_8-7*x_5*x_8+2*x_6*x_8,x_2*x_3+x_4^2-8*x_4*x_5+x_4*x_6+6*x_5*x_6-2*x_6^2+x_3*x_7+x_4*x_7-7*x_5*x_7+2*x_6*x_7+x_4*x_8-7*x_5*x_8+2*x_6*x_8,x_1*x_3-7*x_1*x_5+x_1*x_6+x_4*x_6-7*x_5*x_6+2*x_6^2-x_3*x_7,-4*x_0*x_3+x_3*x_4-x_4^2-7*x_0*x_5+8*x_4*x_5+x_0*x_6-x_4*x_6-6*x_5*x_6+2*x_6^2-x_3*x_7-x_4*x_7+7*x_5*x_7-2*x_6*x_7-x_4*x_8+7*x_5*x_8-2*x_6*x_8,-5*x_0*x_2+2*x_2^2+x_2*x_4-x_4^2-x_2*x_5+8*x_4*x_5-10*x_0*x_6+2*x_5*x_6+2*x_2*x_7-2*x_4*x_7+14*x_5*x_7-4*x_6*x_7+5*x_0*x_8-3*x_2*x_8-2*x_4*x_8+7*x_5*x_8-2*x_6*x_8-3*x_7*x_8,-5*x_0*x_1+x_1*x_2+x_1*x_4-4*x_0*x_6-x_1*x_6+x_4*x_6+x_0*x_7,x_0*x_2-x_1*x_2+5*x_0*x_4+x_1*x_4-14*x_1*x_5-x_2*x_5-8*x_4*x_5-8*x_0*x_6+2*x_1*x_6+4*x_4*x_6+2*x_2*x_7+4*x_0*x_8+3*x_1*x_8-7*x_5*x_8+2*x_6*x_8-3*x_7*x_8})",
          "time kernelComponent(phi,1)",
          "time kernelComponent(phi,2)",
          "-- restriction of phi, phi^(-1)(Q)--->Q, with Q a random quadric of P^11
Q=random(2,ringP11); phi=map(ringP8/phi(Q),ringP11/Q,matrix phi)",
          "time kernelComponent(phi,2)"
          },
    SeeAlso => {(kernel,RingMap)} 
          } 
   document { 
    Key => {isBirational,(isBirational,RingMap)}, 
    Headline => "whether a rational map is birational", 
     Usage => "isBirational phi", 
     Inputs => { 
          "phi" => RingMap => {"representing a rational map ",TEX///$\Phi:X--->Y$///," (with ",TEX///$X$///," and ",TEX///$Y$///," absolutely irreducible varieties)"}         
               }, 
     Outputs => { 
          Boolean => {"whether ",TEX///$\Phi$///," is birational"  } 
                },
     Consequences => { 
          TT "isBirational phi => isDominant phi" 
          }, 
          "The testing passes through the methods ", TO degreeOfRationalMap, " and ", TO projectiveDegrees,".",
          PARA{},
    EXAMPLE { 
          "GF(331^2)[t_0..t_4]",
          "phi=toMap(minors(2,matrix{{t_0..t_3},{t_1..t_4}}),Dominant=>infinity)",
          "time isBirational phi",
          "time isBirational(phi,MathMode=>true)"
            },
    SeeAlso => {isDominant}
          }
   document { 
    Key => {isDominant,(isDominant,RingMap)}, 
    Headline => "whether a rational map is dominant", 
     Usage => "isDominant phi", 
     Inputs => { 
          "phi" => RingMap => {"representing a rational map ",TEX///$\Phi:X--->Y$///," (with ",TEX///$X$///," and ",TEX///$Y$///," absolutely irreducible varieties)"}         
               }, 
     Outputs => { 
          Boolean => {"whether ",TEX///$\Phi$///," is dominant"  } 
                },
          "This method is based on the fibre dimension theorem. A more general way is to perform the command ", TT "kernel phi == 0",".",
          PARA{},
    EXAMPLE { 
          "P8=ZZ/101[x_0..x_8];",
          "phi=toMap ideal jacobian ideal det matrix{{x_0..x_4},{x_1..x_5},{x_2..x_6},{x_3..x_7},{x_4..x_8}}",
          "time isDominant(phi,MathMode=>true)",
          "P7=ZZ/101[x_0..x_7];",   
          "-- hyperelliptic curve of genus 3
C=ideal(x_4*x_5+23*x_5^2-23*x_0*x_6-18*x_1*x_6+6*x_2*x_6+37*x_3*x_6+23*x_4*x_6-26*x_5*x_6+2*x_6^2-25*x_0*x_7+45*x_1*x_7+30*x_2*x_7-49*x_3*x_7-49*x_4*x_7+50*x_5*x_7,x_3*x_5-24*x_5^2+21*x_0*x_6+x_1*x_6+46*x_3*x_6+27*x_4*x_6+5*x_5*x_6+35*x_6^2+20*x_0*x_7-23*x_1*x_7+8*x_2*x_7-22*x_3*x_7+20*x_4*x_7-15*x_5*x_7,x_2*x_5+47*x_5^2-40*x_0*x_6+37*x_1*x_6-25*x_2*x_6-22*x_3*x_6-8*x_4*x_6+27*x_5*x_6+15*x_6^2-23*x_0*x_7-42*x_1*x_7+27*x_2*x_7+35*x_3*x_7+39*x_4*x_7+24*x_5*x_7,x_1*x_5+15*x_5^2+49*x_0*x_6+8*x_1*x_6-31*x_2*x_6+9*x_3*x_6+38*x_4*x_6-36*x_5*x_6-30*x_6^2-33*x_0*x_7+26*x_1*x_7+32*x_2*x_7+27*x_3*x_7+6*x_4*x_7+36*x_5*x_7,x_0*x_5+30*x_5^2-11*x_0*x_6-38*x_1*x_6+13*x_2*x_6-32*x_3*x_6-30*x_4*x_6+4*x_5*x_6-28*x_6^2-30*x_0*x_7-6*x_1*x_7-45*x_2*x_7+34*x_3*x_7+20*x_4*x_7+48*x_5*x_7,x_3*x_4+46*x_5^2-37*x_0*x_6+27*x_1*x_6+33*x_2*x_6+8*x_3*x_6-32*x_4*x_6+42*x_5*x_6-34*x_6^2-37*x_0*x_7-28*x_1*x_7+10*x_2*x_7-27*x_3*x_7-42*x_4*x_7-8*x_5*x_7,x_2*x_4-25*x_5^2-4*x_0*x_6+2*x_1*x_6-31*x_2*x_6-5*x_3*x_6+16*x_4*x_6-24*x_5*x_6+31*x_6^2-30*x_0*x_7+32*x_1*x_7+12*x_2*x_7-40*x_3*x_7+3*x_4*x_7-28*x_5*x_7,x_0*x_4+15*x_5^2+48*x_0*x_6-50*x_1*x_6+46*x_2*x_6-48*x_3*x_6-23*x_4*x_6-28*x_5*x_6+39*x_6^2+38*x_1*x_7-5*x_3*x_7+5*x_4*x_7-34*x_5*x_7,x_3^2-31*x_5^2+41*x_0*x_6-30*x_1*x_6-4*x_2*x_6+43*x_3*x_6+23*x_4*x_6+7*x_5*x_6+31*x_6^2-19*x_0*x_7+25*x_1*x_7-49*x_2*x_7-16*x_3*x_7-45*x_4*x_7+25*x_5*x_7,x_2*x_3+13*x_5^2-45*x_0*x_6-22*x_1*x_6+33*x_2*x_6-26*x_3*x_6-21*x_4*x_6+34*x_5*x_6-21*x_6^2-47*x_0*x_7-10*x_1*x_7+29*x_2*x_7-46*x_3*x_7-x_4*x_7+20*x_5*x_7,x_1*x_3+22*x_5^2+4*x_0*x_6+3*x_1*x_6+45*x_2*x_6+37*x_3*x_6+17*x_4*x_6+36*x_5*x_6-2*x_6^2-31*x_0*x_7+3*x_1*x_7-12*x_2*x_7+19*x_3*x_7+28*x_4*x_7+30*x_5*x_7,x_0*x_3-47*x_5^2-43*x_0*x_6+6*x_1*x_6-40*x_2*x_6+21*x_3*x_6+26*x_4*x_6-5*x_5*x_6-5*x_6^2+4*x_0*x_7-15*x_1*x_7+18*x_2*x_7-31*x_3*x_7+50*x_4*x_7-46*x_5*x_7,x_2^2+4*x_5^2+31*x_0*x_6+41*x_1*x_6+31*x_2*x_6+28*x_3*x_6+42*x_4*x_6-28*x_5*x_6-4*x_6^2-7*x_0*x_7+15*x_1*x_7-9*x_2*x_7+31*x_3*x_7+3*x_4*x_7+7*x_5*x_7,x_1*x_2-46*x_5^2-6*x_0*x_6-50*x_1*x_6+32*x_2*x_6-10*x_3*x_6+42*x_4*x_6+33*x_5*x_6+18*x_6^2-9*x_0*x_7-20*x_1*x_7+45*x_2*x_7-9*x_3*x_7+10*x_4*x_7-8*x_5*x_7,x_0*x_2-9*x_5^2+34*x_0*x_6-45*x_1*x_6+19*x_2*x_6+24*x_3*x_6+23*x_4*x_6-37*x_5*x_6-44*x_6^2+24*x_0*x_7-33*x_2*x_7+41*x_3*x_7-40*x_4*x_7+4*x_5*x_7,x_1^2+x_1*x_4+x_4^2-28*x_5^2-33*x_0*x_6-17*x_1*x_6+11*x_3*x_6+20*x_4*x_6+25*x_5*x_6-21*x_6^2-22*x_0*x_7+24*x_1*x_7-14*x_2*x_7+5*x_3*x_7-39*x_4*x_7-18*x_5*x_7,x_0*x_1-47*x_5^2-5*x_0*x_6-9*x_1*x_6-45*x_2*x_6+48*x_3*x_6+45*x_4*x_6-29*x_5*x_6+3*x_6^2+29*x_0*x_7+40*x_1*x_7+46*x_2*x_7+27*x_3*x_7-36*x_4*x_7-39*x_5*x_7,x_0^2-31*x_5^2+36*x_0*x_6-30*x_1*x_6-10*x_2*x_6+42*x_3*x_6+9*x_4*x_6+34*x_5*x_6-6*x_6^2+48*x_0*x_7-47*x_1*x_7-19*x_2*x_7+25*x_3*x_7+28*x_4*x_7+34*x_5*x_7);",
          "phi=toMap(C,3,2)",
          "time isDominant(phi,MathMode=>true)"
            },
    SeeAlso => {isBirational}
          }  
   document { 
    Key => {isInverseMap,(isInverseMap,RingMap,RingMap)}, 
    Headline => "checks whether a rational map is the inverse of another", 
     Usage => "isInverseMap(phi,psi)", 
     Inputs => { 
          "phi" => RingMap => {"representing a rational map ",TEX///$\Phi:X--->Y$///,""}, 
          "psi" => RingMap => {"representing a rational map ",TEX///$\Psi:Y--->X$///,""} 
          }, 
     Outputs => { 
          Boolean => {"according to the condition that the composition ",TEX///$\Psi\,\Phi:X--->X$///," coincides with the identity of ",TEX///$X$///," (as a rational map)" 
          	 } 
          } 
          } 
   document { 
    Key => {composeRationalMaps,(composeRationalMaps,RingMap,RingMap)}, 
    Headline => "composition of rational maps", 
     Usage => "composeRationalMaps(phi,psi)", 
     Inputs => { 
          RingMap => "phi" => { TEX///$R <--- S$/// },
          RingMap => "psi" => { TEX///$S <--- T$/// }
          }, 
     Outputs => { 
          RingMap => { TEX///$R <--- T$/// }
          }, 
       PARA{"We illustrate this with a simple example."},
    EXAMPLE { 
          "R=QQ[x_0..x_3]; S=QQ[y_0..y_4]; T=QQ[z_0..z_4];", 
          "phi=map(R,S,{x_0*x_2,x_0*x_3,x_1*x_2,x_1*x_3,x_2*x_3})",
          "psi=map(S,T,{y_0*y_3,-y_2*y_3,y_1*y_2,y_2*y_4,-y_3*y_4})",
          "phi*psi",
          "composeRationalMaps(phi,psi)"
          } 
         }
   document { 
    Key => {toMap,(toMap,Matrix),(toMap,Ideal),(toMap,Ideal,ZZ),(toMap,Ideal,ZZ,ZZ),(toMap,List),(toMap,RingMap)}, 
    Headline => "rational map defined by a linear system", 
     Usage => "toMap(\"linear system\")", 
     Inputs => { 
          Matrix => { "or a ", TO List, ", etc."},
          }, 
     Outputs => { RingMap 
          }, 
     Consequences => { 
          }, 
        PARA{"When the input represents a list of homogeneous elements ",TEX///$F_0,\ldots,F_m\in R=K[t_0,\ldots,t_n]/I$///," of the same degree, then the method returns the ring map ",TEX///$\phi:K[x_0,\ldots,x_m] \to R$///," that sends ",TEX///$x_i$///," into ",TEX///$F_i$///,"."}, 
    EXAMPLE { 
          "QQ[t_0,t_1];", 
          "linSys=gens (ideal(t_0,t_1))^5",
          "phi=toMap linSys", 
          }, 
        PARA{"If a positive integer ",TEX///$d$///," is passed to the option ", TO Dominant, ", then the method returns the induced map on ",TEX///$K[x_0,\ldots,x_m]/J_d$///,", where ",TEX///$J_d$///," is the ideal generated by all homogeneous elements of degree ",TEX///$d$///," of the kernel of ",TEX///$\phi$///," (in this case ", TO kernelComponent, " is called)."},
    EXAMPLE { 
          "phi'=toMap(linSys,Dominant=>2)", 
          }, 
 PARA{"If the input is a pair consisting of a homogeneous ideal ",TEX///$I$///, " and an integer ",TEX///$v$///,", then the output will be the map defined by the linear system of hypersurfaces of degree ",TEX///$v$///, " which contain the projective subscheme defined by ",TEX///$I$///,"."},
    EXAMPLE { 
          "I=kernel phi",
          "toMap(I,2)" 
          }, 
PARA{"This is identical to ", TT "toMap(I,v,1)", ", while the output of ", TT "toMap(I,v,2)", " will be the map defined by the linear system of hypersurfaces of degree ",TEX///$v$///, " which are singular along the projective subscheme defined by ",TEX///$I$///,"."},
    EXAMPLE { 
          "toMap(I,2,1)", 
          "toMap(I,2,2)", 
          "toMap(I,3,2)" 
          }, 
         } 
   document { 
    Key => {approximateInverseMap,(approximateInverseMap,RingMap),(approximateInverseMap,RingMap,ZZ)}, 
    Headline => "random map related to the inverse of a birational map", 
     Usage => "approximateInverseMap phi 
               approximateInverseMap(phi,d)", 
     Inputs => { 
          RingMap => "phi" => {"representing a birational map ",TEX///$\Phi:X\subseteq\mathbb{P}^n--->Y$///},
              ZZ  => "d"   => {"optional, but it should be the degree of the forms defining the searched map"}
          }, 
     Outputs => { 
          RingMap => {"a ring map representing a random rational map ",TEX///$Y--->\mathbb{P}^n$///," (or ",TEX///$Y--->X$///,"), which in some sense is related to the inverse of ",TEX///$\Phi$///," (e.g., they should have the same base locus)"}
          }, 
         PARA{"The algorithm is to try to construct the ideal of the base locus of the inverse by looking for the images via ", TEX///$\Phi$///," of random linear sections of the source variety. Generally, one can speed up the process by passing through the option ", TO CodimBsInv," a good lower bound for the codimension of the base locus of ",TEX///$\Phi^{-1}$///," (note that, from the multi-degree of ",TEX///$\Phi$///,", one obtains easily the codimension and other numerical invariants of the base locus of the inverse)."},
    EXAMPLE { 
          "P8=ZZ/97[t_0..t_8];", 
          "phi=invertBirMap toMap(trim(minors(2,genericMatrix(P8,3,3))+random(2,P8)),Dominant=>infinity)",
          "time psi=approximateInverseMap phi",
          "isInverseMap(phi,psi) and isInverseMap(psi,phi)",
          "time psi'=approximateInverseMap(phi,CodimBsInv=>5)",
          "psi===psi'"
          }, 
       PARA{"A more complicated example is the following (here ", TO invertBirMap," takes a lot of time!)."},
     EXAMPLE { 
          "phi=map(P8,ZZ/97[x_0..x_11]/ideal(x_1*x_3-8*x_2*x_3+25*x_3^2-25*x_2*x_4-22*x_3*x_4+x_0*x_5+13*x_2*x_5+41*x_3*x_5-x_0*x_6+12*x_2*x_6+25*x_1*x_7+25*x_3*x_7+23*x_5*x_7-3*x_6*x_7+2*x_0*x_8+11*x_1*x_8-37*x_3*x_8-23*x_4*x_8-33*x_6*x_8+8*x_0*x_9+10*x_1*x_9-25*x_2*x_9-9*x_3*x_9+3*x_4*x_9+24*x_5*x_9-27*x_6*x_9-5*x_0*x_10+28*x_1*x_10+37*x_2*x_10+9*x_4*x_10+27*x_6*x_10-25*x_0*x_11+9*x_2*x_11+27*x_4*x_11-27*x_5*x_11,x_2^2+17*x_2*x_3-14*x_3^2-13*x_2*x_4+34*x_3*x_4+44*x_0*x_5-30*x_2*x_5+27*x_3*x_5+31*x_2*x_6-36*x_3*x_6-x_0*x_7+13*x_1*x_7+8*x_3*x_7+9*x_5*x_7+46*x_6*x_7+41*x_0*x_8-7*x_1*x_8-34*x_3*x_8-9*x_4*x_8-46*x_6*x_8-17*x_0*x_9+32*x_1*x_9-8*x_2*x_9-35*x_3*x_9-46*x_4*x_9+26*x_5*x_9+17*x_6*x_9+15*x_0*x_10+35*x_1*x_10+34*x_2*x_10+20*x_4*x_10+14*x_0*x_11+36*x_1*x_11+35*x_2*x_11-17*x_4*x_11,x_1*x_2-40*x_2*x_3+28*x_3^2-x_0*x_4+5*x_2*x_4-16*x_3*x_4+5*x_0*x_5-36*x_2*x_5+37*x_3*x_5+48*x_2*x_6-5*x_1*x_7-5*x_3*x_7+x_5*x_7+20*x_6*x_7+10*x_0*x_8+34*x_1*x_8+41*x_3*x_8-x_4*x_8+x_6*x_8+40*x_0*x_9-32*x_1*x_9+5*x_2*x_9-11*x_3*x_9-20*x_4*x_9+45*x_5*x_9-14*x_6*x_9-25*x_0*x_10+45*x_1*x_10-41*x_2*x_10-46*x_4*x_10+8*x_6*x_10-28*x_0*x_11+11*x_2*x_11+14*x_4*x_11-8*x_5*x_11),{t_4^2+t_0*t_5+t_1*t_5+35*t_2*t_5+10*t_3*t_5+25*t_4*t_5-5*t_5^2-14*t_0*t_6-14*t_1*t_6-5*t_2*t_6-13*t_4*t_6+37*t_5*t_6+22*t_6^2-31*t_3*t_7+26*t_4*t_7+12*t_5*t_7-45*t_6*t_7-46*t_3*t_8+37*t_4*t_8+28*t_5*t_8+33*t_6*t_8,t_3*t_4+4*t_0*t_5+39*t_1*t_5-40*t_2*t_5+40*t_3*t_5+26*t_4*t_5-20*t_5^2+41*t_0*t_6+36*t_1*t_6-22*t_2*t_6+36*t_4*t_6-30*t_5*t_6-13*t_6^2-25*t_3*t_7+5*t_4*t_7-35*t_5*t_7+10*t_6*t_7+11*t_3*t_8+46*t_4*t_8+29*t_5*t_8+28*t_6*t_8,t_2*t_4-5*t_0*t_5-40*t_1*t_5+12*t_2*t_5+47*t_3*t_5+37*t_4*t_5+25*t_5^2-27*t_0*t_6-22*t_1*t_6+27*t_2*t_6-23*t_4*t_6+5*t_5*t_6-13*t_6^2-39*t_3*t_7-29*t_4*t_7+9*t_5*t_7+39*t_6*t_7+36*t_3*t_8+13*t_4*t_8+26*t_5*t_8+37*t_6*t_8,t_0*t_4-t_0*t_5-8*t_1*t_5-35*t_2*t_5-10*t_3*t_5-33*t_4*t_5+5*t_5^2+15*t_0*t_6+15*t_1*t_6+5*t_2*t_6+15*t_4*t_6-38*t_5*t_6-22*t_6^2+31*t_3*t_7-25*t_4*t_7-19*t_5*t_7+47*t_6*t_7+46*t_3*t_8-36*t_4*t_8-35*t_5*t_8-31*t_6*t_8,t_2*t_3-t_0*t_5-t_1*t_5-35*t_2*t_5-10*t_3*t_5-33*t_4*t_5+5*t_5^2+14*t_0*t_6+14*t_1*t_6+5*t_2*t_6+14*t_4*t_6-31*t_5*t_6-24*t_6^2+32*t_3*t_7-25*t_4*t_7-19*t_5*t_7+47*t_6*t_7+46*t_3*t_8-36*t_4*t_8-35*t_5*t_8-31*t_6*t_8,t_1*t_3-7*t_1*t_5+t_1*t_6+t_4*t_6-7*t_5*t_6+2*t_6^2-t_3*t_7,t_0*t_3-46*t_0*t_5-39*t_1*t_5-43*t_2*t_5-41*t_3*t_5-26*t_4*t_5-28*t_5^2-35*t_0*t_6-36*t_1*t_6+20*t_2*t_6-36*t_4*t_6+9*t_5*t_6+15*t_6^2+26*t_3*t_7-5*t_4*t_7+35*t_5*t_7-10*t_6*t_7-10*t_3*t_8-46*t_4*t_8+47*t_5*t_8-25*t_6*t_8,t_2^2-46*t_1*t_4-33*t_0*t_5-45*t_1*t_5-39*t_2*t_5-39*t_3*t_5-46*t_4*t_5-29*t_5^2-48*t_0*t_6-38*t_1*t_6-30*t_2*t_6+19*t_4*t_6-44*t_5*t_6-47*t_6^2-36*t_0*t_7-46*t_1*t_7+t_2*t_7-44*t_3*t_7+48*t_4*t_7-14*t_5*t_7+4*t_6*t_7-36*t_0*t_8-46*t_1*t_8+47*t_2*t_8-34*t_3*t_8-24*t_4*t_8-12*t_5*t_8-47*t_6*t_8+47*t_7*t_8,t_1*t_2+6*t_1*t_5+5*t_0*t_6-2*t_1*t_6-t_4*t_6-t_5*t_6+5*t_0*t_7+t_1*t_7-2*t_2*t_7-7*t_5*t_7+2*t_6*t_7-2*t_1*t_8+3*t_7*t_8,t_0*t_2+t_1*t_4+5*t_0*t_5+32*t_1*t_5-20*t_2*t_5-47*t_3*t_5-37*t_4*t_5-25*t_5^2+19*t_0*t_6+22*t_1*t_6-25*t_2*t_6+25*t_4*t_6-5*t_5*t_6+13*t_6^2+5*t_0*t_7+t_1*t_7+39*t_3*t_7+28*t_4*t_7-9*t_5*t_7-39*t_6*t_7+4*t_0*t_8+t_1*t_8-36*t_3*t_8-14*t_4*t_8-26*t_5*t_8-37*t_6*t_8,t_0*t_1-39*t_1*t_4+40*t_1*t_5-37*t_0*t_6-39*t_1*t_6+19*t_4*t_6-39*t_5*t_6-38*t_0*t_7+39*t_1*t_7+19*t_2*t_7+18*t_5*t_7-19*t_6*t_7+19*t_1*t_8+20*t_7*t_8,t_0^2+12*t_1*t_4+20*t_0*t_5+27*t_1*t_5-8*t_2*t_5+37*t_3*t_5+28*t_4*t_5+30*t_5^2-46*t_0*t_6+24*t_1*t_6-40*t_2*t_6+25*t_4*t_6+16*t_5*t_6-35*t_6^2+29*t_0*t_7+12*t_1*t_7-35*t_2*t_7-8*t_3*t_7-18*t_4*t_7+42*t_5*t_7-12*t_6*t_7-6*t_0*t_8+12*t_1*t_8-15*t_3*t_8+9*t_4*t_8+20*t_5*t_8-30*t_6*t_8+4*t_7*t_8})", 
          "-- without 'CodimBsInv=>4' takes about triple time 
time psi=approximateInverseMap(phi,CodimBsInv=>4)",
          "-- but...
isInverseMap(phi,psi)",
          "-- in this case we can remedy enabling the option MathMode
time psi'=approximateInverseMap(phi,CodimBsInv=>4,MathMode=>true)",
          "isInverseMap(phi,psi')",
          },
    Caveat => {"For the purpose of this method, the option ", TO MathMode, TT"=>true"," is too rigid, especially when the source of the passed map is not a projective space."}
         }
   document { 
    Key => {graph,(graph,RationalMap)}, 
    Headline => "closure of the graph of a rational map", 
     Usage => "graph phi", 
     Inputs => { 
          RationalMap => "phi"
          }, 
     Outputs => { 
          RationalMap => {"the first projection"},
          RationalMap => {"the second projection"}
          }, 
     Consequences => {TT "(p1,p2) = graph phi; p1 * phi == p2"},
    EXAMPLE { 
         "(ZZ/190181)[x_0..x_4]; phi = rationalMap(minors(2,matrix{{x_0..x_3},{x_1..x_4}}),Dominant=>true)",
         "time (p1,p2) = graph phi",
         "time p1 * phi == p2 and p2 * phi^-1 == p1",
          "time describe p2",
          "time projectiveDegrees p2"
          },
    PARA{"When the source of the rational map is a multi-projective variety, the method returns all the projections."},
    EXAMPLE {
          "time graph p2",
          "describe first oo"
          },
    SeeAlso => {(graph,RingMap),graphIdeal}
         }
   document { 
    Key => {(graph,RingMap)}, 
    Headline => "closure of the graph of a rational map", 
     Usage => "graph phi", 
     Inputs => { 
          RingMap => "phi" => {"representing a rational map ",TEX///$\Phi:X--->Y$///}
          }, 
     Outputs => { 
          RingMap => {"representing the projection on the first factor ",TEX///$\mathbf{Graph}(\Phi)--->X$///},
          RingMap => {"representing the projection on the second factor ",TEX///$\mathbf{Graph}(\Phi)--->Y$///}
          }, 
    EXAMPLE { 
          "phi = map(QQ[w,x,y,z],QQ[a,b,c],{-x^2+w*y,-x*y+w*z,-y^2+x*z})", 
          "graph phi"
          },
    SeeAlso => {graphIdeal}
         }
   document { 
    Key => {SegreClass,(SegreClass,Ideal),(SegreClass,RingMap)}, 
    Headline => "Segre class of a closed subscheme of a projective variety", 
     Usage => "SegreClass I", 
     Inputs => { 
          Ideal => "I" => {"a homogeneous ideal of a graded quotient ring ",TEX///$K[x_0,\ldots,x_n]/J$///," defining a subscheme ",TEX///$X=V(I)$///," of ",TEX///$Y=Proj(K[x_0,\ldots,x_n]/J)\subseteq \mathbb{P}^n=Proj(K[x_0,\ldots,x_n])$///}
          }, 
     Outputs => { 
          RingElement => {"the push-forward to the Chow ring of ",TEX///$\mathbb{P}^n$///," of the Segre class ",TEX///$s(X,Y)$///," of ",TEX///$X$///," in ",TEX///$Y$///}
          }, 
       PARA{"This is an example of application of the method ", TO "projectiveDegrees","; see Proposition 4.4 in ",HREF{"http://link.springer.com/book/10.1007%2F978-3-662-02421-8","Intersection theory"},", by W. Fulton, and Subsection 2.3 in ",HREF{"http://www.math.lsa.umich.edu/~idolga/cremonalect.pdf","Lectures on Cremona transformations"},", by I. Dolgachev. See also the corresponding methods in the packages ", HREF{"http://www.math.fsu.edu/~aluffi/CSM/CSM.html", "CSM-A"},", by P. Aluffi, and ", HREF{"http://www.math.uiuc.edu/Macaulay2/doc/Macaulay2-1.9.2/share/doc/Macaulay2/CharacteristicClasses/html/", "CharacteristicClasses"},", by M. Helmer and C. Jost."},
       PARA{"In the example below, we take ", TEX///$Y\subset\mathbb{P}^7$///," to be the dual hypersurface of ",TEX///$\mathbb{P}^1\times\mathbb{P}^1\times\mathbb{P}^1\subset\mathbb{P}^7^*$///, " and ",TEX///$X\subset Y$///, " its singular locus. We compute the push-forward to the Chow ring of ",TEX///$\mathbb{P}^7$///, " of the Segre class both of ",TEX///$X$///, " in ",TEX///$Y$///, " and of ",TEX///$X$///, " in ",TEX///$\mathbb{P}^7$///, ", using both a probabilistic and a deterministic approach."},
    EXAMPLE { 
          "P7 = ZZ/100003[x_0..x_7]",
          "Y = ideal(x_3^2*x_4^2-2*x_2*x_3*x_4*x_5+x_2^2*x_5^2-2*x_1*x_3*x_4*x_6-2*x_1*x_2*x_5*x_6+4*x_0*x_3*x_5*x_6+x_1^2*x_6^2+4*x_1*x_2*x_4*x_7-2*x_0*x_3*x_4*x_7-2*x_0*x_2*x_5*x_7-2*x_0*x_1*x_6*x_7+x_0^2*x_7^2)",
          "X = sub(ideal jacobian Y,P7/Y)",
          "time SegreClass X",
          "time SegreClass lift(X,P7)",
          "time SegreClass(X,MathMode=>true)",
          "time SegreClass(lift(X,P7),MathMode=>true)"
          },
       PARA{"The method also accepts as input a ring map ",TT"phi"," representing a rational map ",TEX///$\Phi:X--->Y$///," between projective varieties. In this case, the method returns the push-forward to the Chow ring of the ambient projective space of ",TEX///$X$///," of the Segre class of the base locus of ",TEX///$\Phi$///, " in ",TEX///$X$///, ", i.e. it basically computes ",TT"SegreClass ideal matrix phi",". In the next example, we compute the Segre class of the base locus of a birational map ",TEX///$\mathbb{G}(1,4)\subset\mathbb{P}^9 ---> \mathbb{P}^6$///,"."},
     EXAMPLE {
          "use ZZ/100003[x_0..x_6]",
          "time phi = invertBirMap toMap(minors(2,matrix{{x_0,x_1,x_3,x_4,x_5},{x_1,x_2,x_4,x_5,x_6}}),Dominant=>2)",
          "time SegreClass phi",
          "B = ideal matrix phi",
          "-- Segre class of B in G(1,4)
time SegreClass B",
          "-- Segre class of B in P^9
time SegreClass lift(B,ambient ring B)"
          },
    SeeAlso => {projectiveDegrees,ChernSchwartzMacPherson} 
         }
   document { 
    Key => {ChernSchwartzMacPherson,(ChernSchwartzMacPherson,Ideal),(ChernSchwartzMacPherson,RingMap)}, 
    Headline => "Chern-Schwartz-MacPherson class of a projective scheme", 
     Usage => "ChernSchwartzMacPherson I", 
     Inputs => { 
          Ideal => "I" => {"a homogeneous ideal defining a closed subscheme ",TEX///$X\subset\mathbb{P}^n$///}
          }, 
     Outputs => { 
          RingElement => {"the push-forward to the Chow ring of ",TEX///$\mathbb{P}^n$///," of the Chern-Schwartz-MacPherson class ",TEX///$c_{SM}(X)$///," of ",TEX///$X$///}
          }, 
     Consequences => {"The coefficient of H^n gives the Euler characteristic of the support of X"},
       PARA{"This is an example of application of the method ", TO "projectiveDegrees",", due to results shown in ",HREF{"http://www.sciencedirect.com/science/article/pii/S0747717102000895","Computing characteristic classes of projective schemes"},", by P. Aluffi. See also the corresponding methods in the packages ", HREF{"http://www.math.fsu.edu/~aluffi/CSM/CSM.html", "CSM-A"},", by P. Aluffi, and ", HREF{"http://www.math.uiuc.edu/Macaulay2/doc/Macaulay2-1.9.2/share/doc/Macaulay2/CharacteristicClasses/html/", "CharacteristicClasses"},", by M. Helmer and C. Jost."},
       PARA{"In the example below, we compute the push-forward to the Chow ring of ",TEX///$\mathbb{P}^4$///, " of the Chern-Schwartz-MacPherson class of the cone over the twisted cubic curve, using both a probabilistic and a deterministic approach."},
    EXAMPLE { 
          "GF(5^7)[x_0..x_4]",
          "C = minors(2,matrix{{x_0,x_1,x_2},{x_1,x_2,x_3}})",
          "time ChernSchwartzMacPherson C",
          "time ChernSchwartzMacPherson(C,MathMode=>true)"
          },
       PARA{"If a ring map representing a rational map between projective varieties is passed as input, then the computation is done for the ideal of the base locus."},
       PARA{"In the case when the input ideal ",TT"I"," defines a smooth projective variety ",TEX///$X$///,", the push-forward of ",TEX///$c_{SM}(X)$///," can be computed much more efficiently using ",TO SegreClass, ". Indeed, in this case, ", TEX///$c_{SM}(X)$///," coincides with the (total) Chern class of the tangent bundle of ",TEX///$X$///," and can be obtained as follows (in general the routine below gives the push-forward of the so-called Chern-Fulton class)."},
    EXAMPLE {
           "-- I homogeneous ideal in a polynomial ring
ChernClass = {mathmode => false} >> o -> (I) -> (s:=SegreClass(I,MathMode=>o.mathmode);s*(1+first gens ring s)^(numgens ring I))",
           "-- example: Chern class of G(1,4)
G = Grassmannian(1,4,CoefficientRing=>ZZ/190181)",
          "time ChernClass G",
          "time ChernClass(G,mathmode=>true)"
            },
    SeeAlso => {euler,SegreClass} 
         }
document { 
    Key => {RationalMap}, 
    Headline => "the class of all rational maps between absolutely irreducible projective varieties over a field", 
    PARA{"An object of the class ",EM "RationalMap", " can be basically considered as a homogeneous ring map of quotients of polynomial rings by homogeneous ideals. The main advantage is that things computed using deterministic algorithms (i.e., turning on the option ",TO "MathMode",TT "=>true",") are stored internally. The following methods and operators: ",TO (degree,RationalMap),", ",TO (degrees,RationalMap),", ",TO (multidegree,RationalMap),", ", TO (inverse,RationalMap),", ",TO (symbol *, RationalMap,RationalMap),", ",TO (symbol ^, RationalMap,ZZ),", ",TO (symbol ^**, RationalMap,Ideal),", ",TO (symbol _*, RationalMap)," are deterministic, and therefore their outputs are stored."},
   PARA{"The constructor for the class is ",TO "rationalMap",", which works quite similar to ",TO "toMap","."}
         }
undocumented {(symbol ^*,RationalMap)}
document { 
    Key => {(symbol ^**,RationalMap,Ideal)}, 
    Headline => "inverse image via a rational map", 
     Usage => "phi^**I", 
     Inputs => { 
          RationalMap => "phi",
          Ideal => "I" => {"a homogeneus ideal in the coordinate ring of the target of ",TT "phi"},
          }, 
     Outputs => { 
          Ideal => {"the ideal of the closure of the inverse image of ", TT"V(I)", " via ",TT"phi"}
          },
     PARA{"In most cases this is equivalent to ",TT"phi^*I", ", which is faster but may not take into account other representations of the map."},
     SeeAlso => {(symbol _*,RationalMap),(target,RationalMap)}
         }
document { 
    Key => {(symbol _*,RationalMap),(symbol SPACE,RationalMap,Ideal)}, 
    Headline => "direct image via a rational map", 
     Usage => "phi_*I 
               phi I", 
     Inputs => { 
          RationalMap => "phi" => {TT"I", " a homogeneus ideal in the coordinate ring of the source of ",TT "phi"},
          }, 
     Outputs => { 
          Ideal => {"the ideal of the closure of the direct image of ", TT"V(I)", " via ",TT"phi"}
          },
     SeeAlso => {(symbol ^**,RationalMap,Ideal),(source,RationalMap)}
         }
document { 
    Key => {(symbol ^,RationalMap,ZZ)}, 
    Headline => "power", 
     Usage => "phi^n", 
     Inputs => { 
          RationalMap => "phi",
          ZZ => "n",
          }, 
     Outputs => { 
          RationalMap => {TT"phi^n"}
          },
     PARA{"If the map is birational, then negative values may be used and the inverse will be computed using ",TT"invertBirMap(phi,MathMode=>true)"," (see ",TO (invertBirMap,RationalMap),")."}
         }
document { 
    Key => {(inverse,RationalMap)}, 
    Headline => "inverse of a birational map", 
     Usage => "inverse phi", 
     Inputs => { 
          RationalMap => "phi" => {"a birational map"}
          }, 
     Outputs => { 
          RationalMap => {"the inverse map of ",TT"phi"}
          },
     PARA{"This is equivalent both to ",TT"invertBirMap(phi,MathMode=>true)"," and to ",TT"phi^(-1)","."},
         },
     SeeAlso => {(invertBirMap,RationalMap),(symbol ^,RationalMap)}
document { 
    Key => {(ideal,RationalMap)}, 
    Headline => "base locus of a rational map", 
     Usage => "ideal phi", 
     Inputs => { 
          RationalMap => "phi"
          }, 
     Outputs => { 
          Ideal => {"the ideal of the base locus of ",TT"phi"}
          }
         }
document { 
    Key => {(target,RationalMap)}, 
    Headline => "coordinate ring of the target for a rational map", 
     Usage => "target phi", 
     Inputs => { 
          RationalMap => "phi"
          }, 
     Outputs => { 
          Ring => {"the coordinate ring of the target of ",TT"phi"}
          },
     PARA{"This is equivalent to ",TT "source map phi","."},
     SeeAlso => {(source,RationalMap)}
         }
document { 
    Key => {(source,RationalMap)}, 
    Headline => "coordinate ring of the source for a rational map", 
     Usage => "source phi", 
     Inputs => { 
          RationalMap => "phi"
          }, 
     Outputs => { 
          Ring => {"the coordinate ring of the source of ",TT"phi"}
          },
     PARA{"This is equivalent to ",TT "target map phi","."},
     SeeAlso => {(target,RationalMap)}
         }
document { 
    Key => {(degree,RationalMap)}, 
    Headline => "degree of a rational map", 
     Usage => "degree phi", 
     Inputs => { 
          RationalMap => "phi"
          }, 
     Outputs => { 
          ZZ => {"the degree of ",TT"phi"}
          },
     Consequences => {
           "The method returns 1 if and only if the map is birational onto its image"
          },
     PARA{"This is a shortcut for ",TT "degreeOfRationalMap(phi,MathMode=>true)",", see ",TO "degreeOfRationalMap","."}
         }
document { 
    Key => {(symbol !,RationalMap)}, 
    Headline => "calculates every possible thing", 
     Usage => "phi!", 
     Inputs => { 
          RationalMap => "phi"
          }, 
     Outputs => { 
          RationalMap => {"the same rational map ",TT"phi"}
          },
     PARA{"This method (mainly used for tests) applies all the deterministic methods that are available."},
     EXAMPLE {
          "QQ[x_0..x_5]; phi = rationalMap {x_4^2-x_3*x_5,x_2*x_4-x_1*x_5,x_2*x_3-x_1*x_4,x_2^2-x_0*x_5,x_1*x_2-x_0*x_4,x_1^2-x_0*x_3}", 
          "describe phi",
          "time phi!",
          "describe phi",
          "QQ[x_0..x_4]; psi = rationalMap {-x_1^2+x_0*x_2,-x_1*x_2+x_0*x_3,-x_2^2+x_1*x_3,-x_1*x_3+x_0*x_4,-x_2*x_3+x_1*x_4,-x_3^2+x_2*x_4}",
          "describe psi",
          "time psi!",
          "describe psi"
          }
         }
document { 
    Key => {(degrees,RationalMap),(multidegree,RationalMap)}, 
    Headline => "projective degrees of a rational map", 
     Usage => "degrees phi 
               multidegree phi", 
     Inputs => { 
          RationalMap => "phi"
          }, 
     Outputs => { 
          List => {"the list of projective degrees of ",TT"phi"}
          },
     PARA{"This is a shortcut for ",TT "projectiveDegrees(phi,MathMode=>true)",", see ",TO "projectiveDegrees","."}
         }
document { 
    Key => {(coefficients,RationalMap)}, 
    Headline => "coefficient matrix of a rational map", 
     Usage => "coefficients phi", 
     Inputs => { 
          RationalMap => "phi"
          }, 
     Outputs => { 
          Matrix => {"the coefficient matrix of the polynomials defining ",TT"phi"}
          },
     EXAMPLE {
          "K = QQ; ringP9 = K[x_0..x_9];",
          "M = random(K^10,K^10)",
          "phi = rationalMap ((vars ringP9) * (transpose M))",
          "M' = coefficients phi",
          "M == M'"
          }
         }
document { 
    Key => {(flatten,RationalMap)}, 
    Headline => "write source and target as nondegenerate varieties", 
     Usage => "flatten phi", 
     Inputs => { 
          RationalMap => "phi"
          }, 
     Outputs => { 
          RationalMap => {"a rational map isomorphic to the original map, flattened in the sense that the ideals of source and target contain no linear forms"}
          },
     EXAMPLE {
          "P5 = QQ[t_0..t_5]; phi = rationalMap(P5/(35*t_1+45*t_2+21*t_3+525*t_4+1365*t_5,1575*t_0*t_2-3250*t_2^2+735*t_0*t_3-1890*t_2*t_3-1666*t_3^2+17150*t_0*t_4-47250*t_2*t_4-22050*t_3*t_4-276850*t_4^2+46550*t_0*t_5-122850*t_2*t_5-57330*t_3*t_5-1433250*t_4*t_5-1864450*t_5^2),P5/(315*t_0+280*t_1+45*t_2+21*t_3+210*t_4+1050*t_5),{-45*t_2-21*t_3-490*t_4-1330*t_5, 45*t_2+21*t_3+525*t_4+1365*t_5, 35*t_2, 35*t_3, 35*t_4, 35*t_5})",
          "describe phi",
          "psi = flatten phi",
          "describe psi"
          }
         }
document { 
    Key => {(projectiveDegrees,RationalMap),(projectiveDegrees,RationalMap,ZZ)}, 
    Headline => "projective degrees of a rational map", 
     Usage => "projectiveDegrees Phi", 
     Inputs => { 
          RationalMap => "Phi"
          }, 
     Outputs => { 
          List => {"the list of projective degrees of ",TT"Phi"}
          },
     PARA{"This computation is done through the corresponding method for ring maps. See ",TO (projectiveDegrees,RingMap)," for more details and examples."},
     SeeAlso => {(projectiveDegrees,RingMap),(degrees,RationalMap),(degree,RationalMap)}
         }
document { 
    Key => {(degreeOfRationalMap,RationalMap)}, 
    Headline => "degree of a rational map", 
     Usage => "degreeOfRationalMap Phi", 
     Inputs => { 
          RationalMap => "Phi"
          }, 
     Outputs => { 
          ZZ => {"the degree of ",TT"Phi"}
          },
     Consequences => { 
          "The method returns 1 if and only if the map is birational onto its image" 
          }, 
     PARA{"This computation is done through the corresponding method for ring maps. See ",TO (degreeOfRationalMap,RingMap)," for more details and examples."},
     SeeAlso => {(degreeOfRationalMap,RingMap),projectiveDegrees,(degree,RationalMap)}
         }
document { 
    Key => {(symbol *,RationalMap,RationalMap),(composeRationalMaps,RationalMap,RationalMap)}, 
    Headline => "composition of rational maps", 
     Usage => "phi * psi 
               composeRationalMaps(phi,psi)", 
     Inputs => { 
          RationalMap => "phi" => { TEX///$X ---> Y$/// },
          RationalMap => "psi" => { TEX///$Y ---> Z$/// }
          }, 
     Outputs => { 
          RationalMap => { TEX///$X ---> Z$///, ", the composition of ",TT"phi"," and ",TT"psi"}
          }, 
     PARA{"This computation is done through the corresponding method for ring maps. See ",TO (composeRationalMaps,RingMap,RingMap)," for more details."},
     SeeAlso => {(composeRationalMaps,RingMap,RingMap),(symbol *,RingMap,RingMap)}
         }
document { 
    Key => {(symbol ==,RationalMap,RationalMap),(symbol ==,ZZ,RationalMap),(symbol ==,RationalMap,ZZ)}, 
    Headline => "equality of rational maps", 
     Usage => "phi == psi", 
     Inputs => { 
          RationalMap => "phi",
          RationalMap => "psi"
          }, 
     Outputs => { 
          Boolean => {" whether ",TT"phi"," and ",TT"psi", " are the same rational map"}
          }, 
     EXAMPLE {
          "QQ[x_0..x_5]",
          "phi = rationalMap {x_0*x_4^2-x_0*x_3*x_5,x_0*x_2*x_4-x_0*x_1*x_5,x_0*x_2*x_3-x_0*x_1*x_4,x_0*x_2^2-x_0^2*x_5,x_0*x_1*x_2-x_0^2*x_4,x_0*x_1^2-x_0^2*x_3}",
          "psi = rationalMap {x_4^2-x_3*x_5,x_2*x_4-x_1*x_5,x_2*x_3-x_1*x_4,x_2^2-x_0*x_5,x_1*x_2-x_0*x_4,x_1^2-x_0*x_3}", 
          "phi == psi"
          }
          }
   document { 
    Key => {(isInverseMap,RationalMap,RationalMap)}, 
    Headline => "checks whether a rational map is the inverse of another", 
     Usage => "isInverseMap(phi,psi)", 
     Inputs => { 
          "phi" => RationalMap, 
          "psi" => RationalMap
          }, 
     Outputs => { 
          Boolean => {"whether the composition ",TT"phi * psi"," coincides with the identity map" }
          },
    SeeAlso => {(symbol ==,RationalMap,RationalMap),(symbol *,RationalMap,RationalMap),(isInverseMap,RingMap,RingMap)} 
          } 
document { 
     Key => {(isBirational,RationalMap)}, 
     Headline => "whether a rational map is birational", 
     Usage => "isBirational Phi", 
     Inputs => { 
          "phi" => RationalMap          
               }, 
     Outputs => { 
          Boolean => {"whether ",TT"Phi"," is birational"} 
                },
     Consequences => { 
          TT "isBirational Phi => isDominant Phi" 
          }, 
          PARA{"See ",TO (isBirational,RingMap), " for more details and examples."},
    SeeAlso => {(isBirational,RingMap),isDominant}
          }
document { 
     Key => {(isDominant,RationalMap)}, 
     Headline => "whether a rational map is dominant", 
     Usage => "isDominant Phi", 
     Inputs => { 
          "phi" => RationalMap          
               }, 
     Outputs => { 
          Boolean => {"whether ",TT"Phi"," is dominant"} 
                },
          PARA{"See ",TO (isDominant,RingMap), " for more details and examples."},
    SeeAlso => {(isDominant,RingMap),isBirational}
          }
document { 
     Key => {(image,RationalMap,ZZ),(image,ZZ,RationalMap),(image,RationalMap)}, 
     Headline => "closure of the image of a rational map", 
     Usage => "image Phi 
               image(Phi,d) 
               image(d,Phi)", 
     Inputs => { 
          "Phi" => RationalMap,
           "d" => ZZ        
               }, 
     Outputs => { 
          Ideal => {"the ideal defining the closure of the image of ",TT"Phi",", or its degree ",TT"d"," homogeneous component if ",TT"d", " is passed"} 
                },
          PARA{"This computation is done through the kernel of a ring map representing the rational map. See ",TO (kernel,RingMap), " and ",TO (kernel,RingMap,ZZ)," for more details."},
    SeeAlso => {(kernel,RingMap,ZZ),(kernel,RingMap)}
          }
   undocumented{(kernel,RationalMap),(kernel,RationalMap,ZZ),(kernel,ZZ,RationalMap)} 
document { 
    Key => {(invertBirMap,RationalMap)}, 
    Headline => "inverse of a birational map", 
     Usage => "invertBirMap phi", 
     Inputs => { 
         "phi" => RationalMap => {"a birational map"} 
          }, 
     Outputs => { 
          RationalMap => {"the inverse map of ",TT"phi"}
          },
     PARA{"This computation is done applying the method to a ring map representing the rational map. See ",TO (invertBirMap,RingMap)," for more details."},
     SeeAlso => {(invertBirMap,RingMap),(inverse,RationalMap),(symbol ^,RationalMap,ZZ)}
         }
document { 
    Key => {parametrize,(parametrize,Ideal),(parametrize,QuotientRing)}, 
    Headline => "parametrization of linear varieties and hyperquadrics", 
     Usage => "parametrize I", 
     Inputs => { 
         "I" => Ideal => {"the ideal of a linear variety or of a hyperquadric"} 
          }, 
     Outputs => { 
          RationalMap => {"a birational map ",TT"phi"," such that ",TT"I == image phi"}
          },
     EXAMPLE {
          "ringP9 = QQ[x_0..x_9]; I = ideal apply(4,j->random(1,ringP9))",
          "time phi = parametrize I",
          "I == image phi"
          }
         }
document { 
    Key => {(approximateInverseMap,RationalMap,ZZ),(approximateInverseMap,RationalMap)}, 
    Headline => "random map related to the inverse of a birational map", 
     Usage => "approximateInverseMap phi 
               approximateInverseMap(phi,d)", 
     Inputs => { 
          RationalMap => "phi" => {"a birational map"},
              ZZ  => "d"   => {"optional, but it should be the degree of the forms defining the inverse of ",TT"phi"}
          }, 
     Outputs => { 
          RationalMap => {"a random rational map which in some sense is related to the inverse of ",TT"phi"," (e.g., they should have the same base locus)"}
          }, 
     PARA{"This computation is done applying the method to a ring map representing the rational map. See ",TO (approximateInverseMap,RingMap)," for more details."},
     SeeAlso => {(approximateInverseMap,RingMap),(invertBirMap,RingMap),(inverse,RationalMap),(symbol ^,RationalMap,ZZ)}
}
document { 
    Key => {(map,RationalMap)}, 
    Headline => "get the ring map defining a rational map", 
     Usage => "map Phi", 
     Inputs => { 
          RationalMap => "Phi"
          }, 
     Outputs => { 
          RingMap => {"the ring map from which the rational map ",TT"Phi"," was defined"}
          },
     EXAMPLE {
          "QQ[t_0..t_3]",
          "Phi = rationalMap {t_1^2+t_2^2+t_3^2,t_0*t_1,t_0*t_2,t_0*t_3}",
          "map Phi"
          },
     SeeAlso => {(matrix,RationalMap)}
         }
document { 
    Key => {(matrix,RationalMap)}, 
    Headline => "the matrix associated to a rational map", 
     Usage => "matrix Phi", 
     Inputs => { 
          RationalMap => "Phi"
          }, 
     Outputs => { 
          Matrix => {"the matrix associated to the ring map defining the rational map ",TT"Phi"}
          },
     PARA{"This is equivalent to ",TT "matrix map Phi","."},
     SeeAlso => {(matrix,RingMap)}
         }
document { 
    Key => {(entries,RationalMap)}, 
    Headline => "the entries of the matrix associated to a rational map", 
     Usage => "entries Phi", 
     Inputs => { 
          RationalMap => "Phi"
          }, 
     Outputs => { 
          List => {"the entries of the matrix associated to the ring map defining the rational map ",TT"Phi"}
          },
     PARA{"This is equivalent to ",TT "flatten entries matrix Phi","."},
     SeeAlso => {(matrix,RationalMap)}
         }
document { 
    Key => {(symbol |,RationalMap,Ideal),(symbol |,RationalMap,RingElement),(symbol |,RationalMap,Ring)}, 
    Headline => "restriction of a rational map", 
     Usage => "Phi | I", 
     Inputs => { 
          RationalMap => "Phi" => { TEX///$\phi:X ---> Y$/// },
          Ideal => "I" => {"a homogeneous ideal of a subvariety ",TEX///$Z\subset X$/// }
          }, 
     Outputs => { 
          RationalMap => {"the restriction of ",TEX///$\phi$///," to ",TEX///$Z$///,", ",TEX///$\phi|_{Z}: Z ---> Y$///}
          }, 
     EXAMPLE {
          "P5 = ZZ/190181[x_0..x_5]",
          "Phi = rationalMap {x_4^2-x_3*x_5,x_2*x_4-x_1*x_5,x_2*x_3-x_1*x_4,x_2^2-x_0*x_5,x_1*x_2-x_0*x_4,x_1^2-x_0*x_3}",
          "I = ideal(random(2,P5),random(3,P5));",
          "Phi' = Phi|I",
          "describe Phi",
          "describe Phi'"
          },
     SeeAlso => {(symbol ||,RationalMap,Ideal)}
         }
document { 
    Key => {(symbol ||,RationalMap,Ideal),(symbol ||,RationalMap,RingElement),(symbol ||,RationalMap,Ring)}, 
    Headline => "restriction of a rational map", 
     Usage => "Phi || J", 
     Inputs => { 
          RationalMap => "Phi" => { TEX///$\phi:X ---> Y$/// },
          Ideal => "J" => {"a homogeneous ideal of a subvariety ",TEX///$Z\subset Y$/// }
          }, 
     Outputs => { 
          RationalMap => {"the restriction of ",TEX///$\phi$///," to ",TEX///${\phi}^{(-1)} Z$///,", ",TEX///${{\phi}|}_{{\phi}^{(-1)} Z}: {\phi}^{(-1)} Z ---> Z$///}
          }, 
     EXAMPLE {
          "P5 = ZZ/190181[x_0..x_5]",
          "Phi = rationalMap {x_4^2-x_3*x_5,x_2*x_4-x_1*x_5,x_2*x_3-x_1*x_4,x_2^2-x_0*x_5,x_1*x_2-x_0*x_4,x_1^2-x_0*x_3}",
          "J = ideal random(1,P5);",
          "Phi' = Phi||J",
          "describe Phi",
          "describe Phi'"
          },
     SeeAlso => {(symbol |,RationalMap,Ideal)}
         }
document { 
    Key => {rationalMap,(rationalMap,RingMap),(rationalMap,Matrix),(rationalMap,List),(rationalMap,Ideal),(rationalMap,Ideal,ZZ),(rationalMap,Ideal,ZZ,ZZ),(rationalMap,Ring),(rationalMap,Ring,Ring),(rationalMap,RationalMap),(rationalMap,Ring,Ring,Matrix),(rationalMap,Ring,Ring,List)}, 
    Headline => "makes a rational map", 
     Usage => "rationalMap phi 
               rationalMap F", 
     Inputs => { 
          RingMap => { "or a ", TO Matrix, ", or a ",TO List,", etc."},
          }, 
     Outputs => { RationalMap => {"the rational map represented by ",TT"phi"," or by the ring map defined by ",TT"F"}
          }, 
        PARA{"This is the basic construction for a ",TO RationalMap,". The method is quite similar to ",TO toMap,", except that it returns a ", TO RationalMap," and not a ",TO RingMap,"."},
    EXAMPLE { 
          "R := QQ[t_0..t_8]", 
          "F = matrix{{t_0*t_3*t_5, t_1*t_3*t_6, t_2*t_4*t_7, t_2*t_4*t_8}}",
          "phi = toMap F",
          "rationalMap phi",
          "rationalMap F" 
          }, 
       PARA{"Multigraded rings are also permitted but in this case the method returns an object of the class ",TT"MultihomogeneousRationalMap",", which can be considered as an extension of the class ",TT"RationalMap","."},
    EXAMPLE { 
          "R' := newRing(R,Degrees=>{3:{1,0,0},2:{0,1,0},4:{0,0,1}})",
          "F' = sub(F,R')",
          "phi' = toMap F'",
          "rationalMap phi'",
          "rationalMap F'" 
           }, 
    SeeAlso => {toMap}
}

undocumented{(net,RationalMap),(describe,RationalMap),(expression,RationalMap),(toString,RationalMap),(toMap,RationalMap),(lift,RationalMap),(symbol ~,RationalMap)}

document { 
    Key => {specialCremonaTransformation,(specialCremonaTransformation,Ring,ZZ),(specialCremonaTransformation,ZZ,Ring),(specialCremonaTransformation,ZZ)}, 
    Headline => "special Cremona transformations whose base locus has dimension at most three", 
     Usage => "specialCremonaTransformation i  
               specialCremonaTransformation(i,K)", 
     Inputs => {         
         "i" => ZZ   => {"an integer between 1 and 12"},
         "K" => Ring => {"the ground field (optional, the default value is ",TO QQ,")"}
          }, 
     Outputs => { 
          RationalMap => {"an example of special Cremona transformation over ",TT"K",", according to the classification given in Table 1 of ",HREF{"https://arxiv.org/abs/1509.06028","arXiv:1509.06028"}}
          },
     PARA{"A Cremona transformation is said to be special if the base locus scheme is smooth and irreducible. To ensure this condition, the field ",TT"K"," must be large enough but no check is made."},
     EXAMPLE {
          "time apply(1..12,i -> describe specialCremonaTransformation(i,ZZ/3331))"
          },
    SeeAlso => {"quadroQuadricCremonaTransformation"}
         }
document { 
    Key => {quadroQuadricCremonaTransformation,(quadroQuadricCremonaTransformation,Ring,ZZ,ZZ),(quadroQuadricCremonaTransformation,ZZ,ZZ,Ring),(quadroQuadricCremonaTransformation,ZZ,ZZ)}, 
    Headline => "quadro-quadric Cremona transformations", 
     Usage => "quadroQuadricCremonaTransformation(n,i) 
               quadroQuadricCremonaTransformation(n,i,K)", 
     Inputs => {      
         "n" => ZZ   => {"the dimension of the projective space"},
         "i" => ZZ   => {"the ",TT"i","-th case in the classification for ",TT"P^n", " (for instance, if ",TT"n=5"," then ",TT"1<=i<=39",")"},
         "K" => Ring => {"the ground field (optional, the default value is ",TO QQ,")"}
          }, 
     Outputs => { 
          RationalMap => {"an example of quadro-quadric Cremona transformation over ",TT"K",", according to the classifications given in the paper ",HREF{"https://doi.org/10.5802/aif.2839","doi: 10.5802/aif.2839"}, ", by Pirio and Russo."}
          },
     EXAMPLE {
          "quadroQuadricCremonaTransformation(5,23)",
          "describe oo"
          },
     PARA{"In addition, the four pairs ",TT"(n,i)=(5,1),(8,1),(14,1),(26,1)"," correspond to the four examples of special quadro-quadric Cremona transformations:"},
     EXAMPLE {
          "describe quadroQuadricCremonaTransformation(5,1)",
          "describe quadroQuadricCremonaTransformation(8,1)",
          "describe quadroQuadricCremonaTransformation(14,1)",
          "describe quadroQuadricCremonaTransformation(26,1)"
          },
     SeeAlso => {"specialCremonaTransformation"}
         }

TEST ///  --- quadro-quadric Cremona transformations 
    K=ZZ/3331; ringP5=ZZ/33331[x_0..x_5]; ringP8=GF(331^2)[x_0..x_8]; ringP14=QQ[x_0..x_14]; ringP20=(ZZ/3331)[t_0..t_20]; 
    phi1=toMap trim minors(2,genericSymmetricMatrix(ringP5,3)) 
    phi2=toMap minors(2,genericMatrix(ringP8,3,3)) 
    phi3=toMap pfaffians(4,genericSkewMatrix(ringP14,6)) 
    use ringP20
    phi4=map(ringP20,ringP20,{t_10*t_15-t_9*t_16+t_6*t_20,t_10*t_14-t_8*t_16+t_5*t_20,t_9*t_14-t_8*t_15+t_4*t_20,t_6*t_14-t_5*t_15+t_4*t_16,t_11*t_13-t_16*t_17+t_15*t_18-t_14*t_19+t_12*t_20,t_3*t_13-t_10*t_17+t_9*t_18-t_8*t_19+t_7*t_20,t_10*t_12-t_2*t_13-t_7*t_16-t_6*t_18+t_5*t_19,t_9*t_12-t_1*t_13-t_7*t_15-t_6*t_17+t_4*t_19,t_8*t_12-t_0*t_13-t_7*t_14-t_5*t_17+t_4*t_18,t_10*t_11-t_3*t_16+t_2*t_20,t_9*t_11-t_3*t_15+t_1*t_20,t_8*t_11-t_3*t_14+t_0*t_20,t_7*t_11-t_3*t_12+t_2*t_17-t_1*t_18+t_0*t_19,t_6*t_11-t_2*t_15+t_1*t_16,t_5*t_11-t_2*t_14+t_0*t_16,t_4*t_11-t_1*t_14+t_0*t_15,t_6*t_8-t_5*t_9+t_4*t_10,t_3*t_6-t_2*t_9+t_1*t_10,t_3*t_5-t_2*t_8+t_0*t_10,t_3*t_4-t_1*t_8+t_0*t_9,t_2*t_4-t_1*t_5+t_0*t_6})
    time psi1=invertBirMap(phi1)
    time psi2=invertBirMap(phi2,MathMode=>true)
    time psi3=invertBirMap(phi3,MathMode=>false)
    time psi4=invertBirMap phi4
    time assert (isInverseMap(phi1,psi1) and isInverseMap(phi2,psi2) and isInverseMap(phi3,psi3) and isInverseMap(phi4,psi4))
    time assert (degreeOfRationalMap(phi1,MathMode=>true) == 1 and degreeOfRationalMap phi2 == 1 and degreeOfRationalMap phi3 == 1 and degreeOfRationalMap phi4 == 1)
///

TEST /// 
    ringP5=(ZZ/7)[x_0..x_5];
    phi=toMap(minors(2,matrix {{x_0, x_1, x_2, x_3, x_4}, {x_1, x_2, x_3, x_4, x_5}}),Dominant=>infinity);
    time psi=invertBirMap(phi)
    assert(isInverseMap(phi,psi))
    phi'=invertBirMap(psi);
    m={1, 2, 4, 8, 11, 10};
    time assert(isInverseMap(phi',psi) and isInverseMap(psi,phi'))
    time assert(projectiveDegrees(psi,MathMode=>true) == reverse {1, 2, 4, 8, 11, 10})
///
    
TEST /// -- Hankel matrices
    phi = (r,K) -> (x:=local x; R:=K[x_0..x_(2*r)]; M:=matrix(for i to r list for j to r list x_(i+j)); toMap ideal jacobian ideal det M);
    psi = (r,K) -> (x:=local x; R:=K[x_0..x_(2*r)]; M:=matrix(for i to r-1 list for j to r+1 list x_(i+j)); toMap minors(r,M));
    psi'= (r,K) -> toMap(psi(r,K),Dominant=>2);
    psi0= (r,K) -> (f:=psi'(r,K); map((target f)/(ideal f(sub(random(1,ambient source f),source f))),target f) * f);
    assert(projectiveDegrees phi(2,frac(ZZ/331[i]/(i^2+1)))  == {1, 2, 4, 4, 2})   
    assert(projectiveDegrees psi'(2,ZZ/331) == {1, 2, 4, 4, 2})   
    assert(projectiveDegrees(psi'(2,ZZ/331),MathMode=>true) == {1, 2, 4, 4, 2})   
    assert(projectiveDegrees psi0(2,ZZ/331) ==    {2, 4, 4, 2})
    assert(projectiveDegrees(psi0(2,ZZ/331),MathMode=>true) ==    {2, 4, 4, 2})
    assert(degreeOfRationalMap phi(2,QQ) == 2)
    assert(projectiveDegrees invertBirMap psi'(2,ZZ/101) == reverse {1, 2, 4, 4, 2})
    assert(projectiveDegrees(invertBirMap psi'(2,ZZ/5),MathMode=>true) == reverse {1, 2, 4, 4, 2})
    assert(projectiveDegrees phi(3,ZZ/3331)  == {1, 3, 9, 17, 21, 15, 5})   
    assert(projectiveDegrees psi'(3,ZZ/3331) == {1, 3, 9, 17, 21, 15, 5})   
    assert(projectiveDegrees psi0(3,ZZ/3331) ==    {3, 9, 17, 21, 15, 5})
    assert(degreeOfRationalMap phi(3,ZZ/3331) == 5)
    assert(projectiveDegrees invertBirMap psi'(3,ZZ/3331) == reverse {1, 3, 9, 17, 21, 15, 5})
    assert(degreeOfRationalMap phi(4,ZZ/431) == 14)
///    

TEST ///  -- special map P^8 ---> P^11
    K=ZZ/331; ringP8=K[x_0..x_8]; ringP11=K[y_0..y_11];
    phi=map(ringP8,ringP11,{-5*x_0*x_3+x_2*x_4+x_3*x_4+35*x_0*x_5-7*x_2*x_5+x_3*x_5-x_4*x_5-49*x_5^2-5*x_0*x_6+2*x_2*x_6-x_4*x_6+27*x_5*x_6-4*x_6^2+x_4*x_7-7*x_5*x_7+2*x_6*x_7-2*x_4*x_8+14*x_5*x_8-4*x_6*x_8,-x_1*x_2-6*x_1*x_5-5*x_0*x_6+2*x_1*x_6+x_4*x_6+x_5*x_6-5*x_0*x_7-x_1*x_7+2*x_2*x_7+7*x_5*x_7-2*x_6*x_7+2*x_1*x_8-3*x_7*x_8,-25*x_0^2+9*x_0*x_2+10*x_0*x_4-2*x_2*x_4-x_4^2+29*x_0*x_5-x_2*x_5-7*x_4*x_5-13*x_0*x_6+3*x_4*x_6+x_5*x_6-x_0*x_7+2*x_2*x_7-x_4*x_7+7*x_5*x_7-2*x_6*x_7-8*x_0*x_8+2*x_4*x_8-3*x_7*x_8,x_2*x_4+x_3*x_4+x_4^2+7*x_2*x_5-9*x_4*x_5+12*x_5*x_6-4*x_6^2+2*x_3*x_7+2*x_4*x_7-14*x_5*x_7+4*x_6*x_7+x_3*x_8-x_4*x_8-14*x_5*x_8+x_6*x_8,-5*x_0*x_4+x_2*x_4-7*x_2*x_5+8*x_4*x_5-5*x_0*x_6+2*x_2*x_6-x_4*x_6+x_5*x_6-x_4*x_7+7*x_5*x_7-2*x_6*x_7-x_4*x_8+7*x_5*x_8-2*x_6*x_8,x_0*x_4+x_4^2-7*x_1*x_5-8*x_4*x_5+x_0*x_6+x_1*x_6+2*x_4*x_6-x_5*x_6+x_4*x_7-7*x_5*x_7+2*x_6*x_7+x_4*x_8-7*x_5*x_8+2*x_6*x_8,x_2*x_3+x_4^2-8*x_4*x_5+x_4*x_6+6*x_5*x_6-2*x_6^2+x_3*x_7+x_4*x_7-7*x_5*x_7+2*x_6*x_7+x_4*x_8-7*x_5*x_8+2*x_6*x_8,x_1*x_3-7*x_1*x_5+x_1*x_6+x_4*x_6-7*x_5*x_6+2*x_6^2-x_3*x_7,-4*x_0*x_3+x_3*x_4-x_4^2-7*x_0*x_5+8*x_4*x_5+x_0*x_6-x_4*x_6-6*x_5*x_6+2*x_6^2-x_3*x_7-x_4*x_7+7*x_5*x_7-2*x_6*x_7-x_4*x_8+7*x_5*x_8-2*x_6*x_8,-5*x_0*x_2+2*x_2^2+x_2*x_4-x_4^2-x_2*x_5+8*x_4*x_5-10*x_0*x_6+2*x_5*x_6+2*x_2*x_7-2*x_4*x_7+14*x_5*x_7-4*x_6*x_7+5*x_0*x_8-3*x_2*x_8-2*x_4*x_8+7*x_5*x_8-2*x_6*x_8-3*x_7*x_8,-5*x_0*x_1+x_1*x_2+x_1*x_4-4*x_0*x_6-x_1*x_6+x_4*x_6+x_0*x_7,x_0*x_2-x_1*x_2+5*x_0*x_4+x_1*x_4-14*x_1*x_5-x_2*x_5-8*x_4*x_5-8*x_0*x_6+2*x_1*x_6+4*x_4*x_6+2*x_2*x_7+4*x_0*x_8+3*x_1*x_8-7*x_5*x_8+2*x_6*x_8-3*x_7*x_8});
    Z=ideal(y_2*y_4+y_3*y_4+y_4^2+5*y_2*y_5+y_3*y_5+5*y_4*y_5-y_1*y_6-4*y_2*y_6-5*y_5*y_6-4*y_2*y_7-2*y_4*y_7-y_1*y_8+4*y_4*y_8-5*y_5*y_8-4*y_5*y_9+3*y_7*y_9-4*y_8*y_9-y_3*y_10-3*y_6*y_10-5*y_8*y_10-y_4*y_11+4*y_6*y_11+5*y_8*y_11,3*y_1*y_3-y_2*y_3-3*y_3*y_4-y_4^2+2*y_0*y_5-y_3*y_5+y_1*y_6+2*y_2*y_6+3*y_5*y_6-7*y_2*y_7-4*y_4*y_7+7*y_1*y_8-2*y_4*y_8+y_0*y_9-y_4*y_9+2*y_5*y_9+2*y_7*y_9+y_8*y_9-7*y_0*y_10+5*y_3*y_10-3*y_6*y_10-y_0*y_11-2*y_3*y_11-2*y_4*y_11,7*y_0*y_1+y_0*y_4+7*y_1*y_4-y_3*y_4+8*y_0*y_5-y_3*y_5-y_1*y_6+7*y_2*y_6+8*y_5*y_6+y_2*y_7+8*y_4*y_7-y_1*y_8-8*y_4*y_8+7*y_5*y_9-8*y_7*y_9+7*y_8*y_9+y_0*y_10-y_3*y_10+8*y_6*y_10-7*y_0*y_11-7*y_4*y_11-7*y_6*y_11);
    time assert(kernelComponent(phi,2) == Z)
    time assert(projectiveDegrees phi == {1, 2, 4, 8, 16, 23, 23, 16, 8})
    time assert(degreeOfRationalMap phi == 1)
    H=ideal random(1,ringP11)
    phi'=map(ringP8/phi(H),ringP8) * phi;
    time assert ( kernelComponent(phi',1) == H )
    Q=ideal random(2,ringP11)
    phi'=map(ringP8/phi(Q),ringP8) * phi;
    time assert ( kernelComponent(phi',2) == Q+Z )
    phi=toMap(phi,Dominant=>Z)
    ideal matrix approximateInverseMap(approximateInverseMap(phi,MathMode=>true)) == ideal matrix phi
/// 
    
TEST ///
    K=ZZ/761; P4=K[x_0..x_4];
    S4=P4/ideal(x_0^3+x_1^3+x_2^3); u=gens S4;
    time phi=toMap(minors(2,matrix{{u_0,u_1,u_2,u_3},{u_1,u_2,u_3,u_4}}),Dominant=>infinity)
    time assert (projectiveDegrees phi == {3, 6, 12, 12})
    time assert (projectiveDegrees(phi,MathMode=>true) == {3, 6, 12, 12})
    time assert(isDominant(phi,MathMode=>true) and isBirational phi)
    time psi=invertBirMap(phi,MathMode=>true)
    time assert (projectiveDegrees psi == reverse {3, 6, 12, 12})
    time assert (projectiveDegrees(psi,MathMode=>true) == reverse {3, 6, 12, 12})
///

TEST ///
    K=ZZ/101; R=K[t_0..t_7];
    R=R/ideal(t_3^2*t_5^2-4*t_1*t_3*t_4*t_6+2*t_2*t_3*t_5*t_6+t_2^2*t_6^2-4*t_0*t_4*t_6^2-4*t_1*t_3^2*t_7-4*t_0*t_3*t_6*t_7);
    t=gens R;
    S=K[x_0..x_8];
    phi=map(R,S,{t_4*t_6+t_3*t_7,t_5^2-t_1*t_7,t_4*t_5-t_2*t_7,t_3*t_5+t_2*t_6,t_2*t_5-t_0*t_7,t_1*t_4-t_0*t_7,t_1*t_3+t_0*t_6,t_2^2-t_0*t_4,t_1*t_2-t_0*t_5});
    Out=ideal(x_3*x_5-x_2*x_6-x_0*x_8,x_4^2-x_4*x_5-x_1*x_7+x_2*x_8,x_3^2-4*x_0*x_6);
    assert( kernelComponent(phi,2) == Out )
    assert( ideal image basis(2,kernel phi) == Out )
    phi'=toMap(phi,Dominant=>ideal(Out_0,Out_1))
    assert( ideal image basis(2,kernel phi') == kernelComponent(phi',2) )
///

TEST ///
    R=ZZ/331[t_0,t_1];
    phi=toMap(kernel toMap((ideal vars R)^4),Dominant=>2)
    psi=invertBirMap phi
    assert( projectiveDegrees(phi,MathMode=>true) == {1, 2, 4, 4, 2})
    assert( projectiveDegrees(psi,MathMode=>true) == reverse({1, 2, 4, 4, 2}))
///

TEST ///
P3 = ZZ/41[z_0..z_3];
phi = toMap minors(3,matrix{{-z_1,z_0,-z_1^2+z_0*z_3},{z_0,z_1,z_0^2-z_1*z_2},{0,z_2,z_0*z_1-z_1*z_3},{0,z_3,-z_0*z_1+z_0*z_2}})
assert isInverseMap(phi,invertBirMap phi)
///

end 

