TEST ///
  -- testing reduceScalar
--  restart
  debug needsPackage "DirectSummands"
  assert elapsedTime isIdempotent(2 * id_((ZZ/5[x])^500)) -- .03s
  --
  R = (ZZ/3)[x,y,z,w]/(x^3*y+y^3*z+x*y*z*w+z^3*w+x*w^3)
  m = map(subquotient(map(R^36,R^{{0}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-2}, {-2}, {-2}, {-2}, {-2}, {-2}, {-2}, {-2}, {-2}, {-2}, {-2}, {-2}, {-2}, {-2}, {-2}, {-2}, {-2}, {-2}, {-2}, {-2}, {-2}},{{1, 0, 0, 0, 0, 0, 0, 0, y*z, 0, w^2, x*w, y^2, z*w, x*w, x*y+z^2, z^2, y*z, 0, 0, 0, 0, 0, 0, 0, y^2, 0, 0}, {0, 0, z, 0, 0, y, 0, 0, 0, w^2, 0, 0, 0, 0, 0, 0, 0, 0, y^2, 0, x*w, 0, 0, 0, 0, 0, 0, y*w}, {0, w, 0, z, 0, 0, y, z*w, 0, 0, 0, 0, 0, 0, 0, 0, y*w, 0, 0, 0, 0, y^2, 0, x*w, 0, y*z, 0, 0}, {0, y, x, 0, 0, z, 0, y*z, 0, 0, 0, 0, 0, 0, 0, 0, y^2, 0, 0, 0, 0, 0, x*w, 0, y^2, 0, 0, 0}, {0, 0, 0, x, 0, 0, z, x*w, 0, y*z, 0, 0, 0, 0, 0, 0, 0, 0, 0, x*w, 0, 0, 0, 0, 0, 0, y^2, 0}, {0, 0, 0, 0, 0, 0, 0, 0, x*w, 0, y^2, z*w, 0, 0, 0, 0, y*z, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, z, x, 0, 0, 0, 0, 0, 0, z^2, x*z, x*w, x*w, z*w, 0, 0, 0, 0, 0, 0, 0, 0, 0, z*w}, {1, x, 0, 0, z, 0, 0, y*w, y*z, z*w, w^2, x*w, 0, 0, 0, 0, 0, w^2, 0, 0, x*z, 0, z^2, 0, 0, y^2, 0, 0}, {0, z, 0, 0, 0, 0, w, 0, 0, x*z, 0, 0, 0, 0, 0, 0, y*z, x*w, 0, z^2, 0, 0, 0, x*z, 0, x^2, 0, 0}, {0, 0, 0, 0, x, 0, y, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, x*y, 0, 0, 0, 0, 0, 0, 0, 0, 0, z^2}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, y*z, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, x, 0, 0, z, x*w, x*z, y*z, 0, z^2, 0, 0, 0, 0, x^2, x*z, 0, x*w, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, y, x, w, 0, 0, 0, 0, 0, z*w, y*w, x^2, y*z, y*z, y^2+x*w, 0, 0, 0, 0, 0, 0, 0, 0, 0, x*w}, {0, w, y, 0, 0, 0, 0, z*w, 0, x*w, 0, 0, 0, 0, 0, 0, y*w, 0, z*w, 0, x^2, 0, 0, 0, 0, 0, 0, 0}, {1, x, 0, y, z, w, 0, x*z, y*z, z*w, w^2, x*w, 0, 0, 0, 0, 0, 0, 0, 0, 0, z*w, 0, x^2, 0, x*w, 0, w^2}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, z*w, 0, 0, y*w}, {0, 0, 0, 0, x, 0, y, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, z*w, 0}, {0, y, x, 0, 0, z, 0, y*z, x^2, 0, z*w, y*w, 0, 0, 0, 0, x*w, 0, 0, 0, 0, 0, x*w, 0, 0, 0, 0, z*w}, {0, 0, z, x, w, 0, 0, 0, 0, 0, x*z, 0, x*y, y*z+w^2, z^2, z*w, z*w, y*w, x*w, x*w, 0, 0, z*w, 0, 0, 0, 0, 0}, {0, 0, w, 0, y, 0, 0, 0, 0, 0, y^2, 0, 0, 0, 0, 0, 0, 0, 0, 0, z^2, 0, y*z, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, z*w, 0, 0, 0, 0, 0, 0, 0, y*z+w^2, y*z+w^2, 0, x*y, 0, z^2, 0, y*w, 0, 0}, {1, x, 0, y, z, w, 0, x*z, y*z, z*w, y*z+w^2, x*w, 0, 0, 0, 0, 0, 0, y*w, y*w, 0, 0, 0, 0, x*y, y^2, 0, y*z}, {0, z, 0, 0, 0, 0, w, 0, 0, x*z, x*w, 0, 0, 0, 0, 0, y*z, 0, z^2, 0, 0, 0, 0, 0, 0, 0, x*y, 0}, {0, w, 0, z, 0, 0, y, z*w, z^2, 0, z^2, y*z+w^2, 0, 0, 0, 0, 0, 0, z*w, z*w, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, x, w, 0, 0, 0, 0, 0, 0, 0, x*z, y*w, x*y, 0, y^2, y^2, z*w, 0, w^2, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, y^2, 0, 0, 0, 0, 0, 0, y*w, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, w, 0, y, 0, 0, 0, 0, 0, 0, z*w, 0, 0, 0, 0, 0, 0, 0, x*y, 0, y*w, y*z, 0, 0, z*w, 0, 0}, {0, w, y, 0, 0, 0, 0, z*w, 0, x*w, 0, y*z, 0, 0, 0, 0, y*w, 0, 0, 0, 0, 0, 0, 0, y*w, 0, 0, x*y}, {1, x, 0, 0, z, 0, 0, y*w, y*z, z*w, w^2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, z^2, 0, 0, y^2, y*w, 0}, {0, 0, z, 0, 0, y, 0, 0, 0, w^2, y*w, z^2, 0, 0, 0, 0, z*w, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, y*w}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, w^2, x*w, y*z, x*z, x*z, x*y, 0, 0, 0, 0, 0, 0, 0, w^2, 0, 0}, {0, 0, x, w, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, w^2, w^2, y*z, 0, 0, 0, 0, y*w, 0, 0}, {0, 0, z, x, w, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, w^2, z*w, y*z, 0, 0, 0, 0}, {0, 0, 0, 0, y, x, w, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, w^2, z*w, 0, 0}, {0, 0, 0, 0, 0, z, x, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, w^2, z*w}, {1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}),map(R^36,R^{{0}, {-2}, {-2}, {-2}, {-2}, {-2}, {-2}, {-2}, {-2}, {-2}, {-2}, {-2}, {-2}, {-2}, {-2}, {-2}, {-2}, {-2}, {-2}, {-2}, {-2}, {-2}, {-2}, {-2}, {-2}, {-2}, {-2}, {-2}, {-2}, {-2}, {-2}, {-2}, {-2}, {-2}, {-2}, {-2}, {-2}},{{1, x*w, y*z, x*y, x^2+z*w, w^2, x*z, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, x*y, 0, z*w, w^2, y*w, y^2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, y*z+w^2, z^2, y*w, x*w, x*y, z*w, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, y*w, x^2, y^2+x*w, x*y, z*w, y*z, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, z^2, x*z, x^2, y*z, 0, x*w, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, z*w, x*w, y*z, x*z, y^2, x*y+z^2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, x*w, y*z, x*y, x^2+z*w, w^2, x*z, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {1, 0, 0, 0, 0, 0, 0, x*y, 0, z*w, w^2, y*w, y^2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, y*z+w^2, z^2, y*w, x*w, x*y, z*w, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, y*w, x^2, y^2+x*w, x*y, z*w, y*z, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, z^2, x*z, x^2, y*z, 0, x*w, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, z*w, x*w, y*z, x*z, y^2, x*y+z^2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, x*w, y*z, x*y, x^2+z*w, w^2, x*z, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, x*y, 0, z*w, w^2, y*w, y^2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, y*z+w^2, z^2, y*w, x*w, x*y, z*w, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, y*w, x^2, y^2+x*w, x*y, z*w, y*z, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, z^2, x*z, x^2, y*z, 0, x*w, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, z*w, x*w, y*z, x*z, y^2, x*y+z^2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, x*w, y*z, x*y, x^2+z*w, w^2, x*z, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, x*y, 0, z*w, w^2, y*w, y^2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, y*z+w^2, z^2, y*w, x*w, x*y, z*w, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, y*w, x^2, y^2+x*w, x*y, z*w, y*z, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, z^2, x*z, x^2, y*z, 0, x*w, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, z*w, x*w, y*z, x*z, y^2, x*y+z^2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, x*w, y*z, x*y, x^2+z*w, w^2, x*z, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, x*y, 0, z*w, w^2, y*w, y^2, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, y*z+w^2, z^2, y*w, x*w, x*y, z*w, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, y*w, x^2, y^2+x*w, x*y, z*w, y*z, 0, 0, 0, 0, 0, 0}, {1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, z^2, x*z, x^2, y*z, 0, x*w, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, z*w, x*w, y*z, x*z, y^2, x*y+z^2, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, x*w, y*z, x*y, x^2+z*w, w^2, x*z}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, x*y, 0, z*w, w^2, y*w, y^2}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, y*z+w^2, z^2, y*w, x*w, x*y, z*w}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, y*w, x^2, y^2+x*w, x*y, z*w, y*z}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, z^2, x*z, x^2, y*z, 0, x*w}, {1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, z*w, x*w, y*z, x*z, y^2, x*y+z^2}})),subquotient(map(R^36,R^{{0}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-2}, {-2}, {-2}, {-2}, {-2}, {-2}, {-2}, {-2}, {-2}, {-2}, {-2}, {-2}, {-2}, {-2}, {-2}, {-2}, {-2}, {-2}, {-2}, {-2}, {-2}},{{1, 0, 0, 0, 0, 0, 0, 0, y*z, 0, w^2, x*w, y^2, z*w, x*w, x*y+z^2, z^2, y*z, 0, 0, 0, 0, 0, 0, 0, y^2, 0, 0}, {0, 0, z, 0, 0, y, 0, 0, 0, w^2, 0, 0, 0, 0, 0, 0, 0, 0, y^2, 0, x*w, 0, 0, 0, 0, 0, 0, y*w}, {0, w, 0, z, 0, 0, y, z*w, 0, 0, 0, 0, 0, 0, 0, 0, y*w, 0, 0, 0, 0, y^2, 0, x*w, 0, y*z, 0, 0}, {0, y, x, 0, 0, z, 0, y*z, 0, 0, 0, 0, 0, 0, 0, 0, y^2, 0, 0, 0, 0, 0, x*w, 0, y^2, 0, 0, 0}, {0, 0, 0, x, 0, 0, z, x*w, 0, y*z, 0, 0, 0, 0, 0, 0, 0, 0, 0, x*w, 0, 0, 0, 0, 0, 0, y^2, 0}, {0, 0, 0, 0, 0, 0, 0, 0, x*w, 0, y^2, z*w, 0, 0, 0, 0, y*z, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, z, x, 0, 0, 0, 0, 0, 0, z^2, x*z, x*w, x*w, z*w, 0, 0, 0, 0, 0, 0, 0, 0, 0, z*w}, {1, x, 0, 0, z, 0, 0, y*w, y*z, z*w, w^2, x*w, 0, 0, 0, 0, 0, w^2, 0, 0, x*z, 0, z^2, 0, 0, y^2, 0, 0}, {0, z, 0, 0, 0, 0, w, 0, 0, x*z, 0, 0, 0, 0, 0, 0, y*z, x*w, 0, z^2, 0, 0, 0, x*z, 0, x^2, 0, 0}, {0, 0, 0, 0, x, 0, y, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, x*y, 0, 0, 0, 0, 0, 0, 0, 0, 0, z^2}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, y*z, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, x, 0, 0, z, x*w, x*z, y*z, 0, z^2, 0, 0, 0, 0, x^2, x*z, 0, x*w, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, y, x, w, 0, 0, 0, 0, 0, z*w, y*w, x^2, y*z, y*z, y^2+x*w, 0, 0, 0, 0, 0, 0, 0, 0, 0, x*w}, {0, w, y, 0, 0, 0, 0, z*w, 0, x*w, 0, 0, 0, 0, 0, 0, y*w, 0, z*w, 0, x^2, 0, 0, 0, 0, 0, 0, 0}, {1, x, 0, y, z, w, 0, x*z, y*z, z*w, w^2, x*w, 0, 0, 0, 0, 0, 0, 0, 0, 0, z*w, 0, x^2, 0, x*w, 0, w^2}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, z*w, 0, 0, y*w}, {0, 0, 0, 0, x, 0, y, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, z*w, 0}, {0, y, x, 0, 0, z, 0, y*z, x^2, 0, z*w, y*w, 0, 0, 0, 0, x*w, 0, 0, 0, 0, 0, x*w, 0, 0, 0, 0, z*w}, {0, 0, z, x, w, 0, 0, 0, 0, 0, x*z, 0, x*y, y*z+w^2, z^2, z*w, z*w, y*w, x*w, x*w, 0, 0, z*w, 0, 0, 0, 0, 0}, {0, 0, w, 0, y, 0, 0, 0, 0, 0, y^2, 0, 0, 0, 0, 0, 0, 0, 0, 0, z^2, 0, y*z, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, z*w, 0, 0, 0, 0, 0, 0, 0, y*z+w^2, y*z+w^2, 0, x*y, 0, z^2, 0, y*w, 0, 0}, {1, x, 0, y, z, w, 0, x*z, y*z, z*w, y*z+w^2, x*w, 0, 0, 0, 0, 0, 0, y*w, y*w, 0, 0, 0, 0, x*y, y^2, 0, y*z}, {0, z, 0, 0, 0, 0, w, 0, 0, x*z, x*w, 0, 0, 0, 0, 0, y*z, 0, z^2, 0, 0, 0, 0, 0, 0, 0, x*y, 0}, {0, w, 0, z, 0, 0, y, z*w, z^2, 0, z^2, y*z+w^2, 0, 0, 0, 0, 0, 0, z*w, z*w, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, x, w, 0, 0, 0, 0, 0, 0, 0, x*z, y*w, x*y, 0, y^2, y^2, z*w, 0, w^2, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, y^2, 0, 0, 0, 0, 0, 0, y*w, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, w, 0, y, 0, 0, 0, 0, 0, 0, z*w, 0, 0, 0, 0, 0, 0, 0, x*y, 0, y*w, y*z, 0, 0, z*w, 0, 0}, {0, w, y, 0, 0, 0, 0, z*w, 0, x*w, 0, y*z, 0, 0, 0, 0, y*w, 0, 0, 0, 0, 0, 0, 0, y*w, 0, 0, x*y}, {1, x, 0, 0, z, 0, 0, y*w, y*z, z*w, w^2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, z^2, 0, 0, y^2, y*w, 0}, {0, 0, z, 0, 0, y, 0, 0, 0, w^2, y*w, z^2, 0, 0, 0, 0, z*w, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, y*w}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, w^2, x*w, y*z, x*z, x*z, x*y, 0, 0, 0, 0, 0, 0, 0, w^2, 0, 0}, {0, 0, x, w, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, w^2, w^2, y*z, 0, 0, 0, 0, y*w, 0, 0}, {0, 0, z, x, w, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, w^2, z*w, y*z, 0, 0, 0, 0}, {0, 0, 0, 0, y, x, w, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, w^2, z*w, 0, 0}, {0, 0, 0, 0, 0, z, x, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, w^2, z*w}, {1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}),map(R^36,R^{{0}, {-2}, {-2}, {-2}, {-2}, {-2}, {-2}, {-2}, {-2}, {-2}, {-2}, {-2}, {-2}, {-2}, {-2}, {-2}, {-2}, {-2}, {-2}, {-2}, {-2}, {-2}, {-2}, {-2}, {-2}, {-2}, {-2}, {-2}, {-2}, {-2}, {-2}, {-2}, {-2}, {-2}, {-2}, {-2}, {-2}},{{1, x*w, y*z, x*y, x^2+z*w, w^2, x*z, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, x*y, 0, z*w, w^2, y*w, y^2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, y*z+w^2, z^2, y*w, x*w, x*y, z*w, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, y*w, x^2, y^2+x*w, x*y, z*w, y*z, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, z^2, x*z, x^2, y*z, 0, x*w, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, z*w, x*w, y*z, x*z, y^2, x*y+z^2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, x*w, y*z, x*y, x^2+z*w, w^2, x*z, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {1, 0, 0, 0, 0, 0, 0, x*y, 0, z*w, w^2, y*w, y^2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, y*z+w^2, z^2, y*w, x*w, x*y, z*w, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, y*w, x^2, y^2+x*w, x*y, z*w, y*z, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, z^2, x*z, x^2, y*z, 0, x*w, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, z*w, x*w, y*z, x*z, y^2, x*y+z^2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, x*w, y*z, x*y, x^2+z*w, w^2, x*z, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, x*y, 0, z*w, w^2, y*w, y^2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, y*z+w^2, z^2, y*w, x*w, x*y, z*w, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, y*w, x^2, y^2+x*w, x*y, z*w, y*z, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, z^2, x*z, x^2, y*z, 0, x*w, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, z*w, x*w, y*z, x*z, y^2, x*y+z^2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, x*w, y*z, x*y, x^2+z*w, w^2, x*z, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, x*y, 0, z*w, w^2, y*w, y^2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, y*z+w^2, z^2, y*w, x*w, x*y, z*w, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, y*w, x^2, y^2+x*w, x*y, z*w, y*z, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, z^2, x*z, x^2, y*z, 0, x*w, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, z*w, x*w, y*z, x*z, y^2, x*y+z^2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, x*w, y*z, x*y, x^2+z*w, w^2, x*z, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, x*y, 0, z*w, w^2, y*w, y^2, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, y*z+w^2, z^2, y*w, x*w, x*y, z*w, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, y*w, x^2, y^2+x*w, x*y, z*w, y*z, 0, 0, 0, 0, 0, 0}, {1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, z^2, x*z, x^2, y*z, 0, x*w, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, z*w, x*w, y*z, x*z, y^2, x*y+z^2, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, x*w, y*z, x*y, x^2+z*w, w^2, x*z}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, x*y, 0, z*w, w^2, y*w, y^2}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, y*z+w^2, z^2, y*w, x*w, x*y, z*w}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, y*w, x^2, y^2+x*w, x*y, z*w, y*z}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, z^2, x*z, x^2, y*z, 0, x*w}, {1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, z*w, x*w, y*z, x*z, y^2, x*y+z^2}})),{{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, z, 0, 0, 0, w, 0, 0, 0, 0, y, 0, z, z, 0, 0, 0, x, y, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, x, 0, 0, 0, 0, y, z, 0, w, 0, 0, 0, 0, 0, w, y, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, w, z, 0, 0, 0, y, 0, 0, 0, x, z, w, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, w, 0, 0, 0, y, x, x, 0, w, z, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, w, x, 0, z, x, 0, 0, 0, y, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, x, z, z, 0, 0, 0, 0, x, 0, 0, 0, y, 0, 0, w, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}});
  assert not elapsedTime isIdempotent m -- 0.002
  assert elapsedTime isIdempotent(2 * id_(target m))
  -- FIXME: what were these tests for?
  --assert try m == quotient(m, map(target m, cover target m, 1), Strategy => "Reflexive") else false
  --quotient(m, map(target m, cover target m, 1), DegreeLimit => {0})
  --elapsedTime(m // 1);
///

///
  -- from David's email: reaches recursion limit overnight
  needsPackage "DirectSummands"
  kk = ZZ/101
  S = kk[x,y,z]
  I = monomialIdeal(x^4,x*y,y^4,x*z,y^2*z,z^4)
  R = S/I
  F = res(coker vars R, LengthLimit => 5)
  M = coker F.dd_5;
  debugLevel = 1
  elapsedTime L5 = summands M; -- takes ~30min on Fields' server
  assert(#L5 == 75); -- could be wrong
  assert first isIsomorphic(M, directSum L5)
///

///
  -- FIXME: why is this test so slow?
  n = 3
  S = (ZZ/2)[x_0..x_(n-1)]
  R = quotient (ideal vars S)^3
  F = res coker vars R
  M = image F.dd_3
  summands M
  summands(image F.dd_1, M)
  -- TODO: have a flag to test for twists of input summands as well
  summands({image F.dd_1, coker vars R}, M)
///

///
  -- c.f. https://github.com/Macaulay2/M2/issues/3738#issuecomment-2816840279
  restart
  debug needsPackage "DirectSummands"
  R = ZZ/32003[x,y,z]/(x^3, x^2*y, x*y^2, y^4, y^3*z)
  M = cokernel(map(R^{5:{1}, 6:{0}, 2:{-1}}, R^{7:{0}, 20:{-1}, 9:{-2}}, {{0, z, 0, y, 0, x, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, z, 0, y, 0, x, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {-x, 0, 0, 0, 0, 0, 0, x*y, 0, 0, 0, x^2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, y^2*z, 0, 0, 0, 0, y^3, 0, 0, 0}, {z, 0, 0, 0, 0, 0, 0, -y*z, y^2, 0, 0, -x*z, x*y, 0, 0, x^2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {y, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, x^2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, z, -y, x, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, y*z, 0, 0, 0, 0, y^2, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, y, z, 0, x, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, y, 0, z, x, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, z, 0, 0, y, 0, 0, x, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, z, 0, 0, y, 0, 0, x, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, z, 0, 0, y, 0, 0, x, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -z, 0, y, 0, x, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, z, 0, 0, 0, y, x}}))
  N = cokernel(map(R^{2:{1}}, R^6, {{z, y, x, 0, 0, 0}, {0, 0, 0, z, y, x}}))
  g = map(N, M, {{10821, -12119, 15659, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {-7155, -15464, 7853, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0}})
  g * (id_N // g)
  g * (g \\ id_M)
  assert isWellDefined (g \\ id_M)
  f = id_M
  code(quotient', Matrix, Matrix)
  homomorphism' f % image Hom(g, target f) == 0
  homomorphism(homomorphism' f // Hom(g, target f))
///
