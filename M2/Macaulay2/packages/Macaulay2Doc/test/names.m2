M = monoid [x,t_2]
toString M_0
assert("x" === toString M_0)
needsPackage "Text"
assert( (toString A) === "A" )
assert( (toString ANCHOR) === "ANCHOR" )
assert( (toString AbsoluteLinks) === "AbsoluteLinks" )
assert( (toString Adjacent) === "Adjacent" )
assert( (toString AffineVariety) === "AffineVariety" )
assert( (toString AfterEval) === "AfterEval" )
assert( (toString AfterNoPrint) === "AfterNoPrint" )
assert( (toString AfterPrint) === "AfterPrint" )
assert( (toString Algorithm) === "Algorithm" )
assert( (toString Alignment) === "Alignment" )
assert( (toString Array) === "Array" )
assert( (toString Ascending) === "Ascending" )
assert( (toString AssociativeExpression) === "AssociativeExpression" )
assert( (toString Authors) === "Authors" )
assert( (toString AuxiliaryFiles) === "AuxiliaryFiles" )
assert( (toString B) === "B" )
assert( (toString BLOCKQUOTE) === "BLOCKQUOTE" )
assert( (toString BODY) === "BODY" )
assert( (toString BOLD) === "BOLD" )
assert( (toString BR) === "BR" )
assert( (toString Bag) === "Bag" )
assert( (toString Bareiss) === "Bareiss" )
assert( (toString BaseFunction) === "BaseFunction" )
assert( (toString BaseRow) === "BaseRow" )
assert( (toString BasicList) === "BasicList" )
assert( (toString BasisElementLimit) === "BasisElementLimit" )
assert( (toString Bayer) === "Bayer" )
assert( (toString BeforePrint) === "BeforePrint" )
assert( (toString BesselJ) === "BesselJ" )
assert( (toString BesselY) === "BesselY" )
assert( (toString BettiTally) === "BettiTally" )
assert( (toString Binary) === "Binary" )
assert( (toString BinaryOperation) === "BinaryOperation" )
assert( (toString Binomial) === "Binomial" )
assert( (toString Boolean) === "Boolean" )
assert( (toString Boxes) === "Boxes" )
assert( (toString C) === "C" )
assert( (toString CC) === "CC" )
assert( (toString CDATA) === "CDATA" )
assert( (toString CODE) === "CODE" )
assert( (toString COMMENT) === "COMMENT" )
assert( (toString CacheFunction) === "CacheFunction" )
assert( (toString CacheTable) === "CacheTable" )
assert( (toString CallLimit) === "CallLimit" )
assert( (toString Caveat) === "Caveat" )
assert( (toString Center) === "Center" )
assert( (toString ChainComplex) === "ChainComplex" )
assert( (toString ChainComplexMap) === "ChainComplexMap" )
assert( (toString ChangeMatrix) === "ChangeMatrix" )
assert( (toString CheckDocumentation) === "CheckDocumentation" )
assert( (toString ClosestFit) === "ClosestFit" )
assert( (toString CodimensionLimit) === "CodimensionLimit" )
assert( (toString CoefficientRing) === "CoefficientRing" )
assert( (toString Cofactor) === "Cofactor" )
assert( (toString CoherentSheaf) === "CoherentSheaf" )
assert( (toString Command) === "Command" )
assert( (toString CompiledFunction) === "CompiledFunction" )
assert( (toString CompiledFunctionBody) === "CompiledFunctionBody" )
assert( (toString CompiledFunctionClosure) === "CompiledFunctionClosure" )
assert( (toString Complement) === "Complement" )
assert( (toString CompleteIntersection) === "CompleteIntersection" )
assert( (toString ComplexField) === "ComplexField" )
assert( (toString Configuration) === "Configuration" )
assert( (toString Consequences) === "Consequences" )
assert( (toString Constant) === "Constant" )
assert( (toString ConstantCoefficients) === "ConstantCoefficients" )
assert( (toString CurrentVersion) === "CurrentVersion" )
assert( (toString D) === "D" )
assert( (toString DD) === "DD" )
assert( (toString DIV) === "DIV" )
assert( (toString DIV1) === "DIV1" )
assert( (toString DL) === "DL" )
assert( (toString DT) === "DT" )
assert( (toString Database) === "Database" )
assert( (toString Date) === "Date" )
assert( (toString DebuggingMode) === "DebuggingMode" )
assert( (toString Decompose) === "Decompose" )
assert( (toString Degree) === "Degree" )
assert( (toString DegreeLimit) === "DegreeLimit" )
assert( (toString DegreeMap) === "DegreeMap" )
assert( (toString DegreeOrder) === "DegreeOrder" )
assert( (toString DegreeRank) === "DegreeRank" )
assert( (toString Degrees) === "Degrees" )
assert( (toString Dense) === "Dense" )
assert( (toString Density) === "Density" )
assert( (toString Descending) === "Descending" )
assert( (toString Descent) === "Descent" )
assert( (toString Description) === "Description" )
assert( (toString Dictionary) === "Dictionary" )
assert( (toString Dispatch) === "Dispatch" )
assert( (toString Divide) === "Divide" )
assert( (toString DivideConquer) === "DivideConquer" )
assert( (toString DocumentTag) === "DocumentTag" )
assert( (toString Down) === "Down" )
assert( (toString E) === "E" )
assert( (toString EM) === "EM" )
assert( (toString EXAMPLE) === "EXAMPLE" )
assert( (toString Eliminate) === "Eliminate" )
assert( (toString Email) === "Email" )
assert( (toString Encapsulate) === "Encapsulate" )
assert( (toString EncapsulateDirectory) === "EncapsulateDirectory" )
assert( (toString End) === "End" )
assert( (toString Engine) === "Engine" )
assert( (toString EngineRing) === "EngineRing" )
assert( (toString Equation) === "Equation" )
assert( (toString EulerConstant) === "EulerConstant" )
assert( (toString ExampleItem) === "ExampleItem" )
assert( (toString Exclude) === "Exclude" )
assert( (toString Expression) === "Expression" )
assert( (toString Ext) === "Ext" )
assert( (toString F) === "F" )
assert( (toString Fano) === "Fano" )
assert( (toString File) === "File" )
assert( (toString FileName) === "FileName" )
assert( (toString FilePosition) === "FilePosition" )
assert( (toString FindOne) === "FindOne" )
assert( (toString First) === "First" )
assert( (toString Flexible) === "Flexible" )
assert( (toString FollowLinks) === "FollowLinks" )
assert( (toString ForestNode) === "ForestNode" )
assert( (toString Format) === "Format" )
assert( (toString FractionField) === "FractionField" )
assert( (toString Function) === "Function" )
assert( (toString FunctionApplication) === "FunctionApplication" )
assert( (toString FunctionBody) === "FunctionBody" )
assert( (toString FunctionClosure) === "FunctionClosure" )
assert( (toString G) === "G" )
assert( (toString GBDegrees) === "GBDegrees" )
assert( (toString GF) === "GF" )
assert( (toString GLex) === "GLex" )
assert( (toString GRevLex) === "GRevLex" )
assert( (toString GaloisField) === "GaloisField" )
assert( (toString Gamma) === "Gamma" )
assert( (toString GeneralOrderedMonoid) === "GeneralOrderedMonoid" )
assert( (toString Generic) === "Generic" )
assert( (toString Global) === "Global" )
assert( (toString GlobalAssignHook) === "GlobalAssignHook" )
assert( (toString GlobalDictionary) === "GlobalDictionary" )
assert( (toString GlobalReleaseHook) === "GlobalReleaseHook" )
assert( (toString GradedModule) === "GradedModule" )
assert( (toString GradedModuleMap) === "GradedModuleMap" )
assert( (toString Grassmannian) === "Grassmannian" )
assert( (toString GroebnerBasis) === "GroebnerBasis" )
assert( (toString GroebnerBasisOptions) === "GroebnerBasisOptions" )
assert( (toString GroupLex) === "GroupLex" )
assert( (toString GroupRevLex) === "GroupRevLex" )
assert( (toString H) === "H" )
assert( (toString HEAD) === "HEAD" )
assert( (toString HEADER1) === "HEADER1" )
assert( (toString HEADER2) === "HEADER2" )
assert( (toString HEADER3) === "HEADER3" )
assert( (toString HEADER4) === "HEADER4" )
assert( (toString HEADER5) === "HEADER5" )
assert( (toString HEADER6) === "HEADER6" )
assert( (toString HH) === "HH" )
assert( (toString HR) === "HR" )
assert( (toString HREF) === "HREF" )
assert( (toString HTML) === "HTML" )
assert( (toString HardDegreeLimit) === "HardDegreeLimit" )
assert( (toString HashTable) === "HashTable" )
assert( (toString HeaderType) === "HeaderType" )
assert( (toString Heading) === "Heading" )
assert( (toString Headline) === "Headline" )
assert( (toString Heft) === "Heft" )
assert( (toString Height) === "Height" )
assert( (toString Hermitian) === "Hermitian" )
assert( (toString Hilbert) === "Hilbert" )
assert( (toString Holder) === "Holder" )
assert( (toString Hom) === "Hom" )
assert( (toString HomePage) === "HomePage" )
assert( (toString Homogeneous) === "Homogeneous" )
assert( (toString Homogeneous2) === "Homogeneous2" )
assert( (toString HorizontalSpace) === "HorizontalSpace" )
assert( (toString Hypertext) === "Hypertext" )
assert( (toString HypertextContainer) === "HypertextContainer" )
assert( (toString HypertextParagraph) === "HypertextParagraph" )
assert( (toString I) === "I" )
assert( (toString IMG) === "IMG" )
assert( (toString ITALIC) === "ITALIC" )
assert( (toString Ideal) === "Ideal" )
assert( (toString IgnoreExampleErrors) === "IgnoreExampleErrors" )
assert( (toString ImmutableType) === "ImmutableType" )
assert( (toString IndeterminateNumber) === "IndeterminateNumber" )
assert( (toString IndexedVariable) === "IndexedVariable" )
assert( (toString IndexedVariableTable) === "IndexedVariableTable" )
assert( (toString InexactField) === "InexactField" )
assert( (toString InexactFieldFamily) === "InexactFieldFamily" )
assert( (toString InexactNumber) === "InexactNumber" )
assert( (toString InexactNumber') === "InexactNumber'" )
assert( (toString InfiniteNumber) === "InfiniteNumber" )
assert( (toString InfoDirSection) === "InfoDirSection" )
assert( (toString Inhomogeneous) === "Inhomogeneous" )
assert( (toString Inputs) === "Inputs" )
assert( (toString InstallPrefix) === "InstallPrefix" )
assert( (toString IntermediateMarkUpType) === "IntermediateMarkUpType" )
assert( (toString Intersection) === "Intersection" )
assert( (toString InverseMethod) === "InverseMethod" )
assert( (toString Inverses) === "Inverses" )
assert( (toString Iterate) === "Iterate" )
assert( (toString J) === "J" )
assert( (toString K) === "K" )
assert( (toString KeepZeroes) === "KeepZeroes" )
assert( (toString Key) === "Key" )
assert( (toString Keyword) === "Keyword" )
assert( (toString L) === "L" )
assert( (toString LABEL) === "LABEL" )
assert( (toString LATER) === "LATER" )
assert( (toString LI) === "LI" )
assert( (toString LINK) === "LINK" )
assert( (toString LITERAL) === "LITERAL" )
assert( (toString LUdecomposition) === "LUdecomposition" )
assert( (toString Left) === "Left" )
assert( (toString LengthLimit) === "LengthLimit" )
assert( (toString Lex) === "Lex" )
assert( (toString Limit) === "Limit" )
assert( (toString Linear) === "Linear" )
assert( (toString LinearAlgebra) === "LinearAlgebra" )
assert( (toString List) === "List" )
assert( (toString LoadDocumentation) === "LoadDocumentation" )
assert( (toString Local) === "Local" )
assert( (toString LocalDictionary) === "LocalDictionary" )
assert( (toString LongPolynomial) === "LongPolynomial" )
assert( (toString LowerBound) === "LowerBound" )
assert( (toString M) === "M" )
assert( (toString MENU) === "MENU" )
assert( (toString META) === "META" )
assert( (toString MakeDocumentation) === "MakeDocumentation" )
assert( (toString MakeInfo) === "MakeInfo" )
assert( (toString MakeLinks) === "MakeLinks" )
assert( (toString Manipulator) === "Manipulator" )
assert( (toString MarkUpType) === "MarkUpType" )
assert( (toString MarkUpTypeWithOptions) === "MarkUpTypeWithOptions" )
assert( (toString Matrix) === "Matrix" )
assert( (toString MatrixExpression) === "MatrixExpression" )
assert( (toString MaxReductionCount) === "MaxReductionCount" )
assert( (toString MaximalRank) === "MaximalRank" )
assert( (toString MethodFunction) === "MethodFunction" )
assert( (toString MethodFunctionWithOptions) === "MethodFunctionWithOptions" )
assert( (toString MinimalGenerators) === "MinimalGenerators" )
assert( (toString MinimalMatrix) === "MinimalMatrix" )
assert( (toString Minimize) === "Minimize" )
assert( (toString Minus) === "Minus" )
assert( (toString Module) === "Module" )
assert( (toString ModuleMap) === "ModuleMap" )
assert( (toString Monoid) === "Monoid" )
assert( (toString MonoidElement) === "MonoidElement" )
assert( (toString Monomial) === "Monomial" )
assert( (toString MonomialIdeal) === "MonomialIdeal" )
assert( (toString MonomialOrder) === "MonomialOrder" )
assert( (toString MonomialSize) === "MonomialSize" )
assert( (toString Monomials) === "Monomials" )
assert( (toString MutableHashTable) === "MutableHashTable" )
assert( (toString MutableList) === "MutableList" )
assert( (toString MutableMatrix) === "MutableMatrix" )
assert( (toString N) === "N" )
assert( (toString NCLex) === "NCLex" )
assert( (toString Name) === "Name" )
assert( (toString Net) === "Net" )
assert( (toString NetFile) === "NetFile" )
assert( (toString NewFromMethod) === "NewFromMethod" )
assert( (toString NewMethod) === "NewMethod" )
assert( (toString NewOfFromMethod) === "NewOfFromMethod" )
assert( (toString NewOfMethod) === "NewOfMethod" )
assert( (toString NoPrint) === "NoPrint" )
assert( (toString NonAssociativeProduct) === "NonAssociativeProduct" )
assert( (toString Nothing) === "Nothing" )
assert( (toString Number) === "Number" )
assert( (toString Numeric) === "Numeric" )
assert( (toString O) === "O" )
assert( (toString OO) === "OO" )
assert( (toString OneExpression) === "OneExpression" )
assert( (toString Option) === "Option" )
assert( (toString OptionTable) === "OptionTable" )
assert( (toString Options) === "Options" )
assert( (toString Order) === "Order" )
assert( (toString OrderedMonoid) === "OrderedMonoid" )
assert( (toString OutputDictionary) === "OutputDictionary" )
assert( (toString Outputs) === "Outputs" )
assert( (toString P) === "P" )
assert( (toString PARA) === "PARA" )
assert( (toString PRE) === "PRE" )
assert( (toString Package) === "Package" )
assert( (toString PackageDictionary) === "PackageDictionary" )
assert( (toString PackagePrefix) === "PackagePrefix" )
assert( (toString PairLimit) === "PairLimit" )
assert( (toString PairsRemaining) === "PairsRemaining" )
assert( (toString Parenthesize) === "Parenthesize" )
assert( (toString Partition) === "Partition" )
assert( (toString PolynomialRing) === "PolynomialRing" )
assert( (toString Position) === "Position" )
assert( (toString Postfix) === "Postfix" )
assert( (toString Power) === "Power" )
assert( (toString Prefix) === "Prefix" )
assert( (toString PrimaryTag) === "PrimaryTag" )
assert( (toString PrimitiveElement) === "PrimitiveElement" )
assert( (toString Print) === "Print" )
assert( (toString Product) === "Product" )
assert( (toString ProductOrder) === "ProductOrder" )
assert( (toString Proj) === "Proj" )
assert( (toString Projective) === "Projective" )
assert( (toString ProjectiveHilbertPolynomial) === "ProjectiveHilbertPolynomial" )
assert( (toString ProjectiveVariety) === "ProjectiveVariety" )
assert( (toString Pseudocode) === "Pseudocode" )
assert( (toString PushforwardComputation) === "PushforwardComputation" )
assert( (toString Q) === "Q" )
assert( (toString QQ) === "QQ" )
assert( (toString Quotient) === "Quotient" )
assert( (toString QuotientRing) === "QuotientRing" )
assert( (toString R) === "R" )
assert( (toString RR) === "RR" )
assert( (toString RealField) === "RealField" )
assert( (toString RemakeAllDocumentation) === "RemakeAllDocumentation" )
assert( (toString Repository) === "Repository" )
assert( (toString RerunExamples) === "RerunExamples" )
assert( (toString Resolution) === "Resolution" )
assert( (toString RevLex) === "RevLex" )
assert( (toString Reverse) === "Reverse" )
assert( (toString Right) === "Right" )
assert( (toString Ring) === "Ring" )
assert( (toString RingElement) === "RingElement" )
assert( (toString RingFamily) === "RingFamily" )
assert( (toString RingMap) === "RingMap" )
assert( (toString RowExpression) === "RowExpression" )
assert( (toString S) === "S" )
assert( (toString SMALL) === "SMALL" )
assert( (toString SPAN) === "SPAN" )
assert( (toString STRONG) === "STRONG" )
assert( (toString STYLE) === "STYLE" )
assert( (toString SUB) === "SUB" )
assert( (toString SUBSECTION) === "HEADER2" )
assert( (toString SUP) === "SUP" )
assert( (toString SVD) === "SVD" )
assert( (toString SYNOPSIS) === "SYNOPSIS" )
assert( (toString Schubert) === "Schubert" )
assert( (toString ScriptedFunctor) === "ScriptedFunctor" )
assert( (toString SeeAlso) === "SeeAlso" )
assert( (toString SelfInitializingType) === "SelfInitializingType" )
assert( (toString Sequence) === "Sequence" )
assert( (toString Set) === "Set" )
assert( (toString SheafOfRings) === "SheafOfRings" )
assert( (toString SkewCommutative) === "SkewCommutative" )
assert( (toString Sort) === "Sort" )
assert( (toString SortStrategy) === "SortStrategy" )
assert( (toString SourceCode) === "SourceCode" )
assert( (toString SparseMonomialVectorExpression) === "SparseMonomialVectorExpression" )
assert( (toString SparseVectorExpression) === "SparseVectorExpression" )
assert( (toString Spec) === "Spec" )
assert( (toString Standard) === "Standard" )
assert( (toString StopBeforeComputation) === "StopBeforeComputation" )
assert( (toString StopWithMinimalGenerators) === "StopWithMinimalGenerators" )
assert( (toString Strategy) === "Strategy" )
assert( (toString String) === "String" )
assert( (toString Subnodes) === "Subnodes" )
assert( (toString SubringLimit) === "SubringLimit" )
assert( (toString Subscript) === "Subscript" )
assert( (toString Sugarless) === "Sugarless" )
assert( (toString Sum) === "Sum" )
assert( (toString SumOfTwists) === "SumOfTwists" )
assert( (toString Superscript) === "Superscript" )
assert( (toString Symbol) === "Symbol" )
assert( (toString Syzygies) === "Syzygies" )
assert( (toString SyzygyLimit) === "SyzygyLimit" )
assert( (toString SyzygyMatrix) === "SyzygyMatrix" )
assert( (toString SyzygyRows) === "SyzygyRows" )
assert( (toString T) === "T" )
assert( (toString TABLE) === "TABLE" )
assert( (toString TD) === "TD" )
assert( (toString TEST) === "TEST" )
assert( (toString TEX) === "TEX" )
assert( (toString TITLE) === "TITLE" )
assert( (toString TO) === "TO" )
assert( (toString TO2) === "TO2" )
assert( (toString TOH) === "TOH" )
assert( (toString TR) === "TR" )
assert( (toString TT) === "TT" )
assert( (toString Table) === "Table" )
assert( (toString Tally) === "Tally" )
assert( (toString TeXmacs) === "TeXmacs" )
assert( (toString Thing) === "Thing" )
assert( (toString Time) === "Time" )
assert( (toString Tor) === "Tor" )
assert( (toString Toric) === "Toric" )
assert( (toString TotalPairs) === "TotalPairs" )
assert( (toString TreeNode) === "TreeNode" )
assert( (toString Truncate) === "Truncate" )
assert( (toString Type) === "Type" )
assert( (toString TypicalValue) === "TypicalValue" )
assert( (toString U) === "U" )
assert( (toString UL) === "UL" )
assert( (toString URL) === "URL" )
assert( (toString Undo) === "Undo" )
assert( (toString Unmixed) === "Unmixed" )
assert( (toString Up) === "Up" )
assert( (toString UpdateOnly) === "UpdateOnly" )
assert( (toString UpperTriangular) === "UpperTriangular" )
assert( (toString Usage) === "Usage" )
assert( (toString UseHilbertFunction) === "UseHilbertFunction" )
assert( (toString UseSyzygies) === "UseSyzygies" )
assert( (toString UserMode) === "UserMode" )
assert( (toString V) === "V" )
assert( (toString Variable) === "Variable" )
assert( (toString VariableBaseName) === "VariableBaseName" )
assert( (toString Variables) === "Variables" )
assert( (toString Variety) === "Variety" )
assert( (toString Vector) === "Vector" )
assert( (toString Verbose) === "Verbose" )
assert( (toString Verify) === "Verify" )
assert( (toString Version) === "Version" )
assert( (toString VerticalList) === "VerticalList" )
assert( (toString VerticalSpace) === "VerticalSpace" )
assert( (toString VirtualTally) === "VirtualTally" )
assert( (toString VisibleList) === "VisibleList" )
assert( (toString W) === "W" )
assert( (toString Weights) === "Weights" )
assert( (toString WeylAlgebra) === "WeylAlgebra" )
assert( (toString Wikipedia) === "Wikipedia" )
assert( (toString Wrap) === "Wrap" )
assert( (toString WrapperType) === "WrapperType" )
assert( (toString X) === "X" )
assert( (toString Y) === "Y" )
assert( (toString Z) === "Z" )
assert( (toString ZZ) === "ZZ" )
assert( (toString ZeroExpression) === "ZeroExpression" )
assert( (toString a) === "a" )
assert( (toString abs) === "abs" )
assert( (toString accumulate) === "accumulate" )
assert( (toString acos) === "acos" )
assert( (toString acosh) === "acosh" )
assert( (toString acot) === "acot" )
assert( (toString addEndFunction) === "addEndFunction" )
assert( (toString addHook) === "addHook" )
assert( (toString addStartFunction) === "addStartFunction" )
assert( (toString adjoint) === "adjoint" )
assert( (toString adjoint') === "adjoint'" )
assert( (toString agm) === "agm" )
assert( (toString alarm) === "alarm" )
assert( (toString all) === "all" )
assert( (toString ambient) === "ambient" )
assert( (toString ancestor) === "ancestor" )
assert( (toString ancestors) === "ancestors" )
assert( (toString ann) === "annihilator" )
assert( (toString annihilator) === "annihilator" )
assert( (toString any) === "any" )
assert( (toString append) === "append" )
assert( (toString applicationDirectory) === "applicationDirectory" )
assert( (toString apply) === "apply" )
assert( (toString applyKeys) === "applyKeys" )
assert( (toString applyPairs) === "applyPairs" )
assert( (toString applyTable) === "applyTable" )
assert( (toString applyValues) === "applyValues" )
assert( (toString apropos) === "apropos" )
assert( (toString argument) === "argument" )
assert( (toString ascii) === "ascii" )
assert( (toString asin) === "asin" )
assert( (toString asinh) === "asinh" )
assert( (toString ass) === "associatedPrimes" )
assert( (toString assert) === "assert" )
assert( (toString assign) === "assign" )
assert( (toString associatedPrimes) === "associatedPrimes" )
assert( (toString atEndOfFile) === "atEndOfFile" )
assert( (toString atan) === "atan" )
assert( (toString atan2) === "atan2" )
assert( (toString autoload) === "autoload" )
assert( (toString b) === "b" )
assert( (toString backupFileRegexp) === "\\.~[0-9.]+~$" )
assert( (toString baseFilename) === "baseFilename" )
assert( (toString baseName) === "baseName" )
assert( (toString baseRings) === "baseRings" )
assert( (toString basis) === "basis" )
assert( (toString beginDocumentation) === "beginDocumentation" )
assert( (toString benchmark) === "benchmark" )
assert( (toString betti) === "betti" )
assert( (toString between) === "between" )
assert( (toString binomial) === "binomial" )
assert( (toString borel) === "borel" )
assert( (toString c) === "c" )
assert( (toString cache) === "cache" )
assert( (toString cacheValue) === "cacheValue" )
assert( (toString capture) === "capture" )
assert( (toString ceiling) === "ceiling" )
assert( (toString centerString) === "centerString" )
assert( (toString chainComplex) === "chainComplex" )
assert( (toString char) === "char" )
assert( (toString characters) === "characters" )
assert( (toString check) === "check" )
assert( (toString class) === "class" )
assert( (toString clean) === "clean" )
assert( (toString clearAll) === "clearAll" )
assert( (toString clearEcho) === "clearEcho" )
assert( (toString clearOutput) === "clearOutput" )
assert( (toString close) === "close" )
assert( (toString closeIn) === "closeIn" )
assert( (toString closeOut) === "closeOut" )
assert( (toString code) === "code" )
assert( (toString codim) === "codim" )
assert( (toString coefficient) === "coefficient" )
assert( (toString coefficientRing) === "coefficientRing" )
assert( (toString coefficients) === "coefficients" )
assert( (toString cohomology) === "cohomology" )
assert( (toString coimage) === "coimage" )
assert( (toString coker) === "cokernel" )
assert( (toString cokernel) === "cokernel" )
assert( (toString collectGarbage) === "collectGarbage" )
assert( (toString columnAdd) === "columnAdd" )
assert( (toString columnMult) === "columnMult" )
assert( (toString columnPermute) === "columnPermute" )
assert( (toString columnSwap) === "columnSwap" )
assert( (toString columnate) === "columnate" )
assert( (toString combine) === "combine" )
assert( (toString commandInterpreter) === "commandInterpreter" )
assert( (toString commonRing) === "commonRing" )
assert( (toString commonest) === "commonest" )
assert( (toString comodule) === "comodule" )
assert( (toString compactMatrixForm) === "true" )
assert( (toString complement) === "complement" )
assert( (toString complete) === "complete" )
assert( (toString components) === "components" )
assert( (toString compositions) === "compositions" )
assert( (toString compress) === "compress" )
assert( (toString concatenate) === "concatenate" )
assert( (toString cone) === "cone" )
assert( (toString conjugate) === "conjugate" )
assert( (toString connectionCount) === "connectionCount" )
assert( (toString content) === "content" )
assert( (toString contract) === "contract" )
assert( (toString contract') === "contract'" )
assert( (toString copy) === "copy" )
assert( (toString copyDirectory) === "copyDirectory" )
assert( (toString copyFile) === "copyFile" )
assert( (toString cos) === "cos" )
assert( (toString cosh) === "cosh" )
assert( (toString cot) === "cot" )
assert( (toString cotangentSheaf) === "cotangentSheaf" )
assert( (toString coth) === "coth" )
assert( (toString cover) === "cover" )
assert( (toString coverMap) === "coverMap" )
assert( (toString cpuTime) === "cpuTime" )
assert( (toString csc) === "csc" )
assert( (toString csch) === "csch" )
assert( (toString currentTime) === "currentTime" )
assert( (toString d) === "d" )
assert( (toString dd) === "dd" )
assert( (toString debug) === "debug" )
assert( (toString debugError) === "identity" )
assert( (toString decompose) === "decompose" )
assert( (toString deepSplice) === "deepSplice" )
assert( (toString default) === "default" )
assert( (toString defaultPrecision) === "53" )
assert( (toString degree) === "degree" )
assert( (toString degreeLength) === "degreeLength" )
assert( (toString degrees) === "degrees" )
assert( (toString degreesMonoid) === "degreesMonoid" )
assert( (toString degreesRing) === "degreesRing" )
assert( (toString delete) === "delete" )
assert( (toString demark) === "demark" )
assert( (toString denominator) === "denominator" )
assert( (toString depth) === "depth" )
assert( (toString describe) === "describe" )
assert( (toString det) === "determinant" )
assert( (toString determinant) === "determinant" )
assert( (toString diagonalMatrix) === "diagonalMatrix" )
assert( (toString dictionary) === "dictionary" )
assert( (toString diff) === "diff" )
assert( (toString diff') === "diff'" )
assert( (toString difference) === "difference" )
assert( (toString dim) === "dim" )
assert( (toString directSum) === "directSum" )
assert( (toString disassemble) === "disassemble" )
assert( (toString dismiss) === "dismiss" )
assert( (toString divideByVariable) === "divideByVariable" )
assert( (toString document) === "document" )
assert( (toString drop) === "drop" )
assert( (toString dual) === "dual" )
assert( (toString dumpdata) === "dumpdata" )
assert( (toString e) === "e" )
assert( (toString eagonNorthcott) === "eagonNorthcott" )
assert( (toString echoOff) === "echoOff" )
assert( (toString echoOn) === "echoOn" )
assert( (toString edit) === "edit" )
assert( (toString eigenvalues) === "eigenvalues" )
assert( (toString eigenvectors) === "eigenvectors" )
assert( (toString eint) === "eint" )
assert( (toString elements) === "elements" )
assert( (toString end) === "end" )
assert( (toString endPackage) === "endPackage" )
assert( (toString endl) === "endl" )
assert( (toString engineDebugLevel) === "0" )
assert( (toString entries) === "entries" )
assert( (toString erase) === "erase" )
assert( (toString erf) === "erf" )
assert( (toString erfc) === "erfc" )
assert( (toString error) === "error" )
assert( (toString euler) === "euler" )
assert( (toString eulers) === "eulers" )
assert( (toString evaluate) === "evaluate" )
assert( (toString even) === "even" )
assert( (toString examples) === "examples" )
assert( (toString exec) === "exec" )
assert( (toString exit) === "exit" )
assert( (toString exp) === "exp" )
assert( (toString expm1) === "expm1" )
assert( (toString exponents) === "exponents" )
assert( (toString export) === "export" )
assert( (toString exportMutable) === "exportMutable" )
assert( (toString expression) === "expression" )
assert( (toString extend) === "extend" )
assert( (toString exteriorPower) === "exteriorPower" )
assert( (toString f) === "f" )
assert( (toString factor) === "factor" )
assert( (toString false) === "false" )
assert( (toString fileExists) === "fileExists" )
assert( (toString fileLength) === "fileLength" )
assert( (toString fileMode) === "fileMode" )
assert( (toString fileTime) === "fileTime" )
assert( (toString fillMatrix) === "fillMatrix" )
assert( (toString findFiles) === "findFiles" )
assert( (toString findSynonyms) === "findSynonyms" )
assert( (toString first) === "first" )
assert( (toString firstkey) === "firstkey" )
assert( (toString fittingIdeal) === "fittingIdeal" )
assert( (toString flagLookup) === "flagLookup" )
assert( (toString flatten) === "flatten" )
assert( (toString flattenRing) === "flattenRing" )
assert( (toString flip) === "flip" )
assert( (toString floor) === "floor" )
assert( (toString flush) === "flush" )
assert( (toString fold) === "fold" )
assert( (toString forceGB) === "forceGB" )
assert( (toString fork) === "fork" )
assert( (toString format) === "format" )
assert( (toString frac) === "frac" )
assert( (toString fraction) === "fraction" )
assert( (toString frames) === "frames" )
assert( (toString fromDual) === "fromDual" )
assert( (toString functionBody) === "functionBody" )
assert( (toString g) === "g" )
assert( (toString gb) === "gb" )
assert( (toString gbRemove) === "gbRemove" )
assert( (toString gbSnapshot) === "gbSnapshot" )
assert( (toString gbTrace) === "0" )
assert( (toString gcd) === "gcd" )
assert( (toString gcdCoefficients) === "gcdCoefficients" )
assert( (toString genera) === "genera" )
assert( (toString generateAssertions) === "generateAssertions" )
assert( (toString generator) === "generator" )
assert( (toString generators) === "generators" )
assert( (toString genericMatrix) === "genericMatrix" )
assert( (toString genericSkewMatrix) === "genericSkewMatrix" )
assert( (toString genericSymmetricMatrix) === "genericSymmetricMatrix" )
assert( (toString gens) === "generators" )
assert( (toString genus) === "genus" )
assert( (toString get) === "get" )
assert( (toString getChangeMatrix) === "getChangeMatrix" )
assert( (toString getGlobalSymbol) === "getGlobalSymbol" )
assert( (toString getNetFile) === "getNetFile" )
assert( (toString getNonUnit) === "getNonUnit" )
assert( (toString getPackage) === "getPackage" )
assert( (toString getSymbol) === "getSymbol" )
assert( (toString getWWW) === "getWWW" )
assert( (toString getc) === "getc" )
assert( (toString getenv) === "getenv" )
assert( (toString globalAssign) === "globalAssign" )
assert( (toString globalAssignFunction) === "globalAssignFunction" )
assert( (toString globalAssignment) === "globalAssignment" )
assert( (toString globalReleaseFunction) === "globalReleaseFunction" )
assert( (toString gradedModule) === "gradedModule" )
assert( (toString gradedModuleMap) === "gradedModuleMap" )
assert( (toString graphIdeal) === "graphIdeal" )
assert( (toString graphRing) === "graphRing" )
assert( (toString h) === "h" )
assert( (toString hash) === "hash" )
assert( (toString hashTable) === "hashTable" )
assert( (toString height) === "height" )
assert( (toString help) === "help" )
assert( (toString hh) === "hh" )
assert( (toString hilbertFunction) === "hilbertFunction" )
assert( (toString hilbertPolynomial) === "hilbertPolynomial" )
assert( (toString hilbertSeries) === "hilbertSeries" )
assert( (toString hold) === "hold" )
assert( (toString homogenize) === "homogenize" )
assert( (toString homology) === "homology" )
assert( (toString homomorphism) === "homomorphism" )
assert( (toString horizontalJoin) === "horizontalJoin" )
assert( (toString html) === "html" )
assert( (toString httpHeaders) === "httpHeaders" )
assert( (toString hypertext) === "hypertext" )
assert( (toString i) === "i" )
assert( (toString id) === "id" )
assert( (toString ideal) === "ideal" )
assert( (toString identity) === "identity" )
assert( (toString ii) === "ii" )
assert( (toString image) === "image" )
assert( (toString imaginaryPart) === "imaginaryPart" )
assert( (toString incomparable) === "incomparable" )
assert( (toString independentSets) === "independentSets" )
assert( (toString indeterminate) === "indeterminate" )
assert( (toString index) === "index" )
assert( (toString indexComponents) === "indexComponents" )
assert( (toString indices) === "indices" )
assert( (toString inducedMap) === "inducedMap" )
assert( (toString inducesWellDefinedMap) === "inducesWellDefinedMap" )
assert( (toString infinity) === "infinity" )
assert( (toString info) === "info" )
assert( (toString infoHelp) === "infoHelp" )
assert( (toString input) === "input" )
assert( (toString installAssignmentMethod) === "installAssignmentMethod" )
assert( (toString installHilbertFunction) === "installHilbertFunction" )
assert( (toString installMethod) === "installMethod" )
assert( (toString installPackage) === "installPackage" )
assert( (toString instance) === "instance" )
assert( (toString instances) === "instances" )
assert( (toString integrate) === "integrate" )
assert( (toString intersect) === "intersect" )
assert( (toString inverse) === "inverse" )
assert( (toString irreducibleCharacteristicSeries) === "irreducibleCharacteristicSeries" )
assert( (toString irreducibleDecomposition) === "irreducibleDecomposition" )
assert( (toString isANumber) === "isANumber" )
assert( (toString isAffineRing) === "isAffineRing" )
assert( (toString isBorel) === "isBorel" )
assert( (toString isCommutative) === "isCommutative" )
assert( (toString isConstant) === "isConstant" )
assert( (toString isDirectSum) === "isDirectSum" )
assert( (toString isDirectory) === "isDirectory" )
assert( (toString isField) === "isField" )
assert( (toString isFinite) === "isFinite" )
assert( (toString isFreeModule) === "isFreeModule" )
assert( (toString isGlobalSymbol) === "isGlobalSymbol" )
assert( (toString isHomogeneous) === "isHomogeneous" )
assert( (toString isIdeal) === "isIdeal" )
assert( (toString isInfinite) === "isInfinite" )
assert( (toString isInjective) === "isInjective" )
assert( (toString isInputFile) === "isInputFile" )
assert( (toString isIsomorphism) === "isIsomorphism" )
assert( (toString isListener) === "isListener" )
assert( (toString isModule) === "isModule" )
assert( (toString isMonomialIdeal) === "isMonomialIdeal" )
assert( (toString isOpen) === "isOpen" )
assert( (toString isOutputFile) === "isOutputFile" )
assert( (toString isPolynomialRing) === "isPolynomialRing" )
assert( (toString isPrime) === "isPrime" )
assert( (toString isPrimitive) === "isPrimitive" )
assert( (toString isQuotientModule) === "isQuotientModule" )
assert( (toString isQuotientOf) === "isQuotientOf" )
assert( (toString isQuotientRing) === "isQuotientRing" )
assert( (toString isReady) === "isReady" )
assert( (toString isReal) === "isReal" )
assert( (toString isRegularFile) === "isRegularFile" )
assert( (toString isRing) === "isRing" )
assert( (toString isSkewCommutative) === "isSkewCommutative" )
assert( (toString isSquareFree) === "isSquareFree" )
assert( (toString isSubmodule) === "isSubmodule" )
assert( (toString isSubquotient) === "isSubquotient" )
assert( (toString isSubset) === "isSubset" )
assert( (toString isSurjective) === "isSurjective" )
assert( (toString isTable) === "isTable" )
assert( (toString isUnit) === "isUnit" )
assert( (toString isWellDefined) === "isWellDefined" )
assert( (toString j) === "j" )
assert( (toString jacobian) === "jacobian" )
assert( (toString join) === "join" )
assert( (toString k) === "k" )
assert( (toString ker) === "kernel" )
assert( (toString kernel) === "kernel" )
assert( (toString keys) === "keys" )
assert( (toString kill) === "kill" )
assert( (toString koszul) === "koszul" )
assert( (toString l) === "l" )
assert( (toString last) === "last" )
assert( (toString leadCoefficient) === "leadCoefficient" )
assert( (toString leadComponent) === "leadComponent" )
assert( (toString leadMonomial) === "leadMonomial" )
assert( (toString leadTerm) === "leadTerm" )
assert( (toString length) === "length" )
assert( (toString lift) === "lift" )
assert( (toString liftable) === "liftable" )
assert( (toString lines) === "lines" )
assert( (toString linkFile) === "linkFile" )
assert( (toString listForm) === "listForm" )
assert( (toString listLocalSymbols) === "listLocalSymbols" )
assert( (toString listSymbols) === "listSymbols" )
assert( (toString listUserSymbols) === "listUserSymbols" )
assert( (toString lngamma) === "lngamma" )
assert( (toString load) === "load" )
assert( (toString loadPackage) === "loadPackage" )
assert( (toString loaddata) === "loaddata" )
assert( (toString localDictionaries) === "localDictionaries" )
assert( (toString locate) === "locate" )
assert( (toString log) === "log" )
assert( (toString log1p) === "log1p" )
assert( (toString lookup) === "lookup" )
assert( (toString lookupCount) === "lookupCount" )
assert( (toString m) === "m" )
assert( (toString makeDirectory) === "makeDirectory" )
assert( (toString makeDocumentTag) === "makeDocumentTag" )
assert( (toString makePackageIndex) === "makePackageIndex" )
assert( (toString map) === "map" )
assert( (toString markedGB) === "markedGB" )
assert( (toString match) === "match" )
assert( (toString mathML) === "mathML" )
assert( (toString matrix) === "matrix" )
assert( (toString max) === "max" )
assert( (toString maxExponent) === "1073741823" )
assert( (toString maxPosition) === "maxPosition" )
assert( (toString member) === "member" )
assert( (toString memoize) === "memoize" )
assert( (toString merge) === "merge" )
assert( (toString mergePairs) === "mergePairs" )
assert( (toString method) === "method" )
assert( (toString methodOptions) === "methodOptions" )
assert( (toString methods) === "methods" )
assert( (toString min) === "min" )
assert( (toString minExponent) === "-1073741824" )
assert( (toString minPosition) === "minPosition" )
assert( (toString minPres) === "minimalPresentation" )
assert( (toString mingens) === "mingens" )
assert( (toString mingle) === "mingle" )
assert( (toString minimalPresentation) === "minimalPresentation" )
assert( (toString minimalPresentationMap) === "minimalPresentationMap" )
assert( (toString minimalPresentationMapInv) === "minimalPresentationMapInv" )
assert( (toString minimalPrimes) === "minimalPrimes" )
assert( (toString minimizeFilename) === "minimizeFilename" )
assert( (toString minors) === "minors" )
assert( (toString minprimes) === "minprimes" )
assert( (toString minus) === "minus" )
assert( (toString mkdir) === "mkdir" )
assert( (toString mod) === "mod" )
assert( (toString module) === "module" )
assert( (toString modulo) === "modulo" )
assert( (toString monoid) === "monoid" )
assert( (toString monomialCurve) === "monomialCurve" )
assert( (toString monomialCurveIdeal) === "monomialCurveIdeal" )
assert( (toString monomialIdeal) === "monomialIdeal" )
assert( (toString monomialSubideal) === "monomialSubideal" )
assert( (toString monomials) === "monomials" )
assert( (toString moveFile) === "moveFile" )
assert( (toString mutable) === "mutable" )
assert( (toString mutableIdentity) === "mutableIdentity" )
assert( (toString mutableMatrix) === "mutableMatrix" )
assert( (toString mutableZero) === "mutableZero" )
assert( (toString n) === "n" )
assert( (toString needs) === "needs" )
assert( (toString needsPackage) === "needsPackage" )
assert( (toString net) === "net" )
assert( (toString netList) === "netList" )
assert( (toString netRows) === "netRows" )
assert( (toString newClass) === "newClass" )
assert( (toString newCoordinateSystem) === "newCoordinateSystem" )
assert( (toString newNetFile) === "newNetFile" )
assert( (toString newPackage) === "newPackage" )
assert( (toString newRing) === "newRing" )
assert( (toString nextkey) === "nextkey" )
assert( (toString norm) === "norm" )
assert( (toString notImplemented) === "notImplemented" )
assert( (toString null) === "null" )
assert( (toString nullhomotopy) === "nullhomotopy" )
assert( (toString numColumns) === "numColumns" )
assert( (toString numRows) === "numRows" )
assert( (toString number) === "number" )
assert( (toString numcols) === "numColumns" )
assert( (toString numerator) === "numerator" )
assert( (toString numeric) === "numeric" )
assert( (toString numgens) === "numgens" )
assert( (toString numrows) === "numRows" )
assert( (toString o) === "o" )
assert( (toString odd) === "odd" )
assert( (toString ofClass) === "ofClass" )
assert( (toString on) === "on" )
assert( (toString openDatabase) === "openDatabase" )
assert( (toString openDatabaseOut) === "openDatabaseOut" )
assert( (toString openFiles) === "openFiles" )
assert( (toString openIn) === "openIn" )
assert( (toString openInOut) === "openInOut" )
assert( (toString openListener) === "openListener" )
assert( (toString openOut) === "openOut" )
assert( (toString openOutAppend) === "openOutAppend" )
assert( (toString options) === "options" )
assert( (toString order) === "order" )
assert( (toString override) === "override" )
assert( (toString p) === "p" )
assert( (toString pack) === "pack" )
assert( (toString package) === "package" )
assert( (toString pad) === "pad" )
assert( (toString pager) === "pager" )
assert( (toString pairs) === "pairs" )
assert( (toString parent) === "parent" )
assert( (toString part) === "part" )
assert( (toString partition) === "partition" )
assert( (toString partitions) === "partitions" )
assert( (toString parts) === "parts" )
assert( (toString pdim) === "pdim" )
assert( (toString peek) === "peek" )
assert( (toString peek') === "peek'" )
assert( (toString permanents) === "permanents" )
assert( (toString permutations) === "permutations" )
assert( (toString pfaffians) === "pfaffians" )
assert( (toString pi) === "pi" )
assert( (toString pivots) === "pivots" )
assert( (toString plus) === "plus" )
assert( (toString poincare) === "poincare" )
assert( (toString poincareN) === "poincareN" )
assert( (toString position) === "position" )
assert( (toString positions) === "positions" )
assert( (toString power) === "power" )
assert( (toString powermod) === "powermod" )
assert( (toString precision) === "precision" )
assert( (toString preimage) === "preimage" )
assert( (toString prepend) === "prepend" )
assert( (toString presentation) === "presentation" )
assert( (toString pretty) === "pretty" )
assert( (toString primaryDecomposition) === "primaryDecomposition" )
assert( (toString print) === "print" )
assert( (toString printString) === "printString" )
assert( (toString printingAccuracy) === "-1" )
assert( (toString printingLeadLimit) === "5" )
assert( (toString printingPrecision) === "6" )
assert( (toString printingSeparator) === "e" )
assert( (toString printingTimeLimit) === "20" )
assert( (toString printingTrailLimit) === "5" )
assert( (toString processID) === "processID" )
assert( (toString product) === "product" )
assert( (toString profile) === "profile" )
assert( (toString profileSummary) === "profileSummary" )
assert( (toString projectiveHilbertPolynomial) === "projectiveHilbertPolynomial" )
assert( (toString promote) === "promote" )
assert( (toString protect) === "protect" )
assert( (toString prune) === "prune" )
assert( (toString pruningMap) === "pruningMap" )
assert( (toString pseudoRemainder) === "pseudoRemainder" )
assert( (toString pseudocode) === "pseudocode" )
assert( (toString pushForward) === "pushForward" )
assert( (toString pushForward1) === "pushForward1" )
assert( (toString q) === "q" )
assert( (toString quit) === "quit" )
assert( (toString quote) === "quote" )
assert( (toString quotient) === "quotient" )
assert( (toString quotient') === "quotient'" )
assert( (toString quotientRemainder) === "quotientRemainder" )
assert( (toString quotientRemainder') === "quotientRemainder'" )
assert( (toString r) === "r" )
assert( (toString radical) === "radical" )
assert( (toString random) === "random" )
assert( (toString randomMutableMatrix) === "randomMutableMatrix" )
assert( (toString rank) === "rank" )
assert( (toString read) === "read" )
assert( (toString readDirectory) === "readDirectory" )
assert( (toString readlink) === "readlink" )
assert( (toString realPart) === "realPart" )
assert( (toString realpath) === "realpath" )
assert( (toString recursionDepth) === "recursionDepth" )
assert( (toString reduceHilbert) === "reduceHilbert" )
assert( (toString regex) === "regex" )
assert( (toString registerFinalizer) === "registerFinalizer" )
assert( (toString regularity) === "regularity" )
assert( (toString relations) === "relations" )
assert( (toString relativizeFilename) === "relativizeFilename" )
assert( (toString remainder) === "remainder" )
assert( (toString remainder') === "remainder'" )
assert( (toString remove) === "remove" )
assert( (toString removeDirectory) === "removeDirectory" )
assert( (toString removeFile) === "removeFile" )
assert( (toString removeHook) === "removeHook" )
assert( (toString removeLowestDimension) === "removeLowestDimension" )
assert( (toString reorganize) === "reorganize" )
assert( (toString replace) === "replace" )
assert( (toString res) === "resolution" )
assert( (toString reshape) === "reshape" )
assert( (toString resolution) === "resolution" )
assert( (toString restart) === "restart" )
assert( (toString returnCode) === "returnCode" )
assert( (toString reverse) === "reverse" )
assert( (toString ring) === "ring" )
assert( (toString rotate) === "rotate" )
assert( (toString round) === "round" )
assert( (toString rowAdd) === "rowAdd" )
assert( (toString rowMult) === "rowMult" )
assert( (toString rowPermute) === "rowPermute" )
assert( (toString rowSwap) === "rowSwap" )
assert( (toString rsort) === "rsort" )
assert( (toString run) === "run" )
assert( (toString runHooks) === "runHooks" )
assert( (toString s) === "s" )
assert( (toString same) === "same" )
assert( (toString saturate) === "saturate" )
assert( (toString scan) === "scan" )
assert( (toString scanKeys) === "scanKeys" )
assert( (toString scanLines) === "scanLines" )
assert( (toString scanPairs) === "scanPairs" )
assert( (toString scanValues) === "scanValues" )
assert( (toString schreyerOrder) === "schreyerOrder" )
assert( (toString searchPath) === "searchPath" )
assert( (toString sec) === "sec" )
assert( (toString sech) === "sech" )
assert( (toString seeParsing) === "seeParsing" )
assert( (toString select) === "select" )
assert( (toString selectInSubring) === "selectInSubring" )
assert( (toString separate) === "separate" )
assert( (toString separateRegexp) === "separateRegexp" )
assert( (toString seq) === "seq" )
assert( (toString sequence) === "sequence" )
assert( (toString set) === "set" )
assert( (toString setEcho) === "setEcho" )
assert( (toString setRandomSeed) === "setRandomSeed" )
assert( (toString setup) === "setup" )
assert( (toString setupEmacs) === "setupEmacs" )
assert( (toString sheaf) === "sheaf" )
assert( (toString sheafExt) === "sheafExt" )
assert( (toString sheafHom) === "sheafHom" )
assert( (toString show) === "show" )
assert( (toString showClassStructure) === "showClassStructure" )
assert( (toString showHtml) === "showHtml" )
assert( (toString showStructure) === "showStructure" )
assert( (toString showTex) === "showTex" )
assert( (toString showUserStructure) === "showUserStructure" )
assert( (toString sin) === "sin" )
assert( (toString singularLocus) === "singularLocus" )
assert( (toString sinh) === "sinh" )
assert( (toString size) === "size" )
assert( (toString size2) === "size2" )
assert( (toString sleep) === "sleep" )
assert( (toString smithNormalForm) === "smithNormalForm" )
assert( (toString solve) === "solve" )
assert( (toString someTerms) === "someTerms" )
assert( (toString sort) === "sort" )
assert( (toString sortColumns) === "sortColumns" )
assert( (toString source) === "source" )
assert( (toString splice) === "splice" )
assert( (toString sqrt) === "sqrt" )
assert( (toString stack) === "stack" )
assert( (toString standardForm) === "standardForm" )
assert( (toString standardPairs) === "standardPairs" )
assert( (toString stashValue) === "stashValue" )
assert( (toString status) === "status" )
assert( (toString stderr) === "stderr" )
assert( (toString stdio) === "stdio" )
assert( (toString sub) === "substitute" )
assert( (toString sublists) === "sublists" )
assert( (toString submatrix) === "submatrix" )
assert( (toString submatrix') === "submatrix'" )
assert( (toString submodule) === "submodule" )
assert( (toString subquotient) === "subquotient" )
assert( (toString subscript) === "subscript" )
assert( (toString subsets) === "subsets" )
assert( (toString substitute) === "substitute" )
assert( (toString substring) === "substring" )
assert( (toString subtable) === "subtable" )
assert( (toString sum) === "sum" )
assert( (toString super) === "super" )
assert( (toString superscript) === "superscript" )
assert( (toString support) === "support" )
assert( (toString symlinkDirectory) === "symlinkDirectory" )
assert( (toString symlinkFile) === "symlinkFile" )
assert( (toString symmetricAlgebra) === "symmetricAlgebra" )
assert( (toString symmetricPower) === "symmetricPower" )
assert( (toString synonym) === "synonym" )
assert( (toString syz) === "syz" )
assert( (toString syzygyScheme) === "syzygyScheme" )
assert( (toString t) === "t" )
assert( (toString table) === "table" )
assert( (toString take) === "take" )
assert( (toString tally) === "tally" )
assert( (toString tan) === "tan" )
assert( (toString tangentSheaf) === "tangentSheaf" )
assert( (toString tanh) === "tanh" )
assert( (toString target) === "target" )
assert( (toString temporaryFileName) === "temporaryFileName" )
assert( (toString tensor) === "tensor" )
assert( (toString tensorAssociativity) === "tensorAssociativity" )
assert( (toString terms) === "terms" )
assert( (toString tex) === "tex" )
assert( (toString texMath) === "texMath" )
assert( (toString times) === "times" )
assert( (toString toAbsolutePath) === "toAbsolutePath" )
assert( (toString toCC) === "toCC" )
assert( (toString toDual) === "toDual" )
assert( (toString toExternalString) === "toExternalString" )
assert( (toString toField) === "toField" )
assert( (toString toList) === "toList" )
assert( (toString toLower) === "toLower" )
assert( (toString toRR) === "toRR" )
assert( (toString toSequence) === "toSequence" )
assert( (toString toString) === "toString" )
assert( (toString toUpper) === "toUpper" )
assert( (toString top) === "topComponents" )
assert( (toString topCoefficients) === "topCoefficients" )
assert( (toString topComponents) === "topComponents" )
assert( (toString topLevelMode) === "Standard" )
assert( (toString trace) === "trace" )
assert( (toString transpose) === "transpose" )
assert( (toString trim) === "trim" )
assert( (toString true) === "true" )
assert( (toString truncate) === "truncate" )
assert( (toString truncateOutput) === "truncateOutput" )
assert( (toString tutorial) === "tutorial" )
assert( (toString u) === "u" )
assert( (toString ultimate) === "ultimate" )
assert( (toString unbag) === "unbag" )
assert( (toString uncurry) === "uncurry" )
assert( (toString undocumented) === "undocumented" )
assert( (toString uniform) === "uniform" )
assert( (toString uninstallPackage) === "uninstallPackage" )
assert( (toString unique) === "unique" )
assert( (toString unlist) === "unlist" )
assert( (toString unsequence) === "unsequence" )
assert( (toString unstack) === "unstack" )
assert( (toString use) === "use" )
assert( (toString userSymbols) === "userSymbols" )
assert( (toString utf8) === "utf8" )
assert( (toString v) === "v" )
assert( (toString validate) === "validate" )
assert( (toString value) === "value" )
assert( (toString values) === "values" )
assert( (toString variety) === "variety" )
assert( (toString vars) === "vars" )
assert( (toString vector) === "vector" )
assert( (toString verticalJoin) === "verticalJoin" )
assert( (toString viewHelp) === "viewHelp" )
assert( (toString w) === "w" )
assert( (toString wait) === "wait" )
assert( (toString wedgeProduct) === "wedgeProduct" )
assert( (toString weightRange) === "weightRange" )
assert( (toString width) === "width" )
assert( (toString wrap) === "wrap" )
assert( (toString x) === "x" )
assert( (toString xor) === "xor" )
assert( (toString y) === "y" )
assert( (toString youngest) === "youngest" )
assert( (toString z) === "z" )
assert( (toString zero) === "zero" )
assert( (toString zeta) === "zeta" )

-- Local Variables:
-- compile-command: "make -C $M2BUILDDIR/Macaulay2/packages/Macaulay2Doc/test names.out"
-- End:
