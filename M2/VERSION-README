The only place the Macaulay2 version number appears is in the file ./VERSION .

The convention for version numbers of Macaulay2 is this:
  1.3     : a major release, such as occurs every 6-12 months, stable, made into binary distributions
  1.3.1   : a minor update, with changes people might want, stable, suitable
     	    minor updates to binary distributions on certain architectures
  1.3.1.1 : a development version, with no binary distributions
  2.0     : this just means we've gotten bored seeing "1" at the beginning of the version number

It is best to increment version numbers on the "master" branch, so they are all
incremented on the same branch, hence in a well-defined order, despite possible
merging.  Alternatively, since now the "development" branch feeds into the
"master" branch, and is the only source of additions to the "master" branch,
the version numbers may be incremented there.

Here is the procedure:

    Things to do when incrementing the version number to X.Y.Z, say :
       - on the master branch:
	 - increment the version number in the file ./VERSION
	 - add an entry to distributions/deb/changelog
	 - commit the two files and push upstream
	 - make a git tag of the form version-X.Y.Z and push it to github
	      git tag version-X.Y.Z
	      git push --tags origin version-X.Y.Z

    Things to do when developing a binary release for version X.Y
       - on the master branch:
	 - increment version to X.Y, as described above
	 - make a git branch of the form release-X.Y
	      git branch release-X.Y
	 - update version to X.Y.0.1, as described above, so development on the master branch can continue
       - switch to release-X.Y and push it:
       	      git checkout release-X.Y
	      git push -u origin release-X.Y
         Prepare binary releases there, committing minor changes needed for
         building on various architectures.  Periodically merge the branch into
         the master branch.

Note:
  Debian distributions may append a "downstream" debian release number N to the version number: X.Y.Z-N
  See distributions/deb/Makefile.in, where we allow for that, as a way to fix badly prepared binary distributions.
