# @configure_input@
# to avoiding tidying, run "make -o tidy"
include ../../include/config.Makefile
VPATH = @srcdir@
DEPENDS = yes
PKG_DMG = @package@-@ARCH@-@ISSUE@.dmg

all: dmg tidy
dmg: ../../$(PKG_DMG)
T=@TAR@ --create --mode=a+rX,og-ws --exclude-from=@srcdir@/../tar-exclusions --file=-
../../$(PKG_DMG) : Makefile always file_preparation library_preparation top-directory-preparation
	rm -f "$@"
	@echo "warning: sometimes the following command gives a mystical error message about '(ipc/send) invalid destination port' ... "
	hdiutil create -srcfolder files -volname "@package@-@ARCH@-@OS@-@REL@" "$@"
top-directory-preparation:
	umask 022 ; $(MKDIR_P) files
	ln -sf /Applications files/.
file_preparation: always
	rm -rf files
	umask 022 ; $(MKDIR_P) files/@package@
	umask 022 ; $(T) -C @pre_exec_prefix@ . | @TAR@ xfp - -C files/@package@
	umask 022 ; $(T) -C @pre_prefix@ . | @TAR@ xfp - -C files/@package@
	cp @srcdir@/ReadMe-MacOSX.rtf files/@package@
	ln -s @package@/ReadMe-MacOSX.rtf files

# Sadly, the number "../"s in the install_name_tool commands below depends on the particular Macaulay2 Layout.
# The dynamic libraries we might need to relocate are these: libstdc++.6.dylib libgcc_s.1.dylib
# and that's only if we compile with a non-system build of gcc.
# Three symbolic prefixes for finding a library :
#     @executable_path : relative to the path to the executable
#     @loader_path     : relative to the path to the library that wants the library
#     @rpath           : relative to any path installed on the path with the -rpath option to ld
# Read about all that with "man dyld".
library_preparation: file_preparation

	$(MKDIR_P) files/@package@/@tail_libdir@

	(																\
	  for i in files/@package@/@tail_bindir@/* ;											\
	  do if [ -f $$i -a -x $$i -a ! -h $$i ] ;											\
	     then otool -L $$i | grep '^\t' | grep -v '^[[:space:]]*\(/usr/lib/\|/System/Library/\)'					\
		  | sed 's/^[[:space:]]*\(.*\) (compatibility version .*/\1/'								\
		  | while read f;													\
		    do (b=`basename $$f` ; set -xe ; install_name_tool -change $$f @executable_path/../lib/$$b $$i ) || exit 1 ; 	\
		       echo $$f ; 													\
		       done ;														\
	     fi ;															\
	  done ;															\
	  for i in files/@package@/@tail_programsdir@/* ;										\
	  do if [ -f $$i -a -x $$i -a ! -h $$i ] ;											\
	     then otool -L $$i | grep '^\t' | grep -v '^[[:space:]]*\(/usr/lib/\|/System/Library/\)'					\
		  | sed 's/^[[:space:]]*\(.*\) (compatibility version .*/\1/'								\
		  | while read f;													\
		    do (b=`basename $$f` ; set -xe ; install_name_tool -change $$f @executable_path/../../../lib/$$b $$i ) || exit 1 ; 	\
		       echo $$f ; 													\
		       done ;														\
	     fi ;															\
	  done																\
	) | sort															\
	  | uniq															\
	  | while read f; do ls -l $$f ; (set -x ; @INSTALL_PROGRAM@ $$f files/@package@/@tail_libdir@ ) ; done

	for i in files/@package@/@tail_libdir@/* ;							\
	do if [ -f $$i -a -x $$i -a ! -h $$i ] ;							\
	   then otool -L $$i | grep '^\t' | grep -v '^[[:space:]]*\(/usr/lib/\|/System/Library/\)'	\
		| sed 's/^[[:space:]]*\(.*\) (compatibility version .*/\1/'				\
		| while read f;										\
		  do (bf=`basename $$f` ;								\
		      bi=`basename $$i` ;								\
		      set -x ; \
		      if [ $$bf = $$bi ] ;								\
		      then set -xe ; install_name_tool -id $$bi $$i ;					\
		      else set -xe ; install_name_tool -change $$f @loader_path/$$bf $$i ; 		\
		      fi ) || exit 1 ;									\
		     echo $$f ;										\
		     done ;										\
	   fi ;												\
	done

	: dynamic libraries to be distributed:
	cd files/@package@/@tail_libdir@ && for i in * ; do if [ -f $$i ] ; then (echo "-- $$i" ; set -x ; ls -l $$i ; otool -L $$i ) ; fi ; done

tidy:; rm -rf files
clean:: tidy; rm -f "../../$(PKG_DMG)"
distclean: clean; rm -f Makefile
Makefile: Makefile.in; cd ../..; ./config.status distributions/dmg/Makefile
# Local Variables:
# compile-command: "make -C $M2BUILDDIR/distributions/dmg -o tidy "
# End:
.NOTPARALLEL:
