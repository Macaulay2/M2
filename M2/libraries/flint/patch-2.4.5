diff -ur --new-file /Users/dan/src/M2/M2-Macaulay2/M2/BUILD/dan/builds.tmp/mac64-master.production/libraries/flint/tmp/flint-2.4.5/CPimport.h flint-2.4.5/CPimport.h
--- /Users/dan/src/M2/M2-Macaulay2/M2/BUILD/dan/builds.tmp/mac64-master.production/libraries/flint/tmp/flint-2.4.5/CPimport.h	1969-12-31 19:00:00.000000000 -0500
+++ flint-2.4.5/CPimport.h	2015-07-10 17:27:06.000000000 -0400
@@ -0,0 +1,2 @@
+#include <stdint.h>
+extern const int32_t CPimport [];
diff -ur /Users/dan/src/M2/M2-Macaulay2/M2/BUILD/dan/builds.tmp/mac64-master.production/libraries/flint/tmp/flint-2.4.5/Makefile.in flint-2.4.5/Makefile.in
--- /Users/dan/src/M2/M2-Macaulay2/M2/BUILD/dan/builds.tmp/mac64-master.production/libraries/flint/tmp/flint-2.4.5/Makefile.in	2015-02-17 09:56:55.000000000 -0500
+++ flint-2.4.5/Makefile.in	2015-07-10 14:00:55.000000000 -0400
@@ -26,7 +26,7 @@
 
 export
 
-SOURCES = printf.c fprintf.c sprintf.c scanf.c fscanf.c sscanf.c clz_tab.c memory_manager.c version.c profiler.c thread_support.c
+SOURCES = printf.c fprintf.c sprintf.c scanf.c fscanf.c sscanf.c clz_tab.c memory_manager.c version.c profiler.c thread_support.c CPimport.c
 LIB_SOURCES = $(wildcard $(patsubst %, %/*.c, $(BUILD_DIRS)))  $(patsubst %, %/*.c, $(TEMPLATE_DIRS))
 
 HEADERS = $(patsubst %, %.h, $(BUILD_DIRS)) NTL-interface.h flint.h longlong.h config.h gmpcompat.h fft_tuning.h fmpz-conversions.h profiler.h templates.h $(patsubst %, %.h, $(TEMPLATE_DIRS))
@@ -77,6 +77,9 @@
 dist:
 	git archive --format tar --prefix flint-2.4.5/ flint-2.4 > ../flint-2.4.5.tar; gzip ../flint-2.4.5.tar
 
+CPimport.c: qadic/CPimport.txt Makefile
+	( echo "#include <CPimport.h>"; echo "const int32_t CPimport [] = {" ; sed -e 's/  */,/g' -e 's/ *$$/,-1,/' <$< ; echo ' -2 } ;' ) >$@
+
 profile: library $(PROF_SOURCES) $(EXT_PROF_SOURCES) build/profiler.o
 	mkdir -p build/profile
 ifndef MOD
@@ -181,8 +184,6 @@
 	$(AT)if [ ! -z $(EXT_HEADERS) ]; then \
 		cp $(EXT_HEADERS) $(DESTDIR)$(PREFIX)/include/flint; \
 	fi
-	mkdir -p $(DESTDIR)$(FLINT_CPIMPORT_DIR)
-	cp qadic/CPimport.txt $(DESTDIR)$(FLINT_CPIMPORT_DIR)
 	mkdir -p $(DESTDIR)$(PREFIX)/include/flint/flintxx
 	cp flintxx/*.h $(DESTDIR)$(PREFIX)/include/flint/flintxx
 	cp *xx.h $(DESTDIR)$(PREFIX)/include/flint
diff -ur /Users/dan/src/M2/M2-Macaulay2/M2/BUILD/dan/builds.tmp/mac64-master.production/libraries/flint/tmp/flint-2.4.5/configure flint-2.4.5/configure
--- /Users/dan/src/M2/M2-Macaulay2/M2/BUILD/dan/builds.tmp/mac64-master.production/libraries/flint/tmp/flint-2.4.5/configure	2015-02-17 09:56:55.000000000 -0500
+++ flint-2.4.5/configure	2015-07-10 11:20:32.000000000 -0400
@@ -27,9 +27,6 @@
 EXT_MODS=
 EXTRA_BUILD=
 
-FLINT_CPIMPORT_DIR="$PREFIX/share/flint"
-FLINT_CPIMPORT="$FLINT_CPIMPORT_DIR/CPimport.txt"
-
 usage()
 {
    echo "Usage: ./configure <options> <args>"
@@ -108,8 +105,6 @@
          ;;
       --prefix)
          PREFIX=$VALUE
-         FLINT_CPIMPORT_DIR="$PREFIX/share/flint"
-         FLINT_CPIMPORT="$FLINT_CPIMPORT_DIR/CPimport.txt"
          ;;
       --enable-shared)
          SHARED=1
@@ -486,10 +481,6 @@
    fi
 fi
 
-#Conway polynomials database
-
-CFLAGS="$CFLAGS -DFLINT_CPIMPORT=\\\"$FLINT_CPIMPORT\\\""
-
 #this is needed on PPC G5 and does not hurt on other OS Xes
 
 if [ "$KERNEL" = Darwin ]; then
@@ -620,9 +611,6 @@
 echo "" >> Makefile
 echo "WANT_NTL=$WANT_NTL" >> Makefile
 echo "" >> Makefile
-echo "FLINT_CPIMPORT_DIR=$FLINT_CPIMPORT_DIR" >> Makefile
-echo "FLINT_CPIMPORT=$FLINT_CPIMPORT" >> Makefile
-echo "" >> Makefile
 echo "INCS=$INCS" >> Makefile
 echo "LIBS=$LIBS" >> Makefile
 echo "LIBS2=$LIBS2" >> Makefile
diff -ur /Users/dan/src/M2/M2-Macaulay2/M2/BUILD/dan/builds.tmp/mac64-master.production/libraries/flint/tmp/flint-2.4.5/fq/ctx_init_conway.c flint-2.4.5/fq/ctx_init_conway.c
--- /Users/dan/src/M2/M2-Macaulay2/M2/BUILD/dan/builds.tmp/mac64-master.production/libraries/flint/tmp/flint-2.4.5/fq/ctx_init_conway.c	2015-02-17 09:56:55.000000000 -0500
+++ flint-2.4.5/fq/ctx_init_conway.c	2015-07-10 21:19:07.000000000 -0400
@@ -26,82 +26,31 @@
 ******************************************************************************/
 
 #include <stdio.h>
+#include <assert.h>
 #include <string.h>
 
 #include "fq.h"
-
-#ifndef FLINT_CPIMPORT
-#define FLINT_CPIMPORT "../qadic/CPimport.txt"
-#endif
+#include "CPimport.h"
 
 int
 _fq_ctx_init_conway(fq_ctx_t ctx, const fmpz_t p, slong d, const char *var)
 {
-    char *buf;
-    FILE *file;
-
-    if (fmpz_cmp_ui(p, 109987) > 0)
-    {
-        return 0;
-    }
-
-    buf = flint_malloc(832);
-    file = fopen(FLINT_CPIMPORT, "r");
-
-    if (!file)
-    {
-        file = fopen("../qadic/CPimport.txt", "r");
-
-        if (!file)
-        {
-            flint_printf("Exception (fq_ctx_init_conway).  File loading.\n");
-            abort();
-        }
-    }
-
-    while (fgets(buf, 832, file))
-    {
-        char *tmp = buf;
-
-        /* Different prime? */
-        if (fmpz_cmp_ui(p, atoi(tmp)))
-            continue;
-
-        while (*tmp++ != ' ') ;
-
-        /* Same degree? */
-        if (d == atoi(tmp))
-        {
-            fmpz_mod_poly_t mod;
-            slong i;
-            char *ptr;
-
-            fmpz_mod_poly_init(mod, p);
-
-            /* Copy the polynomial */
-            ptr = tmp;
-
-            for (i = 0; i < d; i++)
-            {
-                int coeff;
-
-                while (*ptr++ != ' ') ;
-
-                coeff = atoi(ptr);
-                fmpz_mod_poly_set_coeff_ui(mod, i, coeff);
-            }
-            fmpz_mod_poly_set_coeff_ui(mod, d, 1);
-
-            fq_ctx_init_modulus(ctx, mod, var);
-
-            fmpz_mod_poly_clear(mod);
-            fclose(file);
-            flint_free(buf);
-            return 1;
-        }
+    /* compare with _fq_nmod_ctx_init_conway and qadic_ctx_init_conway */
+    const int *cp = CPimport;
+    while (*cp != -2) {
+	 if (fmpz_cmp_ui(p, *cp++) == 0 && d == *cp++) {
+	      fmpz_mod_poly_t mod;
+	      int i;
+	      fmpz_mod_poly_init(mod, p);
+	      for (i = 0; i < d; i++) fmpz_mod_poly_set_coeff_ui(mod, i, *cp++);
+	      assert( *cp == -1);
+	      fmpz_mod_poly_set_coeff_ui(mod, d, 1);
+	      fq_ctx_init_modulus(ctx, mod, var);
+	      fmpz_mod_poly_clear(mod);
+	      return 1;
+	      }
+	 else while (*cp++ != -1);
     }
-    fclose(file);
-    flint_free(buf);
     return 0;
 }
 
diff -ur /Users/dan/src/M2/M2-Macaulay2/M2/BUILD/dan/builds.tmp/mac64-master.production/libraries/flint/tmp/flint-2.4.5/fq_nmod/ctx_init_conway.c flint-2.4.5/fq_nmod/ctx_init_conway.c
--- /Users/dan/src/M2/M2-Macaulay2/M2/BUILD/dan/builds.tmp/mac64-master.production/libraries/flint/tmp/flint-2.4.5/fq_nmod/ctx_init_conway.c	2015-02-17 09:56:55.000000000 -0500
+++ flint-2.4.5/fq_nmod/ctx_init_conway.c	2015-07-10 21:18:26.000000000 -0400
@@ -27,80 +27,29 @@
 
 #include <stdio.h>
 #include <string.h>
+#include <assert.h>
 
 #include "fq_nmod.h"
+#include "CPimport.h"
 
 int _fq_nmod_ctx_init_conway(fq_nmod_ctx_t ctx, const fmpz_t p, slong d, const char *var)
 {
-    char *buf;
-    FILE *file;
-
-    if (fmpz_cmp_ui(p, 109987) > 0)
-    {
-        return 0;
-    }
-
-    buf  = flint_malloc(832);
-    file = fopen(FLINT_CPIMPORT, "r");
-
-    if (!file)
-    {
-        file = fopen("../qadic/CPimport.txt", "r");
-
-        if (!file)
-        {
-            flint_printf("Exception (fq_nmod_ctx_init_conway).  File loading.\n");
-            abort();
-        }
-    }
-
-    while (fgets(buf, 832, file))
-    {
-        char *tmp = buf;
-
-        /* Different prime? */
-        if (fmpz_cmp_ui(p, atoi(tmp)))
-            continue;
-
-        while (*tmp++ != ' ') ;
-
-        /* Same degree? */
-        if (d == atoi(tmp))
-        {
-            nmod_poly_t mod;
-            slong i;
-            char *ptr;
-
-            nmod_poly_init(mod, fmpz_get_ui(p));
-            
-            /* Copy the polynomial */
-            ptr = tmp;
-
-            for (i = 0; i < d; i++)
-            {
-                int coeff;
-
-                while (*ptr++ != ' ') ;
-
-                coeff = atoi(ptr);
-                
-                nmod_poly_set_coeff_ui(mod, i, coeff);
-            }
-
-            nmod_poly_set_coeff_ui(mod, d, 1);
-
-            fq_nmod_ctx_init_modulus(ctx, mod, var);
-
-            nmod_poly_clear(mod);
-            fclose(file);
-            flint_free(buf);
-            return 1;
-        }
-    }
-
-    fclose(file);
-    flint_free(buf);
-
+    /* compare with _fq_ctx_init_conway and qadic_ctx_init_conway */
+    const int *cp = CPimport;
+    while (*cp != -2) {
+	 if (fmpz_cmp_ui(p, *cp++) == 0 && d == *cp++) {
+	      nmod_poly_t mod;
+	      int i;
+	      nmod_poly_init(mod, fmpz_get_ui(p));
+	      for (i = 0; i < d; i++) nmod_poly_set_coeff_ui(mod, i, *cp++);
+	      assert( *cp == -1);
+	      nmod_poly_set_coeff_ui(mod, d, 1);
+	      fq_nmod_ctx_init_modulus(ctx, mod, var);
+	      nmod_poly_clear(mod);
+	      return 1;
+	      }
+	 else while (*cp++ != -1);
+	 }
     return 0;
 }
 
diff -ur /Users/dan/src/M2/M2-Macaulay2/M2/BUILD/dan/builds.tmp/mac64-master.production/libraries/flint/tmp/flint-2.4.5/qadic/ctx_init_conway.c flint-2.4.5/qadic/ctx_init_conway.c
--- /Users/dan/src/M2/M2-Macaulay2/M2/BUILD/dan/builds.tmp/mac64-master.production/libraries/flint/tmp/flint-2.4.5/qadic/ctx_init_conway.c	2015-02-17 09:56:55.000000000 -0500
+++ flint-2.4.5/qadic/ctx_init_conway.c	2015-07-10 21:19:46.000000000 -0400
@@ -25,100 +25,45 @@
 ******************************************************************************/
 
 #include <stdio.h>
+#include <assert.h>
 #include <string.h>
 
 #include "fmpz_vec.h"
 #include "padic.h"
 #include "qadic.h"
-
-#define FLINT_SRC_CPIMPORT "../qadic/CPimport.txt"
-
-#ifndef FLINT_CPIMPORT
-#define FLINT_CPIMPORT FLINT_SRC_CPIMPORT
-#endif
+#include "CPimport.h"
 
 void qadic_ctx_init_conway(qadic_ctx_t ctx,
                            const fmpz_t p, slong d, slong min, slong max, 
                            const char *var, enum padic_print_mode mode)
 {
-    char *buf;
-    FILE *file;
-
-    if (fmpz_cmp_ui(p, 109987) > 0)
-    {
-        flint_printf("Exception (qadic_ctx_init_conway).  Conway polynomials \n");
-        flint_printf("are only available for primes up to 109987.\n");
-        abort();
-    }
-
-    buf  = flint_malloc(832);
-    file = fopen(FLINT_CPIMPORT, "r");
-
-    if (!file)
-       file = fopen(FLINT_SRC_CPIMPORT, "r");
-
-    if (!file)
-    {
-        file = fopen("CPimport.txt", "r");
-
-        if (!file)
-        {
-            flint_printf("Exception (qadic_ctx_init_conway).  File loading.\n");
-            abort();
-        }
-    }
-
-    while (fgets(buf, 832, file))
-    {
-        char *tmp = buf;
-
-        /* Different prime? */
-        if (fmpz_cmp_ui(p, atoi(tmp)))
-            continue;
-
-        while (*tmp++ != ' ') ;
-
-        /* Same degree? */
-        if (d == atoi(tmp))
-        {
+    /* compare with _fq_nmod_ctx_init_conway and _fq_ctx_init_conway */
+    const int *cp = CPimport;
+    while (*cp != -2) {
+	 if (fmpz_cmp_ui(p, *cp++) == 0 && d == *cp++) {
             slong i, j;
-            char *ptr;
-
             /* Find number of non-zero coefficients */
             ctx->len = 1;
-            ptr = tmp;
-
-            for (i = 0; i < d; i++)
-            {
-                while (*ptr++ != ' ') ;
-
-                if (atoi(ptr))
-                    ctx->len ++;
-            }
+            for (i = 0; i < d; i++) if (cp[i] != 0) ctx->len ++;
 
             ctx->a = _fmpz_vec_init(ctx->len);
             ctx->j = flint_malloc(ctx->len * sizeof(slong));
 
             /* Copy the polynomial */
             j = 0;
-            ptr = tmp;
 
             for (i = 0; i < d; i++)
             {
-                int coeff;
-
-                while (*ptr++ != ' ') ;
-
-                coeff = atoi(ptr);
-
-                if (coeff)
+                if (cp[i] != 0)
                 {
-                    fmpz_set_ui(ctx->a + j, coeff);
+                    fmpz_set_ui(ctx->a + j, cp[i]);
                     ctx->j[j] = i;
                     j++;
                 }
             }
 
+	    assert(cp[d] == -1);
+
             fmpz_set_ui(ctx->a + j, 1);
             ctx->j[j] = d;
 
@@ -128,15 +73,11 @@
             ctx->var = flint_malloc(strlen(var) + 1);
             strcpy(ctx->var, var);
 
-            fclose(file);
-            flint_free(buf);
             return;
         }
+	else while (*cp++ != -1);
     }
 
-    fclose(file);
-    flint_free(buf);
-
     flint_printf("Exception (qadic_ctx_init_conway).  The polynomial for \n");
     flint_printf("(p,d) = (%wd,%wd) is not present in the database.\n", *p, d);
     abort();
