# -*- makefile-gmake -*-

#############################################################################
# gdb crashes if I compile for 64 bit:
# -- loading .gdbinit
# -- loading .gdb-files
# warning: A handler for the OS ABI "Darwin" is not built into this configuration
# of GDB.  Attempting to continue with the default i386:x86-64 settings.
#   C-c C-c
# Try
#   gdb --osabi Darwin64
#############################################################################

# export GC_MAXIMUM_HEAP_SIZE = 300000000

PRODUCTION=yes
DEBUG=no
unexport DEBUG
PROFILE=no
unexport PROFILE

DIRECTORY = mac64
BRANCH := $(shell git branch --contains | grep '^\* ' | sed -e s=^..== -e s=/=.=g )
DIRECTORY := $(DIRECTORY)-$(BRANCH)

ifeq ($(GCC4),yes)
_CC  := gcc-4.9.4
_CXX := g++-4.9.4
_FC  := gfortran-4.9.4
DIRECTORY := $(DIRECTORY)-gcc4
else
ifeq ($(GCC5),yes)
_CC  = gcc-5
_CXX = g++-5
DIRECTORY := $(DIRECTORY)-gcc5
else
ifeq ($(GCC6),yes)
_CC  = gcc-6
_CXX = g++-6
DIRECTORY := $(DIRECTORY)-gcc6
else
ifeq ($(CLANG),yes)
DIRECTORY := $(DIRECTORY)-clang
_CC  := /usr/bin/gcc
_CXX := /usr/bin/g++
# disable some libraries that don't compile with clang:
# CONFIGOPTIONS += --disable-frobby  --disable-gfan
CONFIGOPTIONS += --disable-strip
export CFLAGS += -Wno-unknown-attributes
else
$(error compiler not specified)
endif
endif
endif
endif

default: all

# we used to build gc because homebrew compiles with clang and produces non-generic code and ignores the command line option -mtune=generic
#   $ gdb /usr/local/lib/libgc.1.dylib 
#   (gdb) x/i min_bytes_allocd+100
#   0x2dec <min_bytes_allocd+100>:	shrx   %rcx,%rax,%rcx
#   Alternatively, could use "brew install --cc=gcc-4.9 --build-from-source bdw-gc".

ifeq ($(PRODUCTION),yes)
   default: check
   DIRECTORY := $(DIRECTORY)-production
   CONFIGOPTIONS += --enable-dmg
   ifeq ($(DEBUG),yes)
      $(error PRODUCTION=yes and DEBUG=yes)
   endif
   ifeq ($(PROFILE),yes)
      $(error PRODUCTION=yes and PROFILE=yes)
   endif
endif
ifeq ($(DEBUG),yes)
   CONFIGOPTIONS += --enable-common-staging-area
   INSTALLOPTIONS += prefix=/none
   CONFIGOPTIONS += --enable-debug --enable-memdebug --disable-optimize --enable-static
   DIRECTORY := $(DIRECTORY)-debug
endif

ifeq ($(PROFILE),yes)
   CONFIGOPTIONS += --enable-common-staging-area
   INSTALLOPTIONS += prefix=/none
   CONFIGOPTIONS += --enable-profile
   DIRECTORY := $(DIRECTORY)-profile
endif

include Makefile.include

# Local Variables:
# compile-command: "time gmake -w -j4 -f Makefile.mac PRODUCTION=yes DEBUG=no CLANG=yes GCC5=no GCC6=no GCC4=no "
# End:
