-*- coding: utf-8 -*-

Subject: faster computations over finite fields desired
From: jakob kroeker <kroeker@gdv.uni-hannover.de>
To: Macaulay2@math.uiuc.edu
Date: Thu, 18 Oct 2007 16:16:19 +0200

Dear Macaulay developers!





For many algebraic problems, like matrix rank computation of a big 
Matrix over an finite field Macaulay routines could be much faster.


Let me give an example:

Recently i was asked by Dr. Matthias Schuett (Harward University ) and
Prof. v. Bothmer (University of Hannover) to compute the rank of 14.000
x 14.000 Matrix. They told me, that in Macaulay it would take too much
time. (rank computation of a 1.000x 1.000 dense matrix costs 80 seconds
on a common PC, so the same operation for a 14.000 x 14.000 Matrix
would cost approximately 50-90 Hours)

I implemented a 'naive' gaussian elimination and could solve the
described problem in just two hours. 

But there exists a better solution for this class of problems, namely
the FFLAS-FFPACK-Library (Finite field linear algebra subroutines).
Using this library the problem above was solved in 8 minutes!





So my opinion (and my concern) is:
It may be a good idea to integrate this library in the Macaulay-System.

FFLAS-FFPACK URL: 
http://ljk.imag.fr/membres/Jean-Guillaume.Dumas/FFLAS/







Thanks,




Jakob Kr√∂ker

Institute of Man-Machine-Communication at University of Hannover
=============================================================================

In-Reply-To: <200710181629.l9IGTrvV024225@u123.math.uiuc.edu>
From: Michael Stillman <mike@math.cornell.edu>
Subject: Re: faster computations over finite fields desired
Date: Thu, 18 Oct 2007 13:03:24 -0400
To: dan@math.uiuc.edu

Hi Dan,

I think that this might be a good idea.  I might also like to  
incorporate cddlib (it does some things much faster than our  
FourierMotzkin package, and this stuff is very useful).  Perhaps  
getting the makefile to add these two libraries (experimentally) to  
the list of libraries would be a good idea.

I would like to get his example (the huge one).  It might be that  
actually creating the matrix is what took a long time.  Anyway, it  
sounds like it would be a good test case.

-- Mike
